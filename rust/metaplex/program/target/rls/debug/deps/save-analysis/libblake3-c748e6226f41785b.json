{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8","program":"C:\\Users\\sagar\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","blake3","--edition=2018","C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=c748e6226f41785b","-C","extra-filename=-c748e6226f41785b","--out-dir","d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps","-L","dependency=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps","--extern","arrayref=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libarrayref-a631fdc76c373225.rmeta","--extern","arrayvec=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libarrayvec-c661dd41f1bc15f9.rmeta","--extern","cfg_if=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libcfg_if-718356dfb3920285.rmeta","--extern","constant_time_eq=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libconstant_time_eq-fd97f1905f50d860.rmeta","--extern","crypto_mac=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libcrypto_mac-bab4792b4bab0ac2.rmeta","--extern","digest=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libdigest-e0a5af8c0784d288.rmeta","--cap-lints","allow","-L","native=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\build\\blake3-b203da3322565901\\out","-L","native=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\build\\blake3-b203da3322565901\\out","--cfg","blake3_sse2_ffi","--cfg","blake3_sse41_ffi","--cfg","blake3_avx2_ffi","--cfg","blake3_avx512_ffi","-l","static=blake3_sse2_sse41_avx2_assembly","-l","static=blake3_avx512_assembly","--error-format=json","--sysroot","C:\\Users\\sagar\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libblake3-c748e6226f41785b.rmeta"},"prelude":{"crate_id":{"name":"blake3","disambiguator":[2752031443148200815,11590661895215704498]},"crate_root":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src","external_crates":[{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[902711862199739234,15082167224296373374]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5048311760381386034,12753961808535803278]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[847775214756591688,12437863933651081164]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18098153966720408130,4102567439342721650]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14085577876822856882,15393158987199036233]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[3188366355873518403,14471389999965490426]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10237517513868340142,18396708545822173986]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17305999185247584930,14125623615750666193]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7451980452763147359,4800032867518142595]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[842541340887862638,17591716377464122790]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14650435931294811010,18006816567319070280]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16073749092757737146,5785406473963590530]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9426002052484834533,14451905897035318657]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","num":14,"id":{"name":"arrayref","disambiguator":[14088986595054068927,1940171751432293296]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","num":15,"id":{"name":"crypto_mac","disambiguator":[1210715520325802426,8185948705911972907]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","num":16,"id":{"name":"generic_array","disambiguator":[6125076811704890659,9555327237265338941]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","num":17,"id":{"name":"serde","disambiguator":[2375289717161315889,15393998100997209667]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","num":18,"id":{"name":"serde_derive","disambiguator":[12991404398941312549,942121558420680893]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","num":19,"id":{"name":"typenum","disambiguator":[1952205607033064429,7847743123002599356]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","num":20,"id":{"name":"subtle","disambiguator":[10284896724090985869,10497008215470073383]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","num":21,"id":{"name":"digest","disambiguator":[14624047499830040459,12562087962237742306]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":22,"id":{"name":"arrayvec","disambiguator":[6986113772360947029,17318314144997557191]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","num":23,"id":{"name":"cfg_if","disambiguator":[3777085778382991852,15684568353775575638]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","num":24,"id":{"name":"constant_time_eq","disambiguator":[12898435283376736638,1344566332511203880]}}],"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":0,"byte_end":53715,"line_start":1,"line_end":1359,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88624,"byte_end":88634,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"alias_span":null,"name":"crypto_mac","value":"","parent":{"krate":0,"index":219}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88644,"byte_end":88650,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":219}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":0,"byte_end":53715,"line_start":1,"line_end":1359,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":66},{"krate":0,"index":85},{"krate":0,"index":112},{"krate":0,"index":165},{"krate":0,"index":192},{"krate":0,"index":219},{"krate":0,"index":270},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":666},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":343},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":677},{"krate":0,"index":685},{"krate":0,"index":364},{"krate":0,"index":687},{"krate":0,"index":696},{"krate":0,"index":369},{"krate":0,"index":378},{"krate":0,"index":702},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":395},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":726},{"krate":0,"index":731},{"krate":0,"index":407},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":429},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439}],"decl_id":null,"docs":" The official Rust implementation of the [BLAKE3] cryptographic hash\n function.","sig":null,"attributes":[{"value":"/ The official Rust implementation of the [BLAKE3] cryptographic hash","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ function.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":72,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":90,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":105,"byte_end":108,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":109,"byte_end":116,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":117,"byte_end":176,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/ // Hash an input all at once.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":177,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"/ let hash1 = blake3::hash(b\"foobarbaz\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":211,"byte_end":254,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":255,"byte_end":258,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":259,"byte_end":294,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":295,"byte_end":338,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":339,"byte_end":365,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":366,"byte_end":392,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":393,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ let hash2 = hasher.finalize();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":420,"byte_end":454,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(hash1, hash2);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":455,"byte_end":484,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":485,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":489,"byte_end":556,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":557,"byte_end":588,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":589,"byte_end":620,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":621,"byte_end":671,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":672,"byte_end":708,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], hash1.as_bytes());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":709,"byte_end":757,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":758,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":766,"byte_end":769,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Print a hash as hex.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":770,"byte_end":797,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ println!(\"{}\", hash1.to_hex());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":798,"byte_end":833,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":834,"byte_end":846,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":847,"byte_end":854,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":855,"byte_end":862,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":863,"byte_end":866,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Cargo Features","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":867,"byte_end":887,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":888,"byte_end":891,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `rayon` feature provides [Rayon]-based multi-threading, in particular","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":892,"byte_end":969,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the [`join::RayonJoin`] type for use with [`Hasher::update_with_join`]. It","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":970,"byte_end":1048,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ is disabled by default, but enabled for [docs.rs].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1049,"byte_end":1103,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1104,"byte_end":1107,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The `neon` feature enables ARM NEON support. Currently there is no runtime","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1108,"byte_end":1186,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ CPU feature detection for NEON, so you must only enable this feature for","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1187,"byte_end":1263,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ targets that are known to have NEON support. In particular, some ARMv7","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1264,"byte_end":1338,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ targets support NEON, and some don't.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1339,"byte_end":1380,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1381,"byte_end":1384,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The `std` feature (enabled by default) is required for implementations of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1385,"byte_end":1462,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ the [`Write`] and [`Seek`] traits, and also for runtime CPU feature","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1463,"byte_end":1534,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/ detection. If this feature is disabled, the only way to use the SIMD","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1535,"byte_end":1607,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ implementations in this crate is to enable the corresponding instruction","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1608,"byte_end":1684,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ sets statically for the entire build, with e.g. `RUSTFLAGS=\"-C","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1685,"byte_end":1751,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ target-cpu=native\"`. The resulting binary will not be portable to other","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1752,"byte_end":1827,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ machines.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1828,"byte_end":1841,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1842,"byte_end":1845,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [BLAKE3]: https://blake3.io","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1846,"byte_end":1877,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/ [Rayon]: https://github.com/rayon-rs/rayon","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1878,"byte_end":1924,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ [`join::RayonJoin`]: join/enum.RayonJoin.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1925,"byte_end":1974,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":1975,"byte_end":2051,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ [docs.rs]: https://docs.rs/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":2052,"byte_end":2083,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":2084,"byte_end":2148,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ [`Seek`]: https://doc.rust-lang.org/std/io/trait.Seek.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":2149,"byte_end":2211,"line_start":58,"line_end":58,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"guts","qualname":"::guts","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":4},{"krate":0,"index":9}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54001,"byte_end":54011,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"ChunkState","qualname":"::guts::ChunkState","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54205,"byte_end":54208,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<ChunkState>::new","value":"pub fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54433,"byte_end":54436,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"len","qualname":"<ChunkState>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54412,"byte_end":54421,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54508,"byte_end":54514,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"update","qualname":"<ChunkState>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54487,"byte_end":54496,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54616,"byte_end":54624,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ChunkState>::finalize","value":"pub fn finalize(&Self, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54974,"byte_end":54983,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"parent_cv","qualname":"::guts::parent_cv","value":"pub fn parent_cv(&crate::Hash, &crate::Hash, bool) -> crate::Hash","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"platform","qualname":"::platform","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":31},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":62}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":56538,"byte_end":56553,"line_start":8,"line_end":8,"column_start":27,"column_end":42},"name":"MAX_SIMD_DEGREE","qualname":"::platform::MAX_SIMD_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57280,"byte_end":57300,"line_start":28,"line_end":28,"column_start":27,"column_end":47},"name":"MAX_SIMD_DEGREE_OR_2","qualname":"::platform::MAX_SIMD_DEGREE_OR_2","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57637,"byte_end":57645,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Portable","qualname":"::platform::Platform::Portable","value":"Platform::Portable","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57712,"byte_end":57716,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"SSE2","qualname":"::platform::Platform::SSE2","value":"Platform::SSE2","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57651,"byte_end":57707,"line_start":43,"line_end":43,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57783,"byte_end":57788,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"SSE41","qualname":"::platform::Platform::SSE41","value":"Platform::SSE41","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57722,"byte_end":57778,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57855,"byte_end":57859,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"AVX2","qualname":"::platform::Platform::AVX2","value":"Platform::AVX2","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57794,"byte_end":57850,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57956,"byte_end":57962,"line_start":51,"line_end":51,"column_start":5,"column_end":11},"name":"AVX512","qualname":"::platform::Platform::AVX512","value":"Platform::AVX512","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57865,"byte_end":57890,"line_start":49,"line_end":49,"column_start":5,"column_end":30}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57895,"byte_end":57951,"line_start":50,"line_end":50,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":57622,"byte_end":57630,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"Platform","qualname":"::platform::Platform","value":"pub enum Platform { Portable, SSE2, SSE41, AVX2, AVX512, }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":58064,"byte_end":58070,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"detect","qualname":"<Platform>::detect","value":"pub fn detect() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unreachable_code)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":58026,"byte_end":58052,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":58862,"byte_end":58873,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"simd_degree","qualname":"<Platform>::simd_degree","value":"pub fn simd_degree(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":59577,"byte_end":59594,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"compress_in_place","qualname":"<Platform>::compress_in_place","value":"pub fn compress_in_place(&Self, &mut CVWords, &[u8; ], u8, u64, u8)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":60975,"byte_end":60987,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"compress_xof","qualname":"<Platform>::compress_xof","value":"pub fn compress_xof(&Self, &CVWords, &[u8; ], u8, u64, u8) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":62911,"byte_end":62920,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"hash_many","qualname":"<Platform>::hash_many","value":"pub fn hash_many<A: arrayvec::Array<Item =\n                 u8>>(&Self, &[&A], &CVWords, u64, IncrementCounter, u8, u8,\n                      u8, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":65993,"byte_end":66001,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"portable","qualname":"<Platform>::portable","value":"pub fn portable() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66116,"byte_end":66120,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"sse2","qualname":"<Platform>::sse2","value":"pub fn sse2() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66048,"byte_end":66104,"line_start":281,"line_end":281,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66322,"byte_end":66327,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"sse41","qualname":"<Platform>::sse41","value":"pub fn sse41() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66254,"byte_end":66310,"line_start":290,"line_end":290,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66531,"byte_end":66535,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"avx2","qualname":"<Platform>::avx2","value":"pub fn avx2() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66463,"byte_end":66519,"line_start":299,"line_end":299,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66767,"byte_end":66773,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"avx512","qualname":"<Platform>::avx512","value":"pub fn avx512() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66669,"byte_end":66694,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":66699,"byte_end":66755,"line_start":309,"line_end":309,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":67269,"byte_end":67284,"line_start":330,"line_end":330,"column_start":8,"column_end":23},"name":"avx512_detected","qualname":"::platform::avx512_detected","value":"pub fn avx512_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(blake3_avx512_ffi)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":67161,"byte_end":67186,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":67187,"byte_end":67243,"line_start":328,"line_end":328,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":67244,"byte_end":67261,"line_start":329,"line_end":329,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":67868,"byte_end":67881,"line_start":352,"line_end":352,"column_start":8,"column_end":21},"name":"avx2_detected","qualname":"::platform::avx2_detected","value":"pub fn avx2_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":67786,"byte_end":67842,"line_start":350,"line_end":350,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":67843,"byte_end":67860,"line_start":351,"line_end":351,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":68383,"byte_end":68397,"line_start":374,"line_end":374,"column_start":8,"column_end":22},"name":"sse41_detected","qualname":"::platform::sse41_detected","value":"pub fn sse41_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":68301,"byte_end":68357,"line_start":372,"line_end":372,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":68358,"byte_end":68375,"line_start":373,"line_end":373,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":68931,"byte_end":68944,"line_start":397,"line_end":397,"column_start":8,"column_end":21},"name":"sse2_detected","qualname":"::platform::sse2_detected","value":"pub fn sse2_detected() -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":68822,"byte_end":68878,"line_start":394,"line_end":394,"column_start":1,"column_end":57}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":68879,"byte_end":68896,"line_start":395,"line_end":395,"column_start":1,"column_end":18}},{"value":"allow(unreachable_code)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":68897,"byte_end":68923,"line_start":396,"line_end":396,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":69389,"byte_end":69411,"line_start":418,"line_end":418,"column_start":8,"column_end":30},"name":"words_from_le_bytes_32","qualname":"::platform::words_from_le_bytes_32","value":"pub fn words_from_le_bytes_32(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":69364,"byte_end":69381,"line_start":417,"line_end":417,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":70010,"byte_end":70032,"line_start":432,"line_end":432,"column_start":8,"column_end":30},"name":"words_from_le_bytes_64","qualname":"::platform::words_from_le_bytes_64","value":"pub fn words_from_le_bytes_64(&[u8; ]) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":69985,"byte_end":70002,"line_start":431,"line_end":431,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":71149,"byte_end":71171,"line_start":454,"line_end":454,"column_start":8,"column_end":30},"name":"le_bytes_from_words_32","qualname":"::platform::le_bytes_from_words_32","value":"pub fn le_bytes_from_words_32(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":71124,"byte_end":71141,"line_start":453,"line_end":453,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":71755,"byte_end":71777,"line_start":468,"line_end":468,"column_start":8,"column_end":30},"name":"le_bytes_from_words_64","qualname":"::platform::le_bytes_from_words_64","value":"pub fn le_bytes_from_words_64(&[u32; ]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":71730,"byte_end":71747,"line_start":467,"line_end":467,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":265}],"decl_id":null,"docs":" Implementations of commonly used traits like\n [`digest::Digest`](https://crates.io/crates/digest) and\n [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).\n","sig":null,"attributes":[{"value":"/ Implementations of commonly used traits like","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88444,"byte_end":88492,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/ [`digest::Digest`](https://crates.io/crates/digest) and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88493,"byte_end":88552,"line_start":2,"line_end":2,"column_start":1,"column_end":60}},{"value":"/ [`crypto_mac::Mac`](https://crates.io/crates/crypto-mac).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88553,"byte_end":88614,"line_start":3,"line_end":3,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"join","qualname":"::join","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":" The multi-threading abstractions used by [`Hasher::update_with_join`].","sig":null,"attributes":[{"value":"/ The multi-threading abstractions used by [`Hasher::update_with_join`].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":93773,"byte_end":93847,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":93848,"byte_end":93851,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Different implementations of the `Join` trait determine whether","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":93852,"byte_end":93919,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ [`Hasher::update_with_join`] performs multi-threading on sufficiently large","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":93920,"byte_end":93999,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ inputs. The `SerialJoin` implementation is single-threaded, and the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94000,"byte_end":94071,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ `RayonJoin` implementation (gated by the `rayon` feature) is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94072,"byte_end":94136,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ multi-threaded. Interfaces other than [`Hasher::update_with_join`], like","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94137,"byte_end":94213,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ [`hash`] and [`Hasher::update`], always use `SerialJoin` internally.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94214,"byte_end":94286,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94287,"byte_end":94290,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `Join` trait is an almost exact copy of the [`rayon::join`] API, and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94291,"byte_end":94367,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `RayonJoin` is the only non-trivial implementation provided. The only","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94368,"byte_end":94441,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ difference between the function signature in the `Join` trait and the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94442,"byte_end":94515,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ underlying one in Rayon, is that the trait method includes two length","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94516,"byte_end":94589,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ parameters. This gives an implementation the option of e.g. setting a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94590,"byte_end":94663,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ subtree size threshold below which it keeps splits on the same thread.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94664,"byte_end":94738,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ However, neither of the two provided implementations currently makes use of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94739,"byte_end":94818,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ those parameters. Note that in Rayon, the very first `join` call is more","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94819,"byte_end":94895,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ expensive than subsequent calls, because it moves work from the calling","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94896,"byte_end":94971,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ thread into the thread pool. That makes a coarse-grained input length","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":94972,"byte_end":95045,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ threshold in the caller more effective than a fine-grained subtree size","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95046,"byte_end":95121,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ threshold after the implementation has already started recursing.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95122,"byte_end":95191,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95192,"byte_end":95195,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95196,"byte_end":95209,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95210,"byte_end":95213,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95214,"byte_end":95221,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ // Hash a large input using multi-threading. Note that multi-threading","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95222,"byte_end":95296,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ // comes with some overhead, and it can actually hurt performance for small","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95297,"byte_end":95376,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ // inputs. The meaning of \"small\" varies, however, depending on the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95377,"byte_end":95448,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ // platform and the number of threads. (On x86_64, the cutoff tends to be","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95449,"byte_end":95526,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ // around 128 KiB.) You should benchmark your own use case to see whether","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95527,"byte_end":95604,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ // multi-threading helps.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95605,"byte_end":95634,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/ # #[cfg(feature = \"rayon\")]","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95635,"byte_end":95666,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95667,"byte_end":95674,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # fn some_large_input() -> &'static [u8] { b\"foo\" }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95675,"byte_end":95730,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ let input: &[u8] = some_large_input();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95731,"byte_end":95773,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95774,"byte_end":95817,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/ hasher.update_with_join::<blake3::join::RayonJoin>(input);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95818,"byte_end":95880,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/ let hash = hasher.finalize();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95881,"byte_end":95914,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95915,"byte_end":95922,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95923,"byte_end":95930,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95931,"byte_end":95934,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update_with_join`]: ../struct.Hasher.html#method.update_with_join","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":95935,"byte_end":96014,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ [`Hasher::update`]: ../struct.Hasher.html#method.update","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96015,"byte_end":96074,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/ [`hash`]: ../fn.hash.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96075,"byte_end":96104,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ [`rayon::join`]: https://docs.rs/rayon/1.3.0/rayon/fn.join.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96105,"byte_end":96172,"line_start":45,"line_end":45,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96331,"byte_end":96335,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"Join","qualname":"::join::Join","value":"Join","parent":null,"children":[{"krate":0,"index":272}],"decl_id":null,"docs":" The trait that abstracts over single-threaded and multi-threaded recursion.","sig":null,"attributes":[{"value":"/ The trait that abstracts over single-threaded and multi-threaded recursion.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96174,"byte_end":96253,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96254,"byte_end":96257,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See the [`join` module docs](index.html) for more details.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96258,"byte_end":96320,"line_start":49,"line_end":49,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96345,"byte_end":96349,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"join","qualname":"::join::Join::join","value":"pub fn join<A, B, RA, RB>(A, B, usize, usize) -> (RA, RB) where A: FnOnce() ->\nRA + Send, B: FnOnce() -> RB + Send, RA: Send, RB: Send","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96864,"byte_end":96874,"line_start":65,"line_end":65,"column_start":10,"column_end":20},"name":"SerialJoin","qualname":"::join::SerialJoin","value":"pub enum SerialJoin { }","parent":null,"children":[],"decl_id":null,"docs":" The trivial, serial implementation of `Join`. The left and right sides are\n executed one after the other, on the calling thread. The standalone hashing\n functions and the `Hasher::update` method use this implementation\n internally.","sig":null,"attributes":[{"value":"/ The trivial, serial implementation of `Join`. The left and right sides are","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96543,"byte_end":96621,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed one after the other, on the calling thread. The standalone hashing","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96622,"byte_end":96701,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ functions and the `Hasher::update` method use this implementation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96702,"byte_end":96771,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ internally.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96772,"byte_end":96787,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96788,"byte_end":96791,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ See the [`join` module docs](index.html) for more details.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96792,"byte_end":96854,"line_start":64,"line_end":64,"column_start":1,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3596,"byte_end":3603,"line_start":116,"line_end":116,"column_start":11,"column_end":18},"name":"OUT_LEN","qualname":"::OUT_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a [`Hash`](struct.Hash.html), 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a [`Hash`](struct.Hash.html), 32.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3525,"byte_end":3585,"line_start":115,"line_end":115,"column_start":1,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3666,"byte_end":3673,"line_start":119,"line_end":119,"column_start":11,"column_end":18},"name":"KEY_LEN","qualname":"::KEY_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes in a key, 32.\n","sig":null,"attributes":[{"value":"/ The number of bytes in a key, 32.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3618,"byte_end":3655,"line_start":118,"line_end":118,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3849,"byte_end":3858,"line_start":124,"line_end":124,"column_start":11,"column_end":20},"name":"BLOCK_LEN","qualname":"::BLOCK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3897,"byte_end":3906,"line_start":126,"line_end":126,"column_start":11,"column_end":20},"name":"CHUNK_LEN","qualname":"::CHUNK_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3947,"byte_end":3956,"line_start":128,"line_end":128,"column_start":11,"column_end":20},"name":"MAX_DEPTH","qualname":"::MAX_DEPTH","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7230,"byte_end":7234,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"","parent":null,"children":[],"decl_id":null,"docs":" An output of the default size, 32 bytes, which provides constant-time\n equality checking.","sig":null,"attributes":[{"value":"/ An output of the default size, 32 bytes, which provides constant-time","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":5632,"byte_end":5705,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ equality checking.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":5706,"byte_end":5728,"line_start":175,"line_end":175,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":5729,"byte_end":5732,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ `Hash` implements [`From`] and [`Into`] for `[u8; 32]`, and it provides an","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":5733,"byte_end":5811,"line_start":177,"line_end":177,"column_start":1,"column_end":79}},{"value":"/ explicit [`as_bytes`] method returning `&[u8; 32]`. However, byte arrays","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":5812,"byte_end":5888,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ and slices don't provide constant-time equality checking, which is often a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":5889,"byte_end":5967,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/ security requirement in software that handles private data. `Hash` doesn't","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":5968,"byte_end":6046,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ implement [`Deref`] or [`AsRef`], to avoid situations where a type","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6047,"byte_end":6117,"line_start":181,"line_end":181,"column_start":1,"column_end":71}},{"value":"/ conversion happens implicitly and the constant-time property is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6118,"byte_end":6185,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/ accidentally lost.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6186,"byte_end":6208,"line_start":183,"line_end":183,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6209,"byte_end":6212,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ `Hash` provides the [`to_hex`] method for converting to hexadecimal. It","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6213,"byte_end":6288,"line_start":185,"line_end":185,"column_start":1,"column_end":76}},{"value":"/ doesn't directly support converting from hexadecimal, but here's an example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6289,"byte_end":6368,"line_start":186,"line_end":186,"column_start":1,"column_end":80}},{"value":"/ of doing that with the [`hex`] crate:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6369,"byte_end":6410,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6411,"byte_end":6414,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6415,"byte_end":6422,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6423,"byte_end":6482,"line_start":190,"line_end":190,"column_start":1,"column_end":60}},{"value":"/ use std::convert::TryInto;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6483,"byte_end":6513,"line_start":191,"line_end":191,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6514,"byte_end":6517,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let hash_hex = \"d74981efa70a0c880b8d8c1985d075dbcbf679b99a5f9914e5aaf96b831a9e24\";","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6518,"byte_end":6604,"line_start":193,"line_end":193,"column_start":1,"column_end":87}},{"value":"/ let hash_bytes = hex::decode(hash_hex)?;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6605,"byte_end":6649,"line_start":194,"line_end":194,"column_start":1,"column_end":45}},{"value":"/ let hash_array: [u8; blake3::OUT_LEN] = hash_bytes[..].try_into()?;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6650,"byte_end":6721,"line_start":195,"line_end":195,"column_start":1,"column_end":72}},{"value":"/ let hash: blake3::Hash = hash_array.into();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6722,"byte_end":6769,"line_start":196,"line_end":196,"column_start":1,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6770,"byte_end":6782,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6783,"byte_end":6790,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6791,"byte_end":6798,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6799,"byte_end":6802,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`From`]: https://doc.rust-lang.org/std/convert/trait.From.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6803,"byte_end":6870,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/ [`Into`]: https://doc.rust-lang.org/std/convert/trait.Into.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6871,"byte_end":6938,"line_start":202,"line_end":202,"column_start":1,"column_end":68}},{"value":"/ [`as_bytes`]: #method.as_bytes","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6939,"byte_end":6973,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/ [`Deref`]: https://doc.rust-lang.org/stable/std/ops/trait.Deref.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":6974,"byte_end":7046,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ [`AsRef`]: https://doc.rust-lang.org/std/convert/trait.AsRef.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7047,"byte_end":7116,"line_start":205,"line_end":205,"column_start":1,"column_end":70}},{"value":"/ [`to_hex`]: #method.to_hex","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7117,"byte_end":7147,"line_start":206,"line_end":206,"column_start":1,"column_end":31}},{"value":"/ [`hex`]: https://crates.io/crates/hex","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7148,"byte_end":7189,"line_start":207,"line_end":207,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7466,"byte_end":7474,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The bytes of the `Hash`. Note that byte arrays don't provide\n constant-time equality checking, so if  you need to compare hashes,\n prefer the `Hash` type.\n","sig":null,"attributes":[{"value":"/ The bytes of the `Hash`. Note that byte arrays don't provide","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7268,"byte_end":7332,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/ constant-time equality checking, so if  you need to compare hashes,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7337,"byte_end":7408,"line_start":213,"line_end":213,"column_start":5,"column_end":76}},{"value":"/ prefer the `Hash` type.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7413,"byte_end":7440,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7445,"byte_end":7454,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7924,"byte_end":7930,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"pub fn to_hex(&Self) -> ArrayString<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" The hexadecimal encoding of the `Hash`. The returned [`ArrayString`] is\n a fixed size and doesn't allocate memory on the heap. Note that\n [`ArrayString`] doesn't provide constant-time equality checking, so if\n you need to compare hashes, prefer the `Hash` type.","sig":null,"attributes":[{"value":"/ The hexadecimal encoding of the `Hash`. The returned [`ArrayString`] is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7529,"byte_end":7604,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ a fixed size and doesn't allocate memory on the heap. Note that","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7609,"byte_end":7676,"line_start":221,"line_end":221,"column_start":5,"column_end":72}},{"value":"/ [`ArrayString`] doesn't provide constant-time equality checking, so if","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7681,"byte_end":7755,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ you need to compare hashes, prefer the `Hash` type.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7760,"byte_end":7815,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7820,"byte_end":7823,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`ArrayString`]: https://docs.rs/arrayvec/0.5.1/arrayvec/struct.ArrayString.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7828,"byte_end":7912,"line_start":225,"line_end":225,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":14876,"byte_end":14879,"line_start":455,"line_end":455,"column_start":5,"column_end":8},"name":"Yes","qualname":"::IncrementCounter::Yes","value":"IncrementCounter::Yes","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":14885,"byte_end":14887,"line_start":456,"line_end":456,"column_start":5,"column_end":7},"name":"No","qualname":"::IncrementCounter::No","value":"IncrementCounter::No","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":14853,"byte_end":14869,"line_start":454,"line_end":454,"column_start":10,"column_end":26},"name":"IncrementCounter","qualname":"::IncrementCounter","value":"pub enum IncrementCounter { Yes, No, }","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":705}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25858,"byte_end":25862,"line_start":727,"line_end":727,"column_start":8,"column_end":12},"name":"hash","qualname":"::hash","value":"pub fn hash(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The default hash function.","sig":null,"attributes":[{"value":"/ The default hash function.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25477,"byte_end":25507,"line_start":718,"line_end":718,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25508,"byte_end":25511,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ For an incremental version that accepts multiple writes, see [`Hasher::update`].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25512,"byte_end":25596,"line_start":720,"line_end":720,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25597,"byte_end":25600,"line_start":721,"line_end":721,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25601,"byte_end":25678,"line_start":722,"line_end":722,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25679,"byte_end":25712,"line_start":723,"line_end":723,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25713,"byte_end":25716,"line_start":724,"line_end":724,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update`]: struct.Hasher.html#method.update","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25717,"byte_end":25773,"line_start":725,"line_end":725,"column_start":1,"column_end":57}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25774,"byte_end":25850,"line_start":726,"line_end":726,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26494,"byte_end":26504,"line_start":743,"line_end":743,"column_start":8,"column_end":18},"name":"keyed_hash","qualname":"::keyed_hash","value":"pub fn keyed_hash(&[u8; ], &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" The keyed hash function.","sig":null,"attributes":[{"value":"/ The keyed hash function.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25937,"byte_end":25965,"line_start":731,"line_end":731,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25966,"byte_end":25969,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ This is suitable for use as a message authentication code, for","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":25970,"byte_end":26036,"line_start":733,"line_end":733,"column_start":1,"column_end":67}},{"value":"/ example to replace an HMAC instance.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26037,"byte_end":26077,"line_start":734,"line_end":734,"column_start":1,"column_end":41}},{"value":"/  In that use case, the constant-time equality checking provided by","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26078,"byte_end":26148,"line_start":735,"line_end":735,"column_start":1,"column_end":71}},{"value":"/ [`Hash`](struct.Hash.html) is almost always a security requirement, and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26149,"byte_end":26224,"line_start":736,"line_end":736,"column_start":1,"column_end":76}},{"value":"/ callers need to be careful not to compare MACs as raw bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26225,"byte_end":26289,"line_start":737,"line_end":737,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26290,"byte_end":26293,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26294,"byte_end":26371,"line_start":739,"line_end":739,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26372,"byte_end":26405,"line_start":740,"line_end":740,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26406,"byte_end":26409,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26410,"byte_end":26486,"line_start":742,"line_end":742,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28610,"byte_end":28620,"line_start":781,"line_end":781,"column_start":8,"column_end":18},"name":"derive_key","qualname":"::derive_key","value":"pub fn derive_key(&str, &[u8], &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" The key derivation function.","sig":null,"attributes":[{"value":"/ The key derivation function.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26676,"byte_end":26708,"line_start":748,"line_end":748,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26709,"byte_end":26712,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ Given cryptographic key material of any length and a context string of any","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26713,"byte_end":26791,"line_start":750,"line_end":750,"column_start":1,"column_end":79}},{"value":"/ length, this function outputs a derived subkey of any length. **The context","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26792,"byte_end":26871,"line_start":751,"line_end":751,"column_start":1,"column_end":80}},{"value":"/ string should be hardcoded, globally unique, and application-specific.** A","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26872,"byte_end":26950,"line_start":752,"line_end":752,"column_start":1,"column_end":79}},{"value":"/ good default format for such strings is `\"[application] [commit timestamp]","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":26951,"byte_end":27029,"line_start":753,"line_end":753,"column_start":1,"column_end":79}},{"value":"/ [purpose]\"`, e.g., `\"example.com 2019-12-25 16:18:03 session tokens v1\"`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27030,"byte_end":27107,"line_start":754,"line_end":754,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27108,"byte_end":27111,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ Key derivation is important when you want to use the same key in multiple","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27112,"byte_end":27189,"line_start":756,"line_end":756,"column_start":1,"column_end":78}},{"value":"/ algorithms or use cases. Using the same key with different cryptographic","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27190,"byte_end":27266,"line_start":757,"line_end":757,"column_start":1,"column_end":77}},{"value":"/ algorithms is generally forbidden, and deriving a separate subkey for each","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27267,"byte_end":27345,"line_start":758,"line_end":758,"column_start":1,"column_end":79}},{"value":"/ use case protects you from bad interactions. Derived keys also mitigate the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27346,"byte_end":27425,"line_start":759,"line_end":759,"column_start":1,"column_end":80}},{"value":"/ damage from one part of your application accidentally leaking its key.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27426,"byte_end":27500,"line_start":760,"line_end":760,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27501,"byte_end":27504,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ As a rare exception to that general rule, however, it is possible to use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27505,"byte_end":27581,"line_start":762,"line_end":762,"column_start":1,"column_end":77}},{"value":"/ `derive_key` itself with key material that you are already using with","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27582,"byte_end":27655,"line_start":763,"line_end":763,"column_start":1,"column_end":74}},{"value":"/ another algorithm. You might need to do this if you're adding features to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27656,"byte_end":27733,"line_start":764,"line_end":764,"column_start":1,"column_end":78}},{"value":"/ an existing application, which does not yet use key derivation internally.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27734,"byte_end":27812,"line_start":765,"line_end":765,"column_start":1,"column_end":79}},{"value":"/ However, you still must not share key material with algorithms that forbid","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27813,"byte_end":27891,"line_start":766,"line_end":766,"column_start":1,"column_end":79}},{"value":"/ key reuse entirely, like a one-time pad.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27892,"byte_end":27936,"line_start":767,"line_end":767,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27937,"byte_end":27940,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ Note that BLAKE3 is not a password hash, and **`derive_key` should never be","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":27941,"byte_end":28020,"line_start":769,"line_end":769,"column_start":1,"column_end":80}},{"value":"/ used with passwords.** Instead, use a dedicated password hash like","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28021,"byte_end":28091,"line_start":770,"line_end":770,"column_start":1,"column_end":71}},{"value":"/ [Argon2]. Password hashes are entirely different from generic hash","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28092,"byte_end":28162,"line_start":771,"line_end":771,"column_start":1,"column_end":71}},{"value":"/ functions, with opposite design requirements.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28163,"byte_end":28212,"line_start":772,"line_end":772,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28213,"byte_end":28216,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ This function is always single-threaded. For multi-threading support, see","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28217,"byte_end":28294,"line_start":774,"line_end":774,"column_start":1,"column_end":78}},{"value":"/ [`Hasher::update_with_join`].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28295,"byte_end":28328,"line_start":775,"line_end":775,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28329,"byte_end":28332,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ [`Hasher::new_derive_key`]: struct.Hasher.html#method.new_derive_key","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28333,"byte_end":28405,"line_start":777,"line_end":777,"column_start":1,"column_end":73}},{"value":"/ [`Hasher::finalize_xof`]: struct.Hasher.html#method.finalize_xof","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28406,"byte_end":28474,"line_start":778,"line_end":778,"column_start":1,"column_end":69}},{"value":"/ [Argon2]: https://en.wikipedia.org/wiki/Argon2","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28475,"byte_end":28525,"line_start":779,"line_end":779,"column_start":1,"column_end":51}},{"value":"/ [`Hasher::update_with_join`]: struct.Hasher.html#method.update_with_join","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":28526,"byte_end":28602,"line_start":780,"line_end":780,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30776,"byte_end":30782,"line_start":844,"line_end":844,"column_start":12,"column_end":18},"name":"Hasher","qualname":"::Hasher","value":"Hasher {  }","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"decl_id":null,"docs":" An incremental hash state that can accept any number of writes.","sig":null,"attributes":[{"value":"/ An incremental hash state that can accept any number of writes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29462,"byte_end":29529,"line_start":808,"line_end":808,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29530,"byte_end":29533,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ In addition to its inherent methods, this type implements several commonly","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29534,"byte_end":29612,"line_start":810,"line_end":810,"column_start":1,"column_end":79}},{"value":"/ used traits from the [`digest`](https://crates.io/crates/digest) and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29613,"byte_end":29685,"line_start":811,"line_end":811,"column_start":1,"column_end":73}},{"value":"/ [`crypto_mac`](https://crates.io/crates/crypto-mac) crates.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29686,"byte_end":29749,"line_start":812,"line_end":812,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29750,"byte_end":29753,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ **Performance note:** The [`update`] and [`update_with_join`] methods","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29754,"byte_end":29827,"line_start":814,"line_end":814,"column_start":1,"column_end":74}},{"value":"/ perform poorly when the caller's input buffer is small. See their method","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29828,"byte_end":29904,"line_start":815,"line_end":815,"column_start":1,"column_end":77}},{"value":"/ docs below. A 16 KiB buffer is large enough to leverage all currently","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29905,"byte_end":29978,"line_start":816,"line_end":816,"column_start":1,"column_end":74}},{"value":"/ supported SIMD instruction sets.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":29979,"byte_end":30015,"line_start":817,"line_end":817,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30016,"byte_end":30019,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30020,"byte_end":30034,"line_start":819,"line_end":819,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30035,"byte_end":30038,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30039,"byte_end":30046,"line_start":821,"line_end":821,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30047,"byte_end":30106,"line_start":822,"line_end":822,"column_start":1,"column_end":60}},{"value":"/ // Hash an input incrementally.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30107,"byte_end":30142,"line_start":823,"line_end":823,"column_start":1,"column_end":36}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30143,"byte_end":30186,"line_start":824,"line_end":824,"column_start":1,"column_end":44}},{"value":"/ hasher.update(b\"foo\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30187,"byte_end":30213,"line_start":825,"line_end":825,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"bar\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30214,"byte_end":30240,"line_start":826,"line_end":826,"column_start":1,"column_end":27}},{"value":"/ hasher.update(b\"baz\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30241,"byte_end":30267,"line_start":827,"line_end":827,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(hasher.finalize(), blake3::hash(b\"foobarbaz\"));","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30268,"byte_end":30330,"line_start":828,"line_end":828,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30331,"byte_end":30334,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ // Extended output. OutputReader also implements Read and Seek.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30335,"byte_end":30402,"line_start":830,"line_end":830,"column_start":1,"column_end":68}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30403,"byte_end":30434,"line_start":831,"line_end":831,"column_start":1,"column_end":32}},{"value":"/ let mut output = [0; 1000];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30435,"byte_end":30466,"line_start":832,"line_end":832,"column_start":1,"column_end":32}},{"value":"/ let mut output_reader = hasher.finalize_xof();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30467,"byte_end":30517,"line_start":833,"line_end":833,"column_start":1,"column_end":51}},{"value":"/ output_reader.fill(&mut output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30518,"byte_end":30554,"line_start":834,"line_end":834,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(&output[..32], blake3::hash(b\"foobarbaz\").as_bytes());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30555,"byte_end":30624,"line_start":835,"line_end":835,"column_start":1,"column_end":70}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30625,"byte_end":30632,"line_start":836,"line_end":836,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30633,"byte_end":30645,"line_start":837,"line_end":837,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30646,"byte_end":30653,"line_start":838,"line_end":838,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30654,"byte_end":30661,"line_start":839,"line_end":839,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30662,"byte_end":30665,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ [`update`]: #method.update","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30666,"byte_end":30696,"line_start":841,"line_end":841,"column_start":1,"column_end":31}},{"value":"/ [`update_with_join`]: #method.update_with_join","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":30697,"byte_end":30747,"line_start":842,"line_end":842,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31561,"byte_end":31564,"line_start":865,"line_end":865,"column_start":12,"column_end":15},"name":"new","qualname":"<Hasher>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the regular hash function.\n","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the regular hash function.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31490,"byte_end":31549,"line_start":864,"line_end":864,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31770,"byte_end":31779,"line_start":873,"line_end":873,"column_start":12,"column_end":21},"name":"new_keyed","qualname":"<Hasher>::new_keyed","value":"pub fn new_keyed(&[u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the keyed hash function. See\n [`keyed_hash`].","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the keyed hash function. See","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31622,"byte_end":31683,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/ [`keyed_hash`].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31688,"byte_end":31707,"line_start":870,"line_end":870,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31712,"byte_end":31715,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [`keyed_hash`]: fn.keyed_hash.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31720,"byte_end":31758,"line_start":872,"line_end":872,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32179,"byte_end":32193,"line_start":883,"line_end":883,"column_start":12,"column_end":26},"name":"new_derive_key","qualname":"<Hasher>::new_derive_key","value":"pub fn new_derive_key(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Hasher` for the key derivation function. See\n [`derive_key`]. The context string should be hardcoded, globally\n unique, and application-specific.","sig":null,"attributes":[{"value":"/ Construct a new `Hasher` for the key derivation function. See","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31936,"byte_end":32001,"line_start":878,"line_end":878,"column_start":5,"column_end":70}},{"value":"/ [`derive_key`]. The context string should be hardcoded, globally","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32006,"byte_end":32074,"line_start":879,"line_end":879,"column_start":5,"column_end":73}},{"value":"/ unique, and application-specific.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32079,"byte_end":32116,"line_start":880,"line_end":880,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32121,"byte_end":32124,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ [`derive_key`]: fn.derive_key.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32129,"byte_end":32167,"line_start":882,"line_end":882,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32898,"byte_end":32903,"line_start":896,"line_end":896,"column_start":12,"column_end":17},"name":"reset","qualname":"<Hasher>::reset","value":"pub fn reset(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Reset the `Hasher` to its initial state.","sig":null,"attributes":[{"value":"/ Reset the `Hasher` to its initial state.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32488,"byte_end":32532,"line_start":889,"line_end":889,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32537,"byte_end":32540,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This is functionally the same as overwriting the `Hasher` with a new","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32545,"byte_end":32617,"line_start":891,"line_end":891,"column_start":5,"column_end":77}},{"value":"/ one, using the same key or context string if any. However, depending on","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32622,"byte_end":32697,"line_start":892,"line_end":892,"column_start":5,"column_end":80}},{"value":"/ how much inlining the optimizer does, moving a `Hasher` might copy its","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32702,"byte_end":32776,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/ entire CV stack, most of which is useless uninitialized bytes. This","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32781,"byte_end":32852,"line_start":894,"line_end":894,"column_start":5,"column_end":76}},{"value":"/ methods avoids that copy.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":32857,"byte_end":32886,"line_start":895,"line_end":895,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37448,"byte_end":37454,"line_start":985,"line_end":985,"column_start":12,"column_end":18},"name":"update","qualname":"<Hasher>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state. You can call this any number of\n times.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state. You can call this any number of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":36771,"byte_end":36841,"line_start":972,"line_end":972,"column_start":5,"column_end":75}},{"value":"/ times.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":36846,"byte_end":36856,"line_start":973,"line_end":973,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":36861,"byte_end":36864,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This method is always single-threaded. For multi-threading support, see","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":36869,"byte_end":36944,"line_start":975,"line_end":975,"column_start":5,"column_end":80}},{"value":"/ `update_with_join` below.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":36949,"byte_end":36978,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":36983,"byte_end":36986,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Note that the degree of SIMD parallelism that `update` can use is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":36991,"byte_end":37060,"line_start":978,"line_end":978,"column_start":5,"column_end":74}},{"value":"/ limited by the size of this input buffer. The 8 KiB buffer currently","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37065,"byte_end":37137,"line_start":979,"line_end":979,"column_start":5,"column_end":77}},{"value":"/ used by [`std::io::copy`] is enough to leverage AVX2, for example, but","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37142,"byte_end":37216,"line_start":980,"line_end":980,"column_start":5,"column_end":79}},{"value":"/ not enough to leverage AVX-512. A 16 KiB buffer is large enough to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37221,"byte_end":37291,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ leverage all currently supported SIMD instruction sets.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37296,"byte_end":37355,"line_start":982,"line_end":982,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37360,"byte_end":37363,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37368,"byte_end":37436,"line_start":984,"line_end":984,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39403,"byte_end":39419,"line_start":1023,"line_end":1023,"column_start":12,"column_end":28},"name":"update_with_join","qualname":"<Hasher>::update_with_join","value":"pub fn update_with_join<J: Join>(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input bytes to the hash state, as with `update`, but potentially\n using multi-threading. See the example below, and the\n [`join`](join/index.html) module for a more detailed explanation.","sig":null,"attributes":[{"value":"/ Add input bytes to the hash state, as with `update`, but potentially","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37557,"byte_end":37629,"line_start":989,"line_end":989,"column_start":5,"column_end":77}},{"value":"/ using multi-threading. See the example below, and the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37634,"byte_end":37691,"line_start":990,"line_end":990,"column_start":5,"column_end":62}},{"value":"/ [`join`](join/index.html) module for a more detailed explanation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37696,"byte_end":37765,"line_start":991,"line_end":991,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37770,"byte_end":37773,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ To get any performance benefit from multi-threading, the input buffer","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37778,"byte_end":37851,"line_start":993,"line_end":993,"column_start":5,"column_end":78}},{"value":"/ size needs to be very large. As a rule of thumb on x86_64, there is no","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37856,"byte_end":37930,"line_start":994,"line_end":994,"column_start":5,"column_end":79}},{"value":"/ benefit to multi-threading inputs less than 128 KiB. Other platforms","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":37935,"byte_end":38007,"line_start":995,"line_end":995,"column_start":5,"column_end":77}},{"value":"/ have different thresholds, and in general you need to benchmark your","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38012,"byte_end":38084,"line_start":996,"line_end":996,"column_start":5,"column_end":77}},{"value":"/ specific use case. Where possible, memory mapping an entire input file","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38089,"byte_end":38163,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/ is recommended, to take maximum advantage of multi-threading without","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38168,"byte_end":38240,"line_start":998,"line_end":998,"column_start":5,"column_end":77}},{"value":"/ needing to tune a specific buffer size. Where memory mapping is not","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38245,"byte_end":38316,"line_start":999,"line_end":999,"column_start":5,"column_end":76}},{"value":"/ possible, good multi-threading performance requires doing IO on a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38321,"byte_end":38390,"line_start":1000,"line_end":1000,"column_start":5,"column_end":74}},{"value":"/ background thread, to avoid sleeping all your worker threads while the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38395,"byte_end":38469,"line_start":1001,"line_end":1001,"column_start":5,"column_end":79}},{"value":"/ input buffer is (serially) refilled. This is quite complicated compared","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38474,"byte_end":38549,"line_start":1002,"line_end":1002,"column_start":5,"column_end":80}},{"value":"/ to memory mapping.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38554,"byte_end":38576,"line_start":1003,"line_end":1003,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38581,"byte_end":38584,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38589,"byte_end":38602,"line_start":1005,"line_end":1005,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38607,"byte_end":38610,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38615,"byte_end":38622,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/ // Hash a large input using multi-threading. Note that multi-threading","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38627,"byte_end":38701,"line_start":1008,"line_end":1008,"column_start":5,"column_end":79}},{"value":"/ // comes with some overhead, and it can actually hurt performance for small","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38706,"byte_end":38785,"line_start":1009,"line_end":1009,"column_start":5,"column_end":84}},{"value":"/ // inputs. The meaning of \"small\" varies, however, depending on the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38790,"byte_end":38861,"line_start":1010,"line_end":1010,"column_start":5,"column_end":76}},{"value":"/ // platform and the number of threads. (On x86_64, the cutoff tends to be","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38866,"byte_end":38943,"line_start":1011,"line_end":1011,"column_start":5,"column_end":82}},{"value":"/ // around 128 KiB.) You should benchmark your own use case to see whether","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":38948,"byte_end":39025,"line_start":1012,"line_end":1012,"column_start":5,"column_end":82}},{"value":"/ // multi-threading helps.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39030,"byte_end":39059,"line_start":1013,"line_end":1013,"column_start":5,"column_end":34}},{"value":"/ # #[cfg(feature = \"rayon\")]","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39064,"byte_end":39095,"line_start":1014,"line_end":1014,"column_start":5,"column_end":36}},{"value":"/ # {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39100,"byte_end":39107,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # fn some_large_input() -> &'static [u8] { b\"foo\" }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39112,"byte_end":39167,"line_start":1016,"line_end":1016,"column_start":5,"column_end":60}},{"value":"/ let input: &[u8] = some_large_input();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39172,"byte_end":39214,"line_start":1017,"line_end":1017,"column_start":5,"column_end":47}},{"value":"/ let mut hasher = blake3::Hasher::new();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39219,"byte_end":39262,"line_start":1018,"line_end":1018,"column_start":5,"column_end":48}},{"value":"/ hasher.update_with_join::<blake3::join::RayonJoin>(input);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39267,"byte_end":39329,"line_start":1019,"line_end":1019,"column_start":5,"column_end":67}},{"value":"/ let hash = hasher.finalize();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39334,"byte_end":39367,"line_start":1020,"line_end":1020,"column_start":5,"column_end":38}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39372,"byte_end":39379,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":39384,"byte_end":39391,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48325,"byte_end":48333,"line_start":1202,"line_end":1202,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Hasher>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return the [`Hash`](struct.Hash.html) of\n the input.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return the [`Hash`](struct.Hash.html) of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48079,"byte_end":48151,"line_start":1197,"line_end":1197,"column_start":5,"column_end":77}},{"value":"/ the input.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48156,"byte_end":48170,"line_start":1198,"line_end":1198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48175,"byte_end":48178,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48183,"byte_end":48257,"line_start":1200,"line_end":1200,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48262,"byte_end":48313,"line_start":1201,"line_end":1201,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48728,"byte_end":48740,"line_start":1213,"line_end":1213,"column_start":12,"column_end":24},"name":"finalize_xof","qualname":"<Hasher>::finalize_xof","value":"pub fn finalize_xof(&Self) -> OutputReader","parent":null,"children":[],"decl_id":null,"docs":" Finalize the hash state and return an [`OutputReader`], which can\n supply any number of output bytes.","sig":null,"attributes":[{"value":"/ Finalize the hash state and return an [`OutputReader`], which can","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48402,"byte_end":48471,"line_start":1206,"line_end":1206,"column_start":5,"column_end":74}},{"value":"/ supply any number of output bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48476,"byte_end":48514,"line_start":1207,"line_end":1207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48519,"byte_end":48522,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ This method is idempotent. Calling it twice will give the same result.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48527,"byte_end":48601,"line_start":1209,"line_end":1209,"column_start":5,"column_end":79}},{"value":"/ You can also add more input and finalize again.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48606,"byte_end":48657,"line_start":1210,"line_end":1210,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48662,"byte_end":48665,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ [`OutputReader`]: struct.OutputReader.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48670,"byte_end":48716,"line_start":1212,"line_end":1212,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49737,"byte_end":49749,"line_start":1253,"line_end":1253,"column_start":12,"column_end":24},"name":"OutputReader","qualname":"::OutputReader","value":"OutputReader {  }","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743}],"decl_id":null,"docs":" An incremental reader for extended output, returned by\n [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).\n","sig":null,"attributes":[{"value":"/ An incremental reader for extended output, returned by","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49580,"byte_end":49638,"line_start":1250,"line_end":1250,"column_start":1,"column_end":59}},{"value":"/ [`Hasher::finalize_xof`](struct.Hasher.html#method.finalize_xof).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49639,"byte_end":49708,"line_start":1251,"line_end":1251,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50776,"byte_end":50780,"line_start":1281,"line_end":1281,"column_start":12,"column_end":16},"name":"fill","qualname":"<OutputReader>::fill","value":"pub fn fill(&mut Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Fill a buffer with output bytes and advance the position of the\n `OutputReader`. This is equivalent to [`Read::read`], except that it\n doesn't return a `Result`. Both methods always fill the entire buffer.","sig":null,"attributes":[{"value":"/ Fill a buffer with output bytes and advance the position of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49954,"byte_end":50021,"line_start":1266,"line_end":1266,"column_start":5,"column_end":72}},{"value":"/ `OutputReader`. This is equivalent to [`Read::read`], except that it","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50026,"byte_end":50098,"line_start":1267,"line_end":1267,"column_start":5,"column_end":77}},{"value":"/ doesn't return a `Result`. Both methods always fill the entire buffer.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50103,"byte_end":50177,"line_start":1268,"line_end":1268,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50182,"byte_end":50185,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ Note that `OutputReader` doesn't buffer output bytes internally, so","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50190,"byte_end":50261,"line_start":1270,"line_end":1270,"column_start":5,"column_end":76}},{"value":"/ calling `fill` repeatedly with a short-length or odd-length slice will","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50266,"byte_end":50340,"line_start":1271,"line_end":1271,"column_start":5,"column_end":79}},{"value":"/ end up performing the same compression multiple times. If you're","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50345,"byte_end":50413,"line_start":1272,"line_end":1272,"column_start":5,"column_end":73}},{"value":"/ reading output in a loop, prefer a slice length that's a multiple of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50418,"byte_end":50490,"line_start":1273,"line_end":1273,"column_start":5,"column_end":77}},{"value":"/ 64.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50495,"byte_end":50502,"line_start":1274,"line_end":1274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50507,"byte_end":50510,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ The maximum output size of BLAKE3 is 2<sup>64</sup>-1 bytes. If you try","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50515,"byte_end":50590,"line_start":1276,"line_end":1276,"column_start":5,"column_end":80}},{"value":"/ to extract more than that, for example by seeking near the end and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50595,"byte_end":50665,"line_start":1277,"line_end":1277,"column_start":5,"column_end":75}},{"value":"/ reading further, the behavior is unspecified.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50670,"byte_end":50719,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50724,"byte_end":50727,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":50732,"byte_end":50764,"line_start":1280,"line_end":1280,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51714,"byte_end":51722,"line_start":1302,"line_end":1302,"column_start":12,"column_end":20},"name":"position","qualname":"<OutputReader>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the current read position in the output stream. The position of\n a new `OutputReader` starts at 0, and each call to [`fill`] or\n [`Read::read`] moves the position forward by the number of bytes read.","sig":null,"attributes":[{"value":"/ Return the current read position in the output stream. The position of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51402,"byte_end":51476,"line_start":1296,"line_end":1296,"column_start":5,"column_end":79}},{"value":"/ a new `OutputReader` starts at 0, and each call to [`fill`] or","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51481,"byte_end":51547,"line_start":1297,"line_end":1297,"column_start":5,"column_end":71}},{"value":"/ [`Read::read`] moves the position forward by the number of bytes read.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51552,"byte_end":51626,"line_start":1298,"line_end":1298,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51631,"byte_end":51634,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ [`fill`]: #method.fill","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51639,"byte_end":51665,"line_start":1300,"line_end":1300,"column_start":5,"column_end":31}},{"value":"/ [`Read::read`]: #method.read","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51670,"byte_end":51702,"line_start":1301,"line_end":1301,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52152,"byte_end":52164,"line_start":1312,"line_end":1312,"column_start":12,"column_end":24},"name":"set_position","qualname":"<OutputReader>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Seek to a new read position in the output stream. This is equivalent to\n calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't\n return a `Result`.","sig":null,"attributes":[{"value":"/ Seek to a new read position in the output stream. This is equivalent to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51832,"byte_end":51907,"line_start":1306,"line_end":1306,"column_start":5,"column_end":80}},{"value":"/ calling [`Seek::seek`] with [`SeekFrom::Start`], except that it doesn't","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51912,"byte_end":51987,"line_start":1307,"line_end":1307,"column_start":5,"column_end":80}},{"value":"/ return a `Result`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":51992,"byte_end":52014,"line_start":1308,"line_end":1308,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52019,"byte_end":52022,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ [`Seek::seek`]: #method.seek","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52027,"byte_end":52059,"line_start":1310,"line_end":1310,"column_start":5,"column_end":37}},{"value":"/ [`SeekFrom::Start`]: https://doc.rust-lang.org/std/io/enum.SeekFrom.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52064,"byte_end":52140,"line_start":1311,"line_end":1311,"column_start":5,"column_end":81}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54038,"byte_end":54048,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":58011,"byte_end":58019,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88792,"byte_end":88798,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88854,"byte_end":88860,"line_start":18,"line_end":18,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88996,"byte_end":89002,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":89128,"byte_end":89134,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":89540,"byte_end":89546,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":89874,"byte_end":89886,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":90011,"byte_end":90017,"line_start":70,"line_end":70,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":90230,"byte_end":90236,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96893,"byte_end":96903,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7257,"byte_end":7261,"line_start":211,"line_end":211,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8256,"byte_end":8260,"line_start":237,"line_end":237,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8519,"byte_end":8523,"line_start":252,"line_end":252,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8731,"byte_end":8735,"line_start":260,"line_end":260,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8885,"byte_end":8889,"line_start":267,"line_end":267,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8914,"byte_end":8918,"line_start":269,"line_end":269,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":9734,"byte_end":9740,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":10815,"byte_end":10825,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":13598,"byte_end":13608,"line_start":425,"line_end":425,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":14897,"byte_end":14913,"line_start":459,"line_end":459,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31250,"byte_end":31256,"line_start":855,"line_end":855,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48899,"byte_end":48905,"line_start":1219,"line_end":1219,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49160,"byte_end":49166,"line_start":1228,"line_end":1228,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49287,"byte_end":49293,"line_start":1236,"line_end":1236,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49810,"byte_end":49822,"line_start":1258,"line_end":1258,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52411,"byte_end":52423,"line_start":1319,"line_end":1319,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52651,"byte_end":52663,"line_start":1328,"line_end":1328,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52849,"byte_end":52861,"line_start":1337,"line_end":1337,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":2556,"byte_end":2560,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":2655,"byte_end":2663,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3294,"byte_end":3300,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":219}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":3311,"byte_end":3315,"line_start":106,"line_end":106,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":270}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\guts.rs","byte_start":54038,"byte_end":54048,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\platform.rs","byte_start":58011,"byte_end":58019,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88792,"byte_end":88798,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":726},"to":{"krate":21,"index":231}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88854,"byte_end":88860,"line_start":18,"line_end":18,"column_start":25,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":726},"to":{"krate":21,"index":226}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":88996,"byte_end":89002,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":726},"to":{"krate":21,"index":233}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":89128,"byte_end":89134,"line_start":32,"line_end":32,"column_start":30,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":726},"to":{"krate":21,"index":106}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":89540,"byte_end":89546,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":726},"to":{"krate":21,"index":165}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":89874,"byte_end":89886,"line_start":63,"line_end":63,"column_start":28,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":741},"to":{"krate":21,"index":162}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":90011,"byte_end":90017,"line_start":70,"line_end":70,"column_start":29,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":726},"to":{"krate":15,"index":45}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\traits.rs","byte_start":90230,"byte_end":90236,"line_start":80,"line_end":80,"column_start":26,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":726},"to":{"krate":15,"index":49}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\join.rs","byte_start":96893,"byte_end":96903,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":277},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":7257,"byte_end":7261,"line_start":211,"line_end":211,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8256,"byte_end":8260,"line_start":237,"line_end":237,"column_start":30,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8519,"byte_end":8523,"line_start":252,"line_end":252,"column_start":20,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":2504}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8731,"byte_end":8735,"line_start":260,"line_end":260,"column_start":35,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":2504}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8885,"byte_end":8889,"line_start":267,"line_end":267,"column_start":13,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":2509}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":8914,"byte_end":8918,"line_start":269,"line_end":269,"column_start":21,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":9734,"byte_end":9740,"line_start":294,"line_end":294,"column_start":6,"column_end":12},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":10815,"byte_end":10825,"line_start":337,"line_end":337,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":13598,"byte_end":13608,"line_start":425,"line_end":425,"column_start":21,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":14897,"byte_end":14913,"line_start":459,"line_end":459,"column_start":6,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":31250,"byte_end":31256,"line_start":855,"line_end":855,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":48899,"byte_end":48905,"line_start":1219,"line_end":1219,"column_start":21,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49160,"byte_end":49166,"line_start":1228,"line_end":1228,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49287,"byte_end":49293,"line_start":1236,"line_end":1236,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":4332}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":49810,"byte_end":49822,"line_start":1258,"line_end":1258,"column_start":6,"column_end":18},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52411,"byte_end":52423,"line_start":1319,"line_end":1319,"column_start":21,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52651,"byte_end":52663,"line_start":1328,"line_end":1328,"column_start":24,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":741},"to":{"krate":1,"index":4271}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\blake3-0.3.8\\src\\lib.rs","byte_start":52849,"byte_end":52861,"line_start":1337,"line_end":1337,"column_start":24,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":741},"to":{"krate":1,"index":4350}}]}