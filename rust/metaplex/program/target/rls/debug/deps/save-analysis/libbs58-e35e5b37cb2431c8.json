{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1","program":"C:\\Users\\sagar\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bs58","--edition=2018","C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=e35e5b37cb2431c8","-C","extra-filename=-e35e5b37cb2431c8","--out-dir","d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps","-L","dependency=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\sagar\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libbs58-e35e5b37cb2431c8.rmeta"},"prelude":{"crate_id":{"name":"bs58","disambiguator":[10194934830294448235,1984951253519119130]},"crate_root":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[5048311760381386034,12753961808535803278]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[847775214756591688,12437863933651081164]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[18098153966720408130,4102567439342721650]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[902711862199739234,15082167224296373374]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14085577876822856882,15393158987199036233]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[3188366355873518403,14471389999965490426]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10237517513868340142,18396708545822173986]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17305999185247584930,14125623615750666193]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7451980452763147359,4800032867518142595]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[842541340887862638,17591716377464122790]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14650435931294811010,18006816567319070280]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16073749092757737146,5785406473963590530]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9426002052484834533,14451905897035318657]}}],"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":5895,"line_start":1,"line_end":209,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2563,"byte_end":2571,"line_start":79,"line_end":79,"column_start":19,"column_end":27},"alias_span":null,"name":"Alphabet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":5895,"line_start":1,"line_end":209,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":84},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":170}],"decl_id":null,"docs":" Another [Base58][] codec implementation.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"warn(missing_copy_implementations)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":50,"byte_end":88,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":89,"byte_end":128,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":129,"byte_end":151,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(trivial_casts)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":152,"byte_end":175,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"warn(trivial_numeric_casts)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":176,"byte_end":207,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"warn(unused_extern_crates)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":208,"byte_end":238,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"warn(unused_import_braces)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":239,"byte_end":269,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"warn(variant_size_differences)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":270,"byte_end":304,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ Another [Base58][] codec implementation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":306,"byte_end":350,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":351,"byte_end":354,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Compared to [`base58`][] this is significantly faster at decoding (about","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":355,"byte_end":431,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ 2.4x as fast when decoding 32 bytes), almost the same speed for encoding","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":432,"byte_end":508,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ (about 3% slower when encoding 32 bytes) and doesn't have the 128 byte","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":509,"byte_end":583,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ limitation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":584,"byte_end":599,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Compared to [`rust-base58`][] this is massively faster (over ten times as","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":604,"byte_end":681,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ fast when decoding 32 bytes, almost 40 times as fast when encoding 32","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":682,"byte_end":755,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ bytes) and has no external dependencies.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":756,"byte_end":800,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":801,"byte_end":804,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Compared to both this supports a configurable alphabet and user provided","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":805,"byte_end":881,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ buffers for zero-allocation {en,de}coding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":882,"byte_end":928,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":929,"byte_end":932,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [Base58]: https://en.wikipedia.org/wiki/Base58","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":933,"byte_end":983,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/ [`base58`]: https://github.com/debris/base58","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":984,"byte_end":1032,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ [`rust-base58`]: https://github.com/nham/rust-base58","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1033,"byte_end":1089,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1090,"byte_end":1093,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1094,"byte_end":1108,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1109,"byte_end":1112,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/  Feature | Activation         | Effect","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1113,"byte_end":1155,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ ---------|--------------------|--------","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1156,"byte_end":1199,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/  `std`   | **on**-by-default  | Implement [`Error`](std::error::Error) for error types","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1200,"byte_end":1290,"line_start":34,"line_end":34,"column_start":1,"column_end":91}},{"value":"/  `alloc` | implied by `std`   | Support encoding/decoding to [`Vec`](alloc::vec::Vec) and [`String`](alloc::string::String) as appropriate","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1291,"byte_end":1433,"line_start":35,"line_end":35,"column_start":1,"column_end":143}},{"value":"/  `check` | **off**-by-default | Integrated support for [Base58Check][]","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1434,"byte_end":1508,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1509,"byte_end":1512,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [Base58Check]: https://en.bitcoin.it/wiki/Base58Check_encoding","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1513,"byte_end":1579,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1580,"byte_end":1583,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1584,"byte_end":1598,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1599,"byte_end":1602,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Basic example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1603,"byte_end":1623,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1624,"byte_end":1627,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1628,"byte_end":1639,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ let decoded = bs58::decode(\"he11owor1d\").into_vec().unwrap();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1640,"byte_end":1705,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/ let encoded = bs58::encode(decoded).into_string();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1706,"byte_end":1760,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(\"he11owor1d\", encoded);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1761,"byte_end":1799,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1800,"byte_end":1807,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1808,"byte_end":1811,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Changing the alphabet","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1812,"byte_end":1840,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1841,"byte_end":1844,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1845,"byte_end":1856,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ let decoded = bs58::decode(\"he11owor1d\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1857,"byte_end":1901,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/     .with_alphabet(bs58::alphabet::RIPPLE)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1902,"byte_end":1948,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/     .into_vec()","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1949,"byte_end":1968,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1969,"byte_end":1987,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ let encoded = bs58::encode(decoded)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":1988,"byte_end":2027,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/     .with_alphabet(bs58::alphabet::FLICKR)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2028,"byte_end":2074,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/     .into_string();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2075,"byte_end":2098,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(\"4DSSNaN1SC\", encoded);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2099,"byte_end":2137,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2138,"byte_end":2145,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2146,"byte_end":2149,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Decoding into an existing buffer","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2150,"byte_end":2189,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2190,"byte_end":2193,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2194,"byte_end":2205,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ let (mut decoded, mut encoded) = ([0xFF; 8], String::with_capacity(10));","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2206,"byte_end":2282,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ bs58::decode(\"he11owor1d\").into(&mut decoded).unwrap();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2283,"byte_end":2342,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ bs58::encode(decoded).into(&mut encoded);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2343,"byte_end":2388,"line_start":68,"line_end":68,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(\"he11owor1d\", encoded);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2389,"byte_end":2427,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2428,"byte_end":2435,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alphabet","qualname":"::alphabet","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":172},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":17},{"krate":0,"index":26}],"decl_id":null,"docs":" Commonly used Base58 alphabets.\n","sig":null,"attributes":[{"value":"/ Commonly used Base58 alphabets.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":5897,"byte_end":5932,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6090,"byte_end":6097,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"BITCOIN","qualname":"::alphabet::BITCOIN","value":"&[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Bitcoin's alphabet as defined in their Base58Check encoding.","sig":null,"attributes":[{"value":"/ Bitcoin's alphabet as defined in their Base58Check encoding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":5934,"byte_end":5998,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":5999,"byte_end":6002,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See https://en.bitcoin.it/wiki/Base58Check_encoding#Base58_symbol_chart.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6003,"byte_end":6079,"line_start":5,"line_end":5,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6346,"byte_end":6352,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"MONERO","qualname":"::alphabet::MONERO","value":"&[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Monero's alphabet as defined in this forum post.","sig":null,"attributes":[{"value":"/ Monero's alphabet as defined in this forum post.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6175,"byte_end":6227,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6228,"byte_end":6231,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See https://forum.getmonero.org/4/academic-and-technical/221/creating-a-standard-for-physical-coins","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6232,"byte_end":6335,"line_start":10,"line_end":10,"column_start":1,"column_end":104}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6534,"byte_end":6540,"line_start":16,"line_end":16,"column_start":11,"column_end":17},"name":"RIPPLE","qualname":"::alphabet::RIPPLE","value":"&[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Ripple's alphabet as defined in their wiki.","sig":null,"attributes":[{"value":"/ Ripple's alphabet as defined in their wiki.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6430,"byte_end":6477,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6478,"byte_end":6481,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ See https://wiki.ripple.com/Encodings","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6482,"byte_end":6523,"line_start":15,"line_end":15,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6763,"byte_end":6769,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"FLICKR","qualname":"::alphabet::FLICKR","value":"&[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Flickr's alphabet for creating short urls from photo ids.","sig":null,"attributes":[{"value":"/ Flickr's alphabet for creating short urls from photo ids.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6618,"byte_end":6679,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6680,"byte_end":6683,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ See https://www.flickr.com/groups/api/discuss/72157616713786392/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6684,"byte_end":6752,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6971,"byte_end":6978,"line_start":25,"line_end":25,"column_start":11,"column_end":18},"name":"DEFAULT","qualname":"::alphabet::DEFAULT","value":"&[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The default alphabet used if none is given. Currently is the\n [`BITCOIN`](constant.BITCOIN.html) alphabet.\n","sig":null,"attributes":[{"value":"/ The default alphabet used if none is given. Currently is the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6847,"byte_end":6911,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ [`BITCOIN`](constant.BITCOIN.html) alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":6912,"byte_end":6960,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7202,"byte_end":7210,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"Alphabet","qualname":"::alphabet::Alphabet","value":"Alphabet {  }","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":175}],"decl_id":null,"docs":" Prepared Alpabet for [`EncodeBuilder`](crate::encode::EncodeBuilder) and [`DecodeBuilder`](crate::decode::DecodeBuilder).\n","sig":null,"attributes":[{"value":"/ Prepared Alpabet for [`EncodeBuilder`](crate::encode::EncodeBuilder) and [`DecodeBuilder`](crate::decode::DecodeBuilder).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7002,"byte_end":7127,"line_start":27,"line_end":27,"column_start":1,"column_end":126}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7151,"byte_end":7190,"line_start":29,"line_end":29,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7350,"byte_end":7357,"line_start":37,"line_end":37,"column_start":15,"column_end":22},"name":"BITCOIN","qualname":"::alphabet::Alphabet::BITCOIN","value":"&'static Self","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Bitcoin's prepared alphabet.\n","sig":null,"attributes":[{"value":"/ Bitcoin's prepared alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7303,"byte_end":7335,"line_start":36,"line_end":36,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7446,"byte_end":7452,"line_start":39,"line_end":39,"column_start":15,"column_end":21},"name":"MONERO","qualname":"::alphabet::Alphabet::MONERO","value":"&'static Self","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Monero's prepared alphabet.\n","sig":null,"attributes":[{"value":"/ Monero's prepared alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7400,"byte_end":7431,"line_start":38,"line_end":38,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7540,"byte_end":7546,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"name":"RIPPLE","qualname":"::alphabet::Alphabet::RIPPLE","value":"&'static Self","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Ripple's prepared alphabet.\n","sig":null,"attributes":[{"value":"/ Ripple's prepared alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7494,"byte_end":7525,"line_start":40,"line_end":40,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7634,"byte_end":7640,"line_start":43,"line_end":43,"column_start":15,"column_end":21},"name":"FLICKR","qualname":"::alphabet::Alphabet::FLICKR","value":"&'static Self","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Flickr's prepared alphabet.\n","sig":null,"attributes":[{"value":"/ Flickr's prepared alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7588,"byte_end":7619,"line_start":42,"line_end":42,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7829,"byte_end":7836,"line_start":46,"line_end":46,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::alphabet::Alphabet::DEFAULT","value":"&'static Self","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" The default prepared alphabet used if none is given. Currently is the\n [`Alphabet::Bitcoin`](Alphabet::BITCOIN) alphabet.\n","sig":null,"attributes":[{"value":"/ The default prepared alphabet used if none is given. Currently is the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7682,"byte_end":7755,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ [`Alphabet::Bitcoin`](Alphabet::BITCOIN) alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7760,"byte_end":7814,"line_start":45,"line_end":45,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7921,"byte_end":7924,"line_start":49,"line_end":49,"column_start":18,"column_end":21},"name":"new","qualname":"<Alphabet>::new","value":"pub const fn new(&[u8; ]) -> Alphabet","parent":null,"children":[],"decl_id":null,"docs":" Create prepared alphabet.\n","sig":null,"attributes":[{"value":"/ Create prepared alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7874,"byte_end":7903,"line_start":48,"line_end":48,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":182},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":66},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" Functions for decoding Base58 encoded strings.\n","sig":null,"attributes":[{"value":"/ Functions for decoding Base58 encoded strings.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11198,"byte_end":11248,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11683,"byte_end":11696,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"DecodeBuilder","qualname":"::decode::DecodeBuilder","value":"DecodeBuilder {  }","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" A builder for setting up the alphabet and output of a base58 decode.","sig":null,"attributes":[{"value":"/ A builder for setting up the alphabet and output of a base58 decode.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11438,"byte_end":11510,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11511,"byte_end":11514,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See the documentation for [`bs58::decode`](../fn.decode.html) for a more","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11515,"byte_end":11591,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ high level view of how to use this.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11592,"byte_end":11631,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11632,"byte_end":11671,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11890,"byte_end":11896,"line_start":26,"line_end":26,"column_start":10,"column_end":16},"name":"Result","qualname":"::decode::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized [`Result`](core::result::Result) type for [`bs58::decode`](module@crate::decode)\n","sig":null,"attributes":[{"value":"/ A specialized [`Result`](core::result::Result) type for [`bs58::decode`](module@crate::decode)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11782,"byte_end":11880,"line_start":25,"line_end":25,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12137,"byte_end":12151,"line_start":32,"line_end":32,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::decode::Error::BufferTooSmall","value":"Error::BufferTooSmall","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" The output buffer was too small to contain the entire input.\n","sig":null,"attributes":[{"value":"/ The output buffer was too small to contain the entire input.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12068,"byte_end":12132,"line_start":31,"line_end":31,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12256,"byte_end":12272,"line_start":36,"line_end":36,"column_start":5,"column_end":21},"name":"InvalidCharacter","qualname":"::decode::Error::InvalidCharacter","value":"Error::InvalidCharacter { character, index }","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" The input contained a character that was not part of the current Base58\n alphabet.\n","sig":null,"attributes":[{"value":"/ The input contained a character that was not part of the current Base58","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12158,"byte_end":12233,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12238,"byte_end":12251,"line_start":35,"line_end":35,"column_start":5,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12561,"byte_end":12578,"line_start":45,"line_end":45,"column_start":5,"column_end":22},"name":"NonAsciiCharacter","qualname":"::decode::Error::NonAsciiCharacter","value":"Error::NonAsciiCharacter { index }","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":" The input contained a multi-byte (or non-utf8) character which is\n unsupported by this Base58 decoder.\n","sig":null,"attributes":[{"value":"/ The input contained a multi-byte (or non-utf8) character which is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12443,"byte_end":12512,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ unsupported by this Base58 decoder.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12517,"byte_end":12556,"line_start":44,"line_end":44,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":13541,"byte_end":13556,"line_start":77,"line_end":77,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::decode::Error::__NonExhaustive","value":"Error::__NonExhaustive","parent":{"krate":0,"index":182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":12056,"byte_end":12061,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::Error","value":"pub enum Error {\n    BufferTooSmall,\n    InvalidCharacter {\n        character: char,\n        index: usize,\n    },\n    NonAsciiCharacter {\n        index: usize,\n    },\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":190}],"decl_id":null,"docs":" Errors that could occur when decoding a Base58 encoded string.\n","sig":null,"attributes":[{"value":"/ Errors that could occur when decoding a Base58 encoded string.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":11935,"byte_end":12001,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":13782,"byte_end":13785,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeBuilder>::new","value":"pub fn new(I, &'a [u8; ]) -> DecodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup decoder for the given string using the given alphabet.\n Preferably use [`bs58::decode`](../fn.decode.html) instead of this\n directly.\n","sig":null,"attributes":[{"value":"/ Setup decoder for the given string using the given alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":13613,"byte_end":13677,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"/ Preferably use [`bs58::decode`](../fn.decode.html) instead of this","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":13682,"byte_end":13752,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":13757,"byte_end":13770,"line_start":83,"line_end":83,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14650,"byte_end":14663,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"with_alphabet","qualname":"<DecodeBuilder>::with_alphabet","value":"pub fn with_alphabet(Self, &'a [u8; ]) -> DecodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Change the alphabet that will be used for decoding.","sig":null,"attributes":[{"value":"/ Change the alphabet that will be used for decoding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14307,"byte_end":14362,"line_start":101,"line_end":101,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14367,"byte_end":14370,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14375,"byte_end":14389,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14394,"byte_end":14397,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14402,"byte_end":14413,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14418,"byte_end":14433,"line_start":106,"line_end":106,"column_start":5,"column_end":20}},{"value":"/     vec![0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78],","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14438,"byte_end":14493,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/     bs58::decode(\"he11owor1d\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14498,"byte_end":14532,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/         .with_alphabet(bs58::alphabet::RIPPLE)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14537,"byte_end":14587,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/         .into_vec().unwrap());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14592,"byte_end":14626,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14631,"byte_end":14638,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":15182,"byte_end":15204,"line_start":128,"line_end":128,"column_start":12,"column_end":34},"name":"with_prepared_alphabet","qualname":"<DecodeBuilder>::with_prepared_alphabet","value":"pub fn with_prepared_alphabet(Self, &'a Alphabet) -> DecodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Change the alphabet that will be used for decoding.","sig":null,"attributes":[{"value":"/ Change the alphabet that will be used for decoding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14830,"byte_end":14885,"line_start":117,"line_end":117,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14890,"byte_end":14893,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14898,"byte_end":14912,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14917,"byte_end":14920,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14925,"byte_end":14936,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14941,"byte_end":14956,"line_start":122,"line_end":122,"column_start":5,"column_end":20}},{"value":"/     vec![0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78],","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":14961,"byte_end":15016,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"/     bs58::decode(\"he11owor1d\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":15021,"byte_end":15055,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/         .with_prepared_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":15060,"byte_end":15119,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/         .into_vec().unwrap());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":15124,"byte_end":15158,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":15163,"byte_end":15170,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16643,"byte_end":16651,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<DecodeBuilder>::into_vec","value":"pub fn into_vec(Self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decode into a new vector of bytes.","sig":null,"attributes":[{"value":"/ Decode into a new vector of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16135,"byte_end":16173,"line_start":157,"line_end":157,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16178,"byte_end":16181,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`bs58::decode`](../fn.decode.html) for an","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16186,"byte_end":16258,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ explanation of the errors that may occur.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16263,"byte_end":16308,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16313,"byte_end":16316,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16321,"byte_end":16335,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16340,"byte_end":16343,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16348,"byte_end":16359,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16364,"byte_end":16379,"line_start":165,"line_end":165,"column_start":5,"column_end":20}},{"value":"/     vec![0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58],","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16384,"byte_end":16445,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/     bs58::decode(\"he11owor1d\").into_vec().unwrap());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16450,"byte_end":16506,"line_start":167,"line_end":167,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16511,"byte_end":16518,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16523,"byte_end":16526,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16531,"byte_end":16556,"line_start":170,"line_end":170,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17454,"byte_end":17458,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"into","qualname":"<DecodeBuilder>::into","value":"pub fn into<O: AsMut<[u8]>>(Self, O) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Decode into the given buffer.","sig":null,"attributes":[{"value":"/ Decode into the given buffer.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16858,"byte_end":16891,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16896,"byte_end":16899,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Returns the length written into the buffer, the rest of the bytes in","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16904,"byte_end":16976,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ the buffer will be untouched.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":16981,"byte_end":17014,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17019,"byte_end":17022,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`bs58::decode`](../fn.decode.html) for an","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17027,"byte_end":17099,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ explanation of the errors that may occur.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17104,"byte_end":17149,"line_start":186,"line_end":186,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17154,"byte_end":17157,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17162,"byte_end":17176,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17181,"byte_end":17184,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17189,"byte_end":17200,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/ let mut output = [0xFF; 10];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17205,"byte_end":17237,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(8, bs58::decode(\"he11owor1d\").into(&mut output).unwrap());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17242,"byte_end":17315,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17320,"byte_end":17335,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/     [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58, 0xFF, 0xFF],","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17340,"byte_end":17409,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/     output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17414,"byte_end":17430,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":17435,"byte_end":17442,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":111},{"krate":0,"index":204},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":144},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" Functions for encoding into Base58 encoded strings.\n","sig":null,"attributes":[{"value":"/ Functions for encoding into Base58 encoded strings.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22075,"byte_end":22130,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22455,"byte_end":22468,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"EncodeBuilder","qualname":"::encode::EncodeBuilder","value":"EncodeBuilder {  }","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" A builder for setting up the alphabet and output of a base58 encode.\n","sig":null,"attributes":[{"value":"/ A builder for setting up the alphabet and output of a base58 encode.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22331,"byte_end":22403,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22404,"byte_end":22443,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22662,"byte_end":22668,"line_start":23,"line_end":23,"column_start":10,"column_end":16},"name":"Result","qualname":"::encode::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized [`Result`](core::result::Result) type for [`bs58::encode`](module@crate::encode)\n","sig":null,"attributes":[{"value":"/ A specialized [`Result`](core::result::Result) type for [`bs58::encode`](module@crate::encode)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22554,"byte_end":22652,"line_start":22,"line_end":22,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22909,"byte_end":22923,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::encode::Error::BufferTooSmall","value":"Error::BufferTooSmall","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" The output buffer was too small to contain the entire input.\n","sig":null,"attributes":[{"value":"/ The output buffer was too small to contain the entire input.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22840,"byte_end":22904,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22949,"byte_end":22964,"line_start":32,"line_end":32,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::encode::Error::__NonExhaustive","value":"Error::__NonExhaustive","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22828,"byte_end":22833,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Error","qualname":"::encode::Error","value":"pub enum Error { BufferTooSmall, __NonExhaustive, }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":207}],"decl_id":null,"docs":" Errors that could occur when encoding a Base58 encoded string.\n","sig":null,"attributes":[{"value":"/ Errors that could occur when encoding a Base58 encoded string.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22707,"byte_end":22773,"line_start":25,"line_end":25,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23112,"byte_end":23124,"line_start":37,"line_end":37,"column_start":11,"column_end":23},"name":"EncodeTarget","qualname":"::encode::EncodeTarget","value":"EncodeTarget","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":" Represents a buffer that can be encoded into. See [`EncodeBuilder::into`] and the provided\n implementations for more details.\n","sig":null,"attributes":[{"value":"/ Represents a buffer that can be encoded into. See [`EncodeBuilder::into`] and the provided","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":22969,"byte_end":23063,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ implementations for more details.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23064,"byte_end":23101,"line_start":36,"line_end":36,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23368,"byte_end":23379,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"encode_with","qualname":"::encode::EncodeTarget::encode_with","value":"pub fn encode_with<impl for<'a> FnOnce(&'a mut [u8]) -> Result<usize>: for<'a> FnOnce(&'a mut [u8])\n                   ->\n                   Result<usize>>(&mut Self, usize,\n                                  impl for<'a> FnOnce(&'a mut [u8]) -> Result<usize>)\n-> Result<usize>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Encodes into this buffer, provides the maximum length for implementations that wish to\n preallocate space, along with a function that will encode ASCII bytes into the buffer and\n return the length written to it.\n","sig":null,"attributes":[{"value":"/ Encodes into this buffer, provides the maximum length for implementations that wish to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23131,"byte_end":23221,"line_start":38,"line_end":38,"column_start":5,"column_end":95}},{"value":"/ preallocate space, along with a function that will encode ASCII bytes into the buffer and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23226,"byte_end":23319,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ return the length written to it.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23324,"byte_end":23360,"line_start":40,"line_end":40,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26403,"byte_end":26406,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodeBuilder>::new","value":"pub fn new(I, &'a [u8; ]) -> EncodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup encoder for the given string using the given alphabet.\n Preferably use [`bs58::encode`](../fn.encode.html) instead of this\n directly.\n","sig":null,"attributes":[{"value":"/ Setup encoder for the given string using the given alphabet.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26234,"byte_end":26298,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ Preferably use [`bs58::encode`](../fn.encode.html) instead of this","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26303,"byte_end":26373,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26378,"byte_end":26391,"line_start":142,"line_end":142,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27288,"byte_end":27301,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"with_alphabet","qualname":"<EncodeBuilder>::with_alphabet","value":"pub fn with_alphabet(Self, &'a [u8; ]) -> EncodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Change the alphabet that will be used for encoding.","sig":null,"attributes":[{"value":"/ Change the alphabet that will be used for encoding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26928,"byte_end":26983,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26988,"byte_end":26991,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26996,"byte_end":27010,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27015,"byte_end":27018,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27023,"byte_end":27034,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ let input = [0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27039,"byte_end":27098,"line_start":165,"line_end":165,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27103,"byte_end":27118,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/     \"he11owor1d\",","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27123,"byte_end":27144,"line_start":167,"line_end":167,"column_start":5,"column_end":26}},{"value":"/     bs58::encode(input)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27149,"byte_end":27176,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/         .with_alphabet(bs58::alphabet::RIPPLE)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27181,"byte_end":27231,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/         .into_string());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27236,"byte_end":27264,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27269,"byte_end":27276,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27837,"byte_end":27859,"line_start":189,"line_end":189,"column_start":12,"column_end":34},"name":"with_prepared_alphabet","qualname":"<EncodeBuilder>::with_prepared_alphabet","value":"pub fn with_prepared_alphabet(Self, &'a Alphabet) -> EncodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Change the alphabet that will be used for decoding.","sig":null,"attributes":[{"value":"/ Change the alphabet that will be used for decoding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27468,"byte_end":27523,"line_start":177,"line_end":177,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27528,"byte_end":27531,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27536,"byte_end":27550,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27555,"byte_end":27558,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27563,"byte_end":27574,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/ let input = [0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27579,"byte_end":27638,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27643,"byte_end":27658,"line_start":183,"line_end":183,"column_start":5,"column_end":20}},{"value":"/     \"he11owor1d\",","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27663,"byte_end":27684,"line_start":184,"line_end":184,"column_start":5,"column_end":26}},{"value":"/     bs58::encode(input)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27689,"byte_end":27716,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/         .with_prepared_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27721,"byte_end":27780,"line_start":186,"line_end":186,"column_start":5,"column_end":64}},{"value":"/         .into_string());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27785,"byte_end":27813,"line_start":187,"line_end":187,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":27818,"byte_end":27825,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29777,"byte_end":29788,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"into_string","qualname":"<EncodeBuilder>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode into a new owned string.","sig":null,"attributes":[{"value":"/ Encode into a new owned string.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29423,"byte_end":29458,"line_start":238,"line_end":238,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29463,"byte_end":29466,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29471,"byte_end":29485,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29490,"byte_end":29493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29498,"byte_end":29509,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29514,"byte_end":29579,"line_start":243,"line_end":243,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(\"he11owor1d\", bs58::encode(input).into_string());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29584,"byte_end":29648,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29653,"byte_end":29660,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29665,"byte_end":29690,"line_start":246,"line_end":246,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30268,"byte_end":30276,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<EncodeBuilder>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encode into a new owned vector.","sig":null,"attributes":[{"value":"/ Encode into a new owned vector.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29914,"byte_end":29949,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29954,"byte_end":29957,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29962,"byte_end":29976,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29981,"byte_end":29984,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":29989,"byte_end":30000,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30005,"byte_end":30070,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(b\"he11owor1d\", &*bs58::encode(input).into_vec());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30075,"byte_end":30139,"line_start":260,"line_end":260,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30144,"byte_end":30151,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30156,"byte_end":30181,"line_start":262,"line_end":262,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32515,"byte_end":32519,"line_start":330,"line_end":330,"column_start":12,"column_end":16},"name":"into","qualname":"<EncodeBuilder>::into","value":"pub fn into<impl EncodeTarget: EncodeTarget>(Self, impl EncodeTarget)\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Encode into the given buffer.","sig":null,"attributes":[{"value":"/ Encode into the given buffer.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30400,"byte_end":30433,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30438,"byte_end":30441,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns the length written into the buffer.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30446,"byte_end":30493,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30498,"byte_end":30501,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the buffer is resizeable it will be reallocated to fit the encoded data and truncated to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30506,"byte_end":30601,"line_start":274,"line_end":274,"column_start":5,"column_end":100}},{"value":"/ size.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30606,"byte_end":30615,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30620,"byte_end":30623,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the buffer is not resizeable bytes after the final character will be left alone, except","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30628,"byte_end":30722,"line_start":277,"line_end":277,"column_start":5,"column_end":99}},{"value":"/ up to 3 null bytes may be written to an `&mut str` to overwrite remaining characters of a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30727,"byte_end":30820,"line_start":278,"line_end":278,"column_start":5,"column_end":98}},{"value":"/ partially overwritten multi-byte character.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30825,"byte_end":30872,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30877,"byte_end":30880,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`bs58::encode`](../fn.encode.html) for an","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30885,"byte_end":30957,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ explanation of the errors that may occur.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":30962,"byte_end":31007,"line_start":282,"line_end":282,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31012,"byte_end":31015,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31020,"byte_end":31034,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31039,"byte_end":31042,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ## `Vec<u8>`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31047,"byte_end":31063,"line_start":286,"line_end":286,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31068,"byte_end":31071,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31076,"byte_end":31087,"line_start":288,"line_end":288,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31092,"byte_end":31157,"line_start":289,"line_end":289,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye world\".to_owned().into_bytes();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31162,"byte_end":31223,"line_start":290,"line_end":290,"column_start":5,"column_end":66}},{"value":"/ bs58::encode(input).into(&mut output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31228,"byte_end":31270,"line_start":291,"line_end":291,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(b\"he11owor1d\", &*output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31275,"byte_end":31315,"line_start":292,"line_end":292,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31320,"byte_end":31327,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31332,"byte_end":31335,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ## `&mut [u8]`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31340,"byte_end":31358,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31363,"byte_end":31366,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31371,"byte_end":31382,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31387,"byte_end":31452,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/ let mut output = Vec::from(\"goodbye world\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31457,"byte_end":31505,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ bs58::encode(input).into(&mut output[..]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31510,"byte_end":31556,"line_start":300,"line_end":300,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(b\"he11owor1drld\", &*output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31561,"byte_end":31604,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31609,"byte_end":31616,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31621,"byte_end":31624,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ## `String`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31629,"byte_end":31644,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31649,"byte_end":31652,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31657,"byte_end":31668,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31673,"byte_end":31738,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye world\".to_owned();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31743,"byte_end":31791,"line_start":308,"line_end":308,"column_start":5,"column_end":53}},{"value":"/ bs58::encode(input).into(&mut output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31796,"byte_end":31838,"line_start":309,"line_end":309,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(\"he11owor1d\", output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31843,"byte_end":31880,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31885,"byte_end":31892,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31897,"byte_end":31900,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ## `&mut str`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31905,"byte_end":31922,"line_start":313,"line_end":313,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31927,"byte_end":31930,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31935,"byte_end":31946,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":31951,"byte_end":32016,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye world\".to_owned();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32021,"byte_end":32069,"line_start":317,"line_end":317,"column_start":5,"column_end":53}},{"value":"/ bs58::encode(input).into(output.as_mut_str());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32074,"byte_end":32124,"line_start":318,"line_end":318,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(\"he11owor1drld\", output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32129,"byte_end":32169,"line_start":319,"line_end":319,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32174,"byte_end":32181,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32186,"byte_end":32189,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ### Clearing partially overwritten characters","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32194,"byte_end":32243,"line_start":322,"line_end":322,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32248,"byte_end":32251,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32256,"byte_end":32267,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32272,"byte_end":32337,"line_start":325,"line_end":325,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye w®ld\".to_owned();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32342,"byte_end":32390,"line_start":326,"line_end":326,"column_start":5,"column_end":52}},{"value":"/ bs58::encode(input).into(output.as_mut_str());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32395,"byte_end":32445,"line_start":327,"line_end":327,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(\"he11owor1d\\0ld\", output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32450,"byte_end":32491,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":32496,"byte_end":32503,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4427,"byte_end":4433,"line_start":157,"line_end":157,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"pub fn decode<I: AsRef<[u8]>>(I) -> decode::DecodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup decoder for the given string using the [default alphabet][].","sig":null,"attributes":[{"value":"/ Setup decoder for the given string using the [default alphabet][].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2779,"byte_end":2849,"line_start":94,"line_end":94,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2850,"byte_end":2853,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [default alphabet]: alphabet/constant.DEFAULT.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2854,"byte_end":2908,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2909,"byte_end":2912,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2913,"byte_end":2927,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2928,"byte_end":2931,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ## Basic example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2932,"byte_end":2952,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2953,"byte_end":2956,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2957,"byte_end":2968,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2969,"byte_end":2984,"line_start":103,"line_end":103,"column_start":1,"column_end":16}},{"value":"/     vec![0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58],","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2985,"byte_end":3046,"line_start":104,"line_end":104,"column_start":1,"column_end":62}},{"value":"/     bs58::decode(\"he11owor1d\").into_vec().unwrap());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3047,"byte_end":3103,"line_start":105,"line_end":105,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3104,"byte_end":3111,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3112,"byte_end":3115,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Changing the alphabet","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3116,"byte_end":3144,"line_start":108,"line_end":108,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3145,"byte_end":3148,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3149,"byte_end":3160,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3161,"byte_end":3176,"line_start":111,"line_end":111,"column_start":1,"column_end":16}},{"value":"/     vec![0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78],","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3177,"byte_end":3232,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/     bs58::decode(\"he11owor1d\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3233,"byte_end":3267,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/         .with_alphabet(bs58::alphabet::RIPPLE)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3268,"byte_end":3318,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"/         .into_vec().unwrap());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3319,"byte_end":3353,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3354,"byte_end":3361,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3362,"byte_end":3365,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Decoding into an existing buffer","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3366,"byte_end":3405,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3406,"byte_end":3409,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3410,"byte_end":3421,"line_start":120,"line_end":120,"column_start":1,"column_end":12}},{"value":"/ let mut output = [0xFF; 10];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3422,"byte_end":3454,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(8, bs58::decode(\"he11owor1d\").into(&mut output).unwrap());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3455,"byte_end":3528,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3529,"byte_end":3544,"line_start":123,"line_end":123,"column_start":1,"column_end":16}},{"value":"/     [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58, 0xFF, 0xFF],","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3545,"byte_end":3614,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"/     output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3615,"byte_end":3631,"line_start":125,"line_end":125,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3632,"byte_end":3639,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3640,"byte_end":3643,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3644,"byte_end":3657,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3658,"byte_end":3661,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Invalid Character","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3662,"byte_end":3687,"line_start":130,"line_end":130,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3688,"byte_end":3691,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3692,"byte_end":3703,"line_start":132,"line_end":132,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3704,"byte_end":3719,"line_start":133,"line_end":133,"column_start":1,"column_end":16}},{"value":"/     bs58::decode::Error::InvalidCharacter { character: 'l', index: 2 },","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3720,"byte_end":3795,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/     bs58::decode(\"hello world\").into_vec().unwrap_err());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3796,"byte_end":3857,"line_start":135,"line_end":135,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3858,"byte_end":3865,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3866,"byte_end":3869,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ### Non-ASCII Character","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3870,"byte_end":3897,"line_start":138,"line_end":138,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3898,"byte_end":3901,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3902,"byte_end":3913,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3914,"byte_end":3929,"line_start":141,"line_end":141,"column_start":1,"column_end":16}},{"value":"/     bs58::decode::Error::NonAsciiCharacter { index: 5 },","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3930,"byte_end":3990,"line_start":142,"line_end":142,"column_start":1,"column_end":61}},{"value":"/     bs58::decode(\"he11o🇳🇿\").into_vec().unwrap_err());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":3991,"byte_end":4054,"line_start":143,"line_end":143,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4055,"byte_end":4062,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4063,"byte_end":4066,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ### Too Small Buffer","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4067,"byte_end":4091,"line_start":146,"line_end":146,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4092,"byte_end":4095,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This error can only occur when reading into a provided buffer, when using","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4096,"byte_end":4173,"line_start":148,"line_end":148,"column_start":1,"column_end":78}},{"value":"/ `.into_vec` a vector large enough is guaranteed to be used.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4174,"byte_end":4237,"line_start":149,"line_end":149,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4238,"byte_end":4241,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4242,"byte_end":4253,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ let mut output = [0; 7];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4254,"byte_end":4282,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4283,"byte_end":4298,"line_start":153,"line_end":153,"column_start":1,"column_end":16}},{"value":"/     bs58::decode::Error::BufferTooSmall,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4299,"byte_end":4343,"line_start":154,"line_end":154,"column_start":1,"column_end":45}},{"value":"/     bs58::decode(\"he11owor1d\").into(&mut output).unwrap_err());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4344,"byte_end":4411,"line_start":155,"line_end":155,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4412,"byte_end":4419,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5777,"byte_end":5783,"line_start":207,"line_end":207,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"pub fn encode<I: AsRef<[u8]>>(I) -> encode::EncodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup encoder for the given bytes using the [default alphabet][].","sig":null,"attributes":[{"value":"/ Setup encoder for the given bytes using the [default alphabet][].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4547,"byte_end":4616,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4617,"byte_end":4620,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [default alphabet]: alphabet/constant.DEFAULT.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4621,"byte_end":4675,"line_start":163,"line_end":163,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4676,"byte_end":4679,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4680,"byte_end":4694,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4695,"byte_end":4698,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## Basic example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4699,"byte_end":4719,"line_start":167,"line_end":167,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4720,"byte_end":4723,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4724,"byte_end":4735,"line_start":169,"line_end":169,"column_start":1,"column_end":12}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4736,"byte_end":4801,"line_start":170,"line_end":170,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(\"he11owor1d\", bs58::encode(input).into_string());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4802,"byte_end":4866,"line_start":171,"line_end":171,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4867,"byte_end":4874,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4875,"byte_end":4878,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ## Changing the alphabet","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4879,"byte_end":4907,"line_start":174,"line_end":174,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4908,"byte_end":4911,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4912,"byte_end":4923,"line_start":176,"line_end":176,"column_start":1,"column_end":12}},{"value":"/ let input = [0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4924,"byte_end":4983,"line_start":177,"line_end":177,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":4984,"byte_end":4999,"line_start":178,"line_end":178,"column_start":1,"column_end":16}},{"value":"/     \"he11owor1d\",","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5000,"byte_end":5021,"line_start":179,"line_end":179,"column_start":1,"column_end":22}},{"value":"/     bs58::encode(input)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5022,"byte_end":5049,"line_start":180,"line_end":180,"column_start":1,"column_end":28}},{"value":"/         .with_alphabet(bs58::alphabet::RIPPLE)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5050,"byte_end":5100,"line_start":181,"line_end":181,"column_start":1,"column_end":51}},{"value":"/         .into_string());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5101,"byte_end":5129,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5130,"byte_end":5137,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5138,"byte_end":5141,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ## Encoding into an existing string","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5142,"byte_end":5181,"line_start":185,"line_end":185,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5182,"byte_end":5185,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5186,"byte_end":5197,"line_start":187,"line_end":187,"column_start":1,"column_end":12}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5198,"byte_end":5263,"line_start":188,"line_end":188,"column_start":1,"column_end":66}},{"value":"/ let mut output = \"goodbye world\".to_owned();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5264,"byte_end":5312,"line_start":189,"line_end":189,"column_start":1,"column_end":49}},{"value":"/ bs58::encode(input).into(&mut output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5313,"byte_end":5355,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(\"he11owor1d\", output);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5356,"byte_end":5393,"line_start":191,"line_end":191,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5394,"byte_end":5401,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5402,"byte_end":5405,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5406,"byte_end":5419,"line_start":194,"line_end":194,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5420,"byte_end":5423,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ### Too Small Buffer","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5424,"byte_end":5448,"line_start":196,"line_end":196,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5449,"byte_end":5452,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ This error can only occur when reading into an unresizeable buffer.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5453,"byte_end":5524,"line_start":198,"line_end":198,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5525,"byte_end":5528,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5529,"byte_end":5540,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5541,"byte_end":5606,"line_start":201,"line_end":201,"column_start":1,"column_end":66}},{"value":"/ let mut output = [0; 7];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5607,"byte_end":5635,"line_start":202,"line_end":202,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5636,"byte_end":5651,"line_start":203,"line_end":203,"column_start":1,"column_end":16}},{"value":"/     bs58::encode::Error::BufferTooSmall,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5652,"byte_end":5696,"line_start":204,"line_end":204,"column_start":1,"column_end":45}},{"value":"/     bs58::encode(input).into(&mut output[..]).unwrap_err());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5697,"byte_end":5761,"line_start":205,"line_end":205,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":5762,"byte_end":5769,"line_start":206,"line_end":206,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7288,"byte_end":7296,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":13586,"byte_end":13599,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":20582,"byte_end":20587,"line_start":304,"line_end":304,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":20614,"byte_end":20619,"line_start":306,"line_end":306,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23891,"byte_end":23894,"line_start":60,"line_end":60,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":24291,"byte_end":24297,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":25136,"byte_end":25141,"line_start":107,"line_end":107,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26207,"byte_end":26220,"line_start":139,"line_end":139,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":35075,"byte_end":35080,"line_start":419,"line_end":419,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":35107,"byte_end":35112,"line_start":421,"line_end":421,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2535,"byte_end":2543,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2582,"byte_end":2588,"line_start":81,"line_end":81,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":37}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\lib.rs","byte_start":2598,"byte_end":2604,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":84}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\alphabet.rs","byte_start":7288,"byte_end":7296,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":13586,"byte_end":13599,"line_start":80,"line_end":80,"column_start":26,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":20582,"byte_end":20587,"line_start":304,"line_end":304,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":182},"to":{"krate":4,"index":2326}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\decode.rs","byte_start":20614,"byte_end":20619,"line_start":306,"line_end":306,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":8901}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":23891,"byte_end":23894,"line_start":60,"line_end":60,"column_start":23,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":24291,"byte_end":24297,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":113}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":25136,"byte_end":25141,"line_start":107,"line_end":107,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":138},"to":{"krate":1,"index":3088}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":26207,"byte_end":26220,"line_start":139,"line_end":139,"column_start":26,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":35075,"byte_end":35080,"line_start":419,"line_end":419,"column_start":28,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":204},"to":{"krate":4,"index":2326}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bs58-0.3.1\\src\\encode.rs","byte_start":35107,"byte_end":35112,"line_start":421,"line_end":421,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":204},"to":{"krate":1,"index":8901}}]}