{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3","program":"C:\\Users\\sagar\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","curve25519_dalek","C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"u64_backend\"","-C","metadata=38622515beaac7bc","-C","extra-filename=-38622515beaac7bc","--out-dir","d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps","-L","dependency=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps","--extern","byteorder=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libbyteorder-3c23d9e5dd0245df.rmeta","--extern","digest=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libdigest-b8a9bf9f925eceea.rmeta","--extern","rand_core=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\librand_core-153ecdcea1663aae.rmeta","--extern","subtle=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libsubtle-cfeb6b70b15349d4.rmeta","--extern","zeroize=d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libzeroize-22cf3df723f28a7e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\sagar\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Solana\\metaplex-master\\metaplex-master\\rust\\metaplex\\program\\target\\rls\\debug\\deps\\libcurve25519_dalek-38622515beaac7bc.rmeta"},"prelude":{"crate_id":{"name":"curve25519_dalek","disambiguator":[55793186400778065,14898627820664909290]},"crate_root":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src","external_crates":[{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[5048311760381386034,12753961808535803278]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[847775214756591688,12437863933651081164]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[18098153966720408130,4102567439342721650]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[902711862199739234,15082167224296373374]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14085577876822856882,15393158987199036233]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[3188366355873518403,14471389999965490426]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10237517513868340142,18396708545822173986]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17305999185247584930,14125623615750666193]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7451980452763147359,4800032867518142595]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[842541340887862638,17591716377464122790]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14650435931294811010,18006816567319070280]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16073749092757737146,5785406473963590530]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9426002052484834533,14451905897035318657]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[4365510690414145393,13457483612778727109]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":15,"id":{"name":"digest","disambiguator":[14699902652939998138,7631645226747060679]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":16,"id":{"name":"generic_array","disambiguator":[98887055020014592,3120452516884078399]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":17,"id":{"name":"typenum","disambiguator":[1952205607033064429,7847743123002599356]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":18,"id":{"name":"rand_core","disambiguator":[455231888176045651,12732890092453669713]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":19,"id":{"name":"getrandom","disambiguator":[5097445155062076501,13635634868152954274]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[5920805980929341637,15126950819943592384]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":21,"id":{"name":"zeroize","disambiguator":[15139314282288749981,13614797801139112226]}},{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","num":22,"id":{"name":"subtle","disambiguator":[10284896724090985869,10497008215470073383]}}],"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":290,"byte_end":13895,"line_start":11,"line_end":316,"column_start":1,"column_end":23}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193327,"byte_end":193328,"line_start":37,"line_end":37,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"LFACTOR, EDWARDS_D_MINUS_ONE_SQUARED, ED25519_BASEPOINT_POINT, SQRT_AD_MINUS_ONE, R, EDWARDS_D2, AFFINE_ODD_MULTIPLES_OF_BASEPOINT, EDWARDS_D, MINUS_ONE, ONE_MINUS_EDWARDS_D_SQUARED, EIGHT_TORSION, ED25519_BASEPOINT_TABLE, APLUS2_OVER_FOUR, RR, INVSQRT_A_MINUS_D, SQRT_M1, L","parent":{"krate":0,"index":812}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":290,"byte_end":13895,"line_start":11,"line_end":316,"column_start":1,"column_end":23},"name":"","qualname":"::","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":17},{"krate":0,"index":269},{"krate":0,"index":348},{"krate":0,"index":578},{"krate":0,"index":812},{"krate":0,"index":838},{"krate":0,"index":889},{"krate":0,"index":932},{"krate":0,"index":1428},{"krate":0,"index":1432}],"decl_id":null,"docs":" # curve25519-dalek [![](https://img.shields.io/crates/v/curve25519-dalek.svg)](https://crates.io/crates/curve25519-dalek) [![](https://img.shields.io/badge/dynamic/json.svg?label=docs&uri=https%3A%2F%2Fcrates.io%2Fapi%2Fv1%2Fcrates%2Fcurve25519-dalek%2Fversions&query=%24.versions%5B0%5D.num&colorB=4F74A6)](https://doc.dalek.rs) [![](https://travis-ci.org/dalek-cryptography/curve25519-dalek.svg?branch=master)](https://travis-ci.org/dalek-cryptography/curve25519-dalek)","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":290,"byte_end":300,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":510,"byte_end":532,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/ # curve25519-dalek [![](https://img.shields.io/crates/v/curve25519-dalek.svg)](https://crates.io/crates/curve25519-dalek) [![](https://img.shields.io/badge/dynamic/json.svg?label=docs&uri=https%3A%2F%2Fcrates.io%2Fapi%2Fv1%2Fcrates%2Fcurve25519-dalek%2Fversions&query=%24.versions%5B0%5D.num&colorB=4F74A6)](https://doc.dalek.rs) [![](https://travis-ci.org/dalek-cryptography/curve25519-dalek.svg?branch=master)](https://travis-ci.org/dalek-cryptography/curve25519-dalek)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":677,"byte_end":1152,"line_start":22,"line_end":22,"column_start":1,"column_end":476}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1153,"byte_end":1156,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ <img","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1157,"byte_end":1165,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/  width=\"33%\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1166,"byte_end":1182,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/  align=\"right\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1183,"byte_end":1201,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/  src=\"https://doc.dalek.rs/assets/dalek-logo-clear.png\"/>","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1202,"byte_end":1263,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1264,"byte_end":1267,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ **A pure-Rust implementation of group operations on Ristretto and Curve25519.**","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1268,"byte_end":1351,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1352,"byte_end":1355,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is a library providing group operations on the Edwards and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1356,"byte_end":1437,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/ Montgomery forms of Curve25519, and on the prime-order Ristretto group.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1438,"byte_end":1513,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1514,"byte_end":1517,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is not intended to provide implementations of any particular","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1518,"byte_end":1601,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/ crypto protocol.  Rather, implementations of those protocols (such as","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1602,"byte_end":1675,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ [`x25519-dalek`][x25519-dalek] and [`ed25519-dalek`][ed25519-dalek]) should use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1676,"byte_end":1759,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ `curve25519-dalek` as a library.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1760,"byte_end":1796,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1797,"byte_end":1800,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is intended to provide a clean and safe _mid-level_ API for use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1801,"byte_end":1887,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ implementing a wide range of ECC-based crypto protocols, such as key agreement,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1888,"byte_end":1971,"line_start":40,"line_end":40,"column_start":1,"column_end":84}},{"value":"/ signatures, anonymous credentials, rangeproofs, and zero-knowledge proof","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":1972,"byte_end":2048,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ systems.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2049,"byte_end":2061,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2062,"byte_end":2065,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ In particular, `curve25519-dalek` implements Ristretto, which constructs a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2066,"byte_end":2144,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ prime-order group from a non-prime-order Edwards curve.  This provides the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2145,"byte_end":2223,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ speed and safety benefits of Edwards curve arithmetic, without the pitfalls of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2224,"byte_end":2306,"line_start":46,"line_end":46,"column_start":1,"column_end":83}},{"value":"/ cofactor-related abstraction mismatches.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2307,"byte_end":2351,"line_start":47,"line_end":47,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2352,"byte_end":2355,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Documentation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2356,"byte_end":2375,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2376,"byte_end":2379,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The semver-stable, public-facing `curve25519-dalek` API is documented","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2380,"byte_end":2453,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ [here][docs-external].  In addition, the unstable internal implementation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2454,"byte_end":2531,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ details are documented [here][docs-internal].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2532,"byte_end":2581,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2582,"byte_end":2585,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The `curve25519-dalek` documentation requires a custom HTML header to include","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2586,"byte_end":2667,"line_start":55,"line_end":55,"column_start":1,"column_end":82}},{"value":"/ KaTeX for math support. Unfortunately `cargo doc` does not currently support","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2668,"byte_end":2748,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ this, but docs can be built using","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2749,"byte_end":2786,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2787,"byte_end":2796,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/ make doc","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2797,"byte_end":2809,"line_start":59,"line_end":59,"column_start":1,"column_end":13}},{"value":"/ make doc-internal","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2810,"byte_end":2831,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2832,"byte_end":2839,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2840,"byte_end":2843,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2844,"byte_end":2853,"line_start":63,"line_end":63,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2854,"byte_end":2857,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ To import `curve25519-dalek`, add the following to the dependencies section of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2858,"byte_end":2940,"line_start":65,"line_end":65,"column_start":1,"column_end":83}},{"value":"/ your project's `Cargo.toml`:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2941,"byte_end":2973,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2974,"byte_end":2985,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ curve25519-dalek = \"3\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":2986,"byte_end":3012,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3013,"byte_end":3020,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3021,"byte_end":3024,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The sole breaking change in the `3.x` series was an update to the `digest`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3025,"byte_end":3103,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ version, and in terms of non-breaking changes it includes:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3104,"byte_end":3166,"line_start":72,"line_end":72,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3167,"byte_end":3170,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ * support for using `alloc` instead of `std` on stable Rust,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3171,"byte_end":3235,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ * the Elligator2 encoding for Edwards points,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3236,"byte_end":3285,"line_start":75,"line_end":75,"column_start":1,"column_end":50}},{"value":"/ * a fix to use `packed_simd2`,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3286,"byte_end":3320,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ * various documentation fixes and improvements,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3321,"byte_end":3372,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ * support for configurably-sized, precomputed lookup tables for basepoint scalar","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3373,"byte_end":3457,"line_start":78,"line_end":78,"column_start":1,"column_end":85}},{"value":"/   multiplication,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3458,"byte_end":3479,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/ * two new formally-verified field arithmetic backends which use the Fiat Crypto","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3480,"byte_end":3563,"line_start":80,"line_end":80,"column_start":1,"column_end":84}},{"value":"/   Rust code, which is generated from proofs of functional correctness checked by","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3564,"byte_end":3648,"line_start":81,"line_end":81,"column_start":1,"column_end":85}},{"value":"/   the Coq theorem proving system, and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3649,"byte_end":3690,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/ * support for explicitly calling the `zeroize` traits for all point types.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3691,"byte_end":3769,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3770,"byte_end":3773,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The `2.x` series has API almost entirely unchanged from the `1.x` series,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3774,"byte_end":3851,"line_start":85,"line_end":85,"column_start":1,"column_end":78}},{"value":"/ except that:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3852,"byte_end":3868,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3869,"byte_end":3872,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * an error in the data modeling for the (optional) `serde` feature was","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3873,"byte_end":3947,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/   corrected, so that when the `2.x`-series `serde` implementation is used","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":3948,"byte_end":4025,"line_start":89,"line_end":89,"column_start":1,"column_end":78}},{"value":"/   with `serde-bincode`, the derived serialization matches the usual X/Ed25519","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4026,"byte_end":4107,"line_start":90,"line_end":90,"column_start":1,"column_end":82}},{"value":"/   formats;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4108,"byte_end":4122,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ * the `rand` version was updated.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4123,"byte_end":4160,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4161,"byte_end":4164,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ See `CHANGELOG.md` for more details.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4165,"byte_end":4205,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4206,"byte_end":4209,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Backends and Features","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4210,"byte_end":4237,"line_start":96,"line_end":96,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4238,"byte_end":4241,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The `nightly` feature enables features available only when using a Rust nightly","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4242,"byte_end":4325,"line_start":98,"line_end":98,"column_start":1,"column_end":84}},{"value":"/ compiler.  In particular, it is required for rendering documentation and for","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4326,"byte_end":4406,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ the SIMD backends.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4407,"byte_end":4429,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4430,"byte_end":4433,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Curve arithmetic is implemented using one of the following backends:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4434,"byte_end":4506,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4507,"byte_end":4510,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ * a `u32` backend using serial formulas and `u64` products;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4511,"byte_end":4574,"line_start":104,"line_end":104,"column_start":1,"column_end":64}},{"value":"/ * a `u64` backend using serial formulas and `u128` products;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4575,"byte_end":4639,"line_start":105,"line_end":105,"column_start":1,"column_end":65}},{"value":"/ * an `avx2` backend using [parallel formulas][parallel_doc] and `avx2` instructions (sets speed records);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4640,"byte_end":4749,"line_start":106,"line_end":106,"column_start":1,"column_end":110}},{"value":"/ * an `ifma` backend using [parallel formulas][parallel_doc] and `ifma` instructions (sets speed records);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4750,"byte_end":4859,"line_start":107,"line_end":107,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4860,"byte_end":4863,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ By default the `u64` backend is selected.  To select a specific backend, use:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4864,"byte_end":4945,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4946,"byte_end":4955,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ cargo build --no-default-features --features \"std u32_backend\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":4956,"byte_end":5022,"line_start":111,"line_end":111,"column_start":1,"column_end":67}},{"value":"/ cargo build --no-default-features --features \"std u64_backend\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5023,"byte_end":5089,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ # Requires nightly, RUSTFLAGS=\"-C target_feature=+avx2\" to use avx2","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5090,"byte_end":5161,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/ cargo build --no-default-features --features \"std simd_backend\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5162,"byte_end":5229,"line_start":114,"line_end":114,"column_start":1,"column_end":68}},{"value":"/ # Requires nightly, RUSTFLAGS=\"-C target_feature=+avx512ifma\" to use ifma","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5230,"byte_end":5307,"line_start":115,"line_end":115,"column_start":1,"column_end":78}},{"value":"/ cargo build --no-default-features --features \"std simd_backend\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5308,"byte_end":5375,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5376,"byte_end":5383,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ Crates using `curve25519-dalek` can either select a backend on behalf of their","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5384,"byte_end":5466,"line_start":118,"line_end":118,"column_start":1,"column_end":83}},{"value":"/ users, or expose feature flags that control the `curve25519-dalek` backend.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5467,"byte_end":5546,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5547,"byte_end":5550,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The `std` feature is enabled by default, but it can be disabled for no-`std`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5551,"byte_end":5631,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ builds using `--no-default-features`.  Note that this requires explicitly","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5632,"byte_end":5709,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ selecting an arithmetic backend using one of the `_backend` features.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5710,"byte_end":5783,"line_start":123,"line_end":123,"column_start":1,"column_end":74}},{"value":"/ If no backend is selected, compilation will fail.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5784,"byte_end":5837,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5838,"byte_end":5841,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5842,"byte_end":5854,"line_start":126,"line_end":126,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5855,"byte_end":5858,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The `curve25519-dalek` types are designed to make illegal states","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5859,"byte_end":5927,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/ unrepresentable.  For example, any instance of an `EdwardsPoint` is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":5928,"byte_end":5999,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/ guaranteed to hold a point on the Edwards curve, and any instance of a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6000,"byte_end":6074,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ `RistrettoPoint` is guaranteed to hold a valid point in the Ristretto","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6075,"byte_end":6148,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"/ group.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6149,"byte_end":6159,"line_start":132,"line_end":132,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6160,"byte_end":6163,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ All operations are implemented using constant-time logic (no","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6164,"byte_end":6228,"line_start":134,"line_end":134,"column_start":1,"column_end":65}},{"value":"/ secret-dependent branches, no secret-dependent memory accesses),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6229,"byte_end":6297,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/ unless specifically marked as being variable-time code.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6298,"byte_end":6357,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ We believe that our constant-time logic is lowered to constant-time","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6358,"byte_end":6429,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"/ assembly, at least on `x86_64` targets.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6430,"byte_end":6473,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6474,"byte_end":6477,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ As an additional guard against possible future compiler optimizations,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6478,"byte_end":6552,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ the `subtle` crate places an optimization barrier before every","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6553,"byte_end":6619,"line_start":141,"line_end":141,"column_start":1,"column_end":67}},{"value":"/ conditional move or assignment.  More details can be found in [the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6620,"byte_end":6690,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/ documentation for the `subtle` crate][subtle_doc].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6691,"byte_end":6745,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6746,"byte_end":6749,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Some functionality (e.g., multiscalar multiplication or batch","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6750,"byte_end":6815,"line_start":145,"line_end":145,"column_start":1,"column_end":66}},{"value":"/ inversion) requires heap allocation for temporary buffers.  All","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6816,"byte_end":6883,"line_start":146,"line_end":146,"column_start":1,"column_end":68}},{"value":"/ heap-allocated buffers of potentially secret data are explicitly","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6884,"byte_end":6952,"line_start":147,"line_end":147,"column_start":1,"column_end":69}},{"value":"/ zeroed before release.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6953,"byte_end":6979,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6980,"byte_end":6983,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ However, we do not attempt to zero stack data, for two reasons.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":6984,"byte_end":7051,"line_start":150,"line_end":150,"column_start":1,"column_end":68}},{"value":"/ First, it's not possible to do so correctly: we don't have control","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7052,"byte_end":7122,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/ over stack allocations, so there's no way to know how much data to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7123,"byte_end":7193,"line_start":152,"line_end":152,"column_start":1,"column_end":71}},{"value":"/ wipe.  Second, because `curve25519-dalek` provides a mid-level API,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7194,"byte_end":7265,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/ the correct place to start zeroing stack data is likely not at the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7266,"byte_end":7336,"line_start":154,"line_end":154,"column_start":1,"column_end":71}},{"value":"/ entrypoints of `curve25519-dalek` functions, but at the entrypoints of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7337,"byte_end":7411,"line_start":155,"line_end":155,"column_start":1,"column_end":75}},{"value":"/ functions in other crates.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7412,"byte_end":7442,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7443,"byte_end":7446,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The implementation is memory-safe, and contains no significant","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7447,"byte_end":7513,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"/ `unsafe` code.  The SIMD backend uses `unsafe` internally to call SIMD","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7514,"byte_end":7588,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ intrinsics.  These are marked `unsafe` only because invoking them on an","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7589,"byte_end":7664,"line_start":160,"line_end":160,"column_start":1,"column_end":76}},{"value":"/ inappropriate CPU would cause `SIGILL`, but the entire backend is only","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7665,"byte_end":7739,"line_start":161,"line_end":161,"column_start":1,"column_end":75}},{"value":"/ compiled with appropriate `target_feature`s, so this cannot occur.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7740,"byte_end":7810,"line_start":162,"line_end":162,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7811,"byte_end":7814,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7815,"byte_end":7832,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7833,"byte_end":7836,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Benchmarks are run using [`criterion.rs`][criterion]:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7837,"byte_end":7894,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7895,"byte_end":7898,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```sh","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7899,"byte_end":7908,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/ cargo bench --no-default-features --features \"std u32_backend\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7909,"byte_end":7975,"line_start":169,"line_end":169,"column_start":1,"column_end":67}},{"value":"/ cargo bench --no-default-features --features \"std u64_backend\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":7976,"byte_end":8042,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ # Uses avx2 or ifma only if compiled for an appropriate target.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8043,"byte_end":8110,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/ export RUSTFLAGS=\"-C target_cpu=native\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8111,"byte_end":8154,"line_start":172,"line_end":172,"column_start":1,"column_end":44}},{"value":"/ cargo bench --no-default-features --features \"std simd_backend\"","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8155,"byte_end":8222,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8223,"byte_end":8230,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8231,"byte_end":8234,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Performance is a secondary goal behind correctness, safety, and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8235,"byte_end":8302,"line_start":176,"line_end":176,"column_start":1,"column_end":68}},{"value":"/ clarity, but we aim to be competitive with other implementations.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8303,"byte_end":8372,"line_start":177,"line_end":177,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8373,"byte_end":8376,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # FFI","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8377,"byte_end":8386,"line_start":179,"line_end":179,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8387,"byte_end":8390,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ Unfortunately, we have no plans to add FFI to `curve25519-dalek` directly.  The","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8391,"byte_end":8474,"line_start":181,"line_end":181,"column_start":1,"column_end":84}},{"value":"/ reason is that we use Rust features to provide an API that maintains safety","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8475,"byte_end":8554,"line_start":182,"line_end":182,"column_start":1,"column_end":80}},{"value":"/ invariants, which are not possible to maintain across an FFI boundary.  For","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8555,"byte_end":8634,"line_start":183,"line_end":183,"column_start":1,"column_end":80}},{"value":"/ instance, as described in the _Safety_ section above, invalid points are","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8635,"byte_end":8711,"line_start":184,"line_end":184,"column_start":1,"column_end":77}},{"value":"/ impossible to construct, and this would not be the case if we exposed point","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8712,"byte_end":8791,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ operations over FFI.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8792,"byte_end":8816,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8817,"byte_end":8820,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ However, `curve25519-dalek` is designed as a *mid-level* API, aimed at","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8821,"byte_end":8895,"line_start":188,"line_end":188,"column_start":1,"column_end":75}},{"value":"/ implementing other, higher-level primitives.  Instead of providing FFI at the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8896,"byte_end":8977,"line_start":189,"line_end":189,"column_start":1,"column_end":82}},{"value":"/ mid-level, our suggestion is to implement the higher-level primitive (a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":8978,"byte_end":9053,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"/ signature, PAKE, ZKP, etc) in Rust, using `curve25519-dalek` as a dependency,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9054,"byte_end":9135,"line_start":191,"line_end":191,"column_start":1,"column_end":82}},{"value":"/ and have that crate provide a minimal, byte-buffer-oriented FFI specific to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9136,"byte_end":9215,"line_start":192,"line_end":192,"column_start":1,"column_end":80}},{"value":"/ that primitive.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9216,"byte_end":9235,"line_start":193,"line_end":193,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9236,"byte_end":9239,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ # Contributing","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9240,"byte_end":9258,"line_start":195,"line_end":195,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9259,"byte_end":9262,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Please see [CONTRIBUTING.md][contributing].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9263,"byte_end":9310,"line_start":197,"line_end":197,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9311,"byte_end":9314,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ Patches and pull requests should be make against the `develop`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9315,"byte_end":9381,"line_start":199,"line_end":199,"column_start":1,"column_end":67}},{"value":"/ branch, **not** `master`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9382,"byte_end":9411,"line_start":200,"line_end":200,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9412,"byte_end":9415,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # About","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9416,"byte_end":9427,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9428,"byte_end":9431,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ **SPOILER ALERT:** *The Twelfth Doctor's first encounter with the Daleks is in","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9432,"byte_end":9514,"line_start":204,"line_end":204,"column_start":1,"column_end":83}},{"value":"/ his second full episode, \"Into the Dalek\". A beleaguered ship of the \"Combined","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9515,"byte_end":9597,"line_start":205,"line_end":205,"column_start":1,"column_end":83}},{"value":"/ Galactic Resistance\" has discovered a broken Dalek that has turned \"good\",","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9598,"byte_end":9676,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ desiring to kill all other Daleks. The Doctor, Clara and a team of soldiers","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9677,"byte_end":9756,"line_start":207,"line_end":207,"column_start":1,"column_end":80}},{"value":"/ are miniaturized and enter the Dalek, which the Doctor names Rusty. They","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9757,"byte_end":9833,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ repair the damage, but accidentally restore it to its original nature, causing","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9834,"byte_end":9916,"line_start":209,"line_end":209,"column_start":1,"column_end":83}},{"value":"/ it to go on the rampage and alert the Dalek fleet to the whereabouts of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9917,"byte_end":9996,"line_start":210,"line_end":210,"column_start":1,"column_end":80}},{"value":"/ rebel ship. However, the Doctor manages to return Rusty to its previous state","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":9997,"byte_end":10078,"line_start":211,"line_end":211,"column_start":1,"column_end":82}},{"value":"/ by linking his mind with the Dalek's: Rusty shares the Doctor's view of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10079,"byte_end":10158,"line_start":212,"line_end":212,"column_start":1,"column_end":80}},{"value":"/ universe's beauty, but also his deep hatred of the Daleks. Rusty destroys the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10159,"byte_end":10240,"line_start":213,"line_end":213,"column_start":1,"column_end":82}},{"value":"/ other Daleks and departs the ship, determined to track down and bring an end","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10241,"byte_end":10321,"line_start":214,"line_end":214,"column_start":1,"column_end":81}},{"value":"/ to the Dalek race.*","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10322,"byte_end":10345,"line_start":215,"line_end":215,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10346,"byte_end":10349,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is authored by Isis Agora Lovecruft and Henry de Valence.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10350,"byte_end":10430,"line_start":217,"line_end":217,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10431,"byte_end":10434,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Portions of this library were originally a port of [Adam Langley's","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10435,"byte_end":10505,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"/ Golang ed25519 library](https://!github.com/agl/ed25519), which was in","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10506,"byte_end":10580,"line_start":220,"line_end":220,"column_start":1,"column_end":75}},{"value":"/ turn a port of the reference `ref10` implementation.  Most of this code,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10581,"byte_end":10657,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ including the 32-bit field arithmetic, has since been rewritten.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10658,"byte_end":10726,"line_start":222,"line_end":222,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10727,"byte_end":10730,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ The fast `u32` and `u64` scalar arithmetic was implemented by Andrew Moon, and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10731,"byte_end":10813,"line_start":224,"line_end":224,"column_start":1,"column_end":83}},{"value":"/ the addition chain for scalar inversion was provided by Brian Smith.  The","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10814,"byte_end":10891,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ optimised batch inversion was contributed by Sean Bowe and Daira Hopwood.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10892,"byte_end":10969,"line_start":226,"line_end":226,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10970,"byte_end":10973,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ The `no_std` and `zeroize` support was contributed by Tony Arcieri.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":10974,"byte_end":11045,"line_start":228,"line_end":228,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11046,"byte_end":11049,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ The formally verified backends, `fiat_u32_backend` and `fiat_u64_backend`, which","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11050,"byte_end":11134,"line_start":230,"line_end":230,"column_start":1,"column_end":85}},{"value":"/ integrate with the Rust generated by the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11135,"byte_end":11179,"line_start":231,"line_end":231,"column_start":1,"column_end":45}},{"value":"/ [Fiat Crypto project](https://github.com/mit-plv/fiat-crypto) were contributed","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11180,"byte_end":11262,"line_start":232,"line_end":232,"column_start":1,"column_end":83}},{"value":"/ by François Garillot.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11263,"byte_end":11289,"line_start":233,"line_end":233,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11290,"byte_end":11293,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ Thanks also to Ashley Hauck, Lucas Salibian, Manish Goregaokar, Jack Grigg,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11294,"byte_end":11373,"line_start":235,"line_end":235,"column_start":1,"column_end":80}},{"value":"/ Pratyush Mishra, Michael Rosenberg, and countless others for their","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11374,"byte_end":11444,"line_start":236,"line_end":236,"column_start":1,"column_end":71}},{"value":"/ contributions.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11445,"byte_end":11463,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11464,"byte_end":11467,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ [ed25519-dalek]: https://github.com/dalek-cryptography/ed25519-dalek","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11468,"byte_end":11540,"line_start":239,"line_end":239,"column_start":1,"column_end":73}},{"value":"/ [x25519-dalek]: https://github.com/dalek-cryptography/x25519-dalek","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11541,"byte_end":11611,"line_start":240,"line_end":240,"column_start":1,"column_end":71}},{"value":"/ [contributing]: https://github.com/dalek-cryptography/curve25519-dalek/blob/master/CONTRIBUTING.md","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11612,"byte_end":11714,"line_start":241,"line_end":241,"column_start":1,"column_end":103}},{"value":"/ [docs-external]: https://doc.dalek.rs/curve25519_dalek/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11715,"byte_end":11774,"line_start":242,"line_end":242,"column_start":1,"column_end":60}},{"value":"/ [docs-internal]: https://doc-internal.dalek.rs/curve25519_dalek/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11775,"byte_end":11843,"line_start":243,"line_end":243,"column_start":1,"column_end":69}},{"value":"/ [criterion]: https://github.com/japaric/criterion.rs","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11844,"byte_end":11900,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/ [parallel_doc]: https://doc-internal.dalek.rs/curve25519_dalek/backend/vector/avx2/index.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11901,"byte_end":11998,"line_start":245,"line_end":245,"column_start":1,"column_end":98}},{"value":"/ [subtle_doc]: https://doc.dalek.rs/subtle/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":11999,"byte_end":12045,"line_start":246,"line_end":246,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scalar","qualname":"::scalar","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":98},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":1522},{"krate":0,"index":120},{"krate":0,"index":1524},{"krate":0,"index":1528},{"krate":0,"index":1532},{"krate":0,"index":125},{"krate":0,"index":1535},{"krate":0,"index":128},{"krate":0,"index":1537},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":133},{"krate":0,"index":1548},{"krate":0,"index":136},{"krate":0,"index":1550},{"krate":0,"index":1554},{"krate":0,"index":1558},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":177},{"krate":0,"index":187},{"krate":0,"index":197},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":264}],"decl_id":null,"docs":" Arithmetic on scalars (integers mod the group order).","sig":null,"attributes":[{"value":"/ Arithmetic on scalars (integers mod the group order).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17435,"byte_end":17492,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17493,"byte_end":17496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Both the Ristretto group and the Ed25519 basepoint have prime order","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17497,"byte_end":17568,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ \\\\( \\ell = 2\\^{252} + 27742317777372353535851937790883648493 \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17569,"byte_end":17638,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17639,"byte_end":17642,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This code is intended to be useful with both the Ristretto group","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17643,"byte_end":17711,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ (where everything is done modulo \\\\( \\ell \\\\)), and the X/Ed25519","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17712,"byte_end":17781,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ setting, which mandates specific bit-twiddles that are not","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17782,"byte_end":17844,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ well-defined modulo \\\\( \\ell \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17845,"byte_end":17882,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17883,"byte_end":17886,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All arithmetic on `Scalars` is done modulo \\\\( \\ell \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17887,"byte_end":17947,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17948,"byte_end":17951,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Constructing a scalar","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17952,"byte_end":17979,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17980,"byte_end":17983,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ To create a [`Scalar`](struct.Scalar.html) from a supposedly canonical encoding, use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":17984,"byte_end":18072,"line_start":27,"line_end":27,"column_start":1,"column_end":89}},{"value":"/ [`Scalar::from_canonical_bytes`](struct.Scalar.html#method.from_canonical_bytes).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18073,"byte_end":18158,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18159,"byte_end":18162,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function does input validation, ensuring that the input bytes","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18163,"byte_end":18233,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ are the canonical encoding of a `Scalar`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18234,"byte_end":18279,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/ If they are, we'll get","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18280,"byte_end":18306,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ `Some(Scalar)` in return:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18307,"byte_end":18336,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18337,"byte_end":18340,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18341,"byte_end":18348,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18349,"byte_end":18390,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18391,"byte_end":18394,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let one_as_bytes: [u8; 32] = Scalar::one().to_bytes();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18395,"byte_end":18453,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(one_as_bytes);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18454,"byte_end":18525,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18526,"byte_end":18529,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_some());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18530,"byte_end":18555,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18556,"byte_end":18563,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18564,"byte_end":18567,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ However, if we give it bytes representing a scalar larger than \\\\( \\ell \\\\)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18568,"byte_end":18647,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ (in this case, \\\\( \\ell + 2 \\\\)), we'll get `None` back:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18648,"byte_end":18708,"line_start":45,"line_end":45,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18709,"byte_end":18712,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18713,"byte_end":18720,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18721,"byte_end":18762,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18763,"byte_end":18766,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18767,"byte_end":18805,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18806,"byte_end":18860,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18861,"byte_end":18915,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18916,"byte_end":18970,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":18971,"byte_end":19025,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19026,"byte_end":19032,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(l_plus_two_bytes);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19033,"byte_end":19108,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19109,"byte_end":19112,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_none());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19113,"byte_end":19138,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19139,"byte_end":19146,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19147,"byte_end":19150,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Another way to create a `Scalar` is by reducing a \\\\(256\\\\)-bit integer mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19151,"byte_end":19230,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ \\\\( \\ell \\\\), for which one may use the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19231,"byte_end":19274,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Scalar::from_bytes_mod_order`](struct.Scalar.html#method.from_bytes_mod_order)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19275,"byte_end":19359,"line_start":63,"line_end":63,"column_start":1,"column_end":85}},{"value":"/ method.  In the case of the second example above, this would reduce the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19360,"byte_end":19435,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ resultant scalar \\\\( \\mod \\ell \\\\), producing \\\\( 2 \\\\):","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19436,"byte_end":19496,"line_start":65,"line_end":65,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19497,"byte_end":19500,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19501,"byte_end":19508,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19509,"byte_end":19550,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19551,"byte_end":19554,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19555,"byte_end":19593,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19594,"byte_end":19648,"line_start":71,"line_end":71,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19649,"byte_end":19703,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19704,"byte_end":19758,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19759,"byte_end":19813,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19814,"byte_end":19820,"line_start":75,"line_end":75,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bytes_mod_order(l_plus_two_bytes);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19821,"byte_end":19888,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19889,"byte_end":19892,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19893,"byte_end":19945,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19946,"byte_end":19949,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ assert!(a == two);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19950,"byte_end":19972,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19973,"byte_end":19980,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19981,"byte_end":19984,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ There is also a constructor that reduces a \\\\(512\\\\)-bit integer,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":19985,"byte_end":20054,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ [`Scalar::from_bytes_mod_order_wide`](struct.Scalar.html#method.from_bytes_mod_order_wide).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20055,"byte_end":20150,"line_start":84,"line_end":84,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20151,"byte_end":20154,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ To construct a `Scalar` as the hash of some input data, use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20155,"byte_end":20218,"line_start":86,"line_end":86,"column_start":1,"column_end":64}},{"value":"/ [`Scalar::hash_from_bytes`](struct.Scalar.html#method.hash_from_bytes),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20219,"byte_end":20294,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ which takes a buffer, or","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20295,"byte_end":20323,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"/ [`Scalar::from_hash`](struct.Scalar.html#method.from_hash),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20324,"byte_end":20387,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/ which allows an IUF API.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20388,"byte_end":20416,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20417,"byte_end":20420,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20421,"byte_end":20428,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20429,"byte_end":20465,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/ # extern crate sha2;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20466,"byte_end":20490,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20491,"byte_end":20496,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20497,"byte_end":20514,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ use sha2::{Digest, Sha512};","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20515,"byte_end":20546,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20547,"byte_end":20588,"line_start":98,"line_end":98,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20589,"byte_end":20592,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // Hashing a single byte slice","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20593,"byte_end":20627,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/ let a = Scalar::hash_from_bytes::<Sha512>(b\"Abolish ICE\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20628,"byte_end":20690,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20691,"byte_end":20694,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ // Streaming data into a hash object","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20695,"byte_end":20735,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"/ let mut hasher = Sha512::default();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20736,"byte_end":20775,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/ hasher.input(b\"Abolish \");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20776,"byte_end":20806,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ hasher.input(b\"ICE\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20807,"byte_end":20832,"line_start":106,"line_end":106,"column_start":1,"column_end":26}},{"value":"/ let a2 = Scalar::from_hash(hasher);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20833,"byte_end":20872,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20873,"byte_end":20876,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, a2);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20877,"byte_end":20899,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20900,"byte_end":20907,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20908,"byte_end":20915,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20916,"byte_end":20919,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Finally, to create a `Scalar` with a specific bit-pattern","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20920,"byte_end":20981,"line_start":113,"line_end":113,"column_start":1,"column_end":62}},{"value":"/ (e.g., for compatibility with X/Ed25519","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":20982,"byte_end":21025,"line_start":114,"line_end":114,"column_start":1,"column_end":44}},{"value":"/ [\"clamping\"](https://github.com/isislovecruft/ed25519-dalek/blob/f790bd2ce/src/ed25519.rs#L349)),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21026,"byte_end":21127,"line_start":115,"line_end":115,"column_start":1,"column_end":102}},{"value":"/ use [`Scalar::from_bits`](struct.Scalar.html#method.from_bits). This","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21128,"byte_end":21200,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ constructs a scalar with exactly the bit pattern given, without any","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21201,"byte_end":21272,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"/ assurances as to reduction modulo the group order:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21273,"byte_end":21327,"line_start":118,"line_end":118,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21328,"byte_end":21331,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21332,"byte_end":21339,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21340,"byte_end":21381,"line_start":121,"line_end":121,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21382,"byte_end":21385,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21386,"byte_end":21424,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21425,"byte_end":21479,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21480,"byte_end":21534,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21535,"byte_end":21589,"line_start":126,"line_end":126,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21590,"byte_end":21644,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21645,"byte_end":21651,"line_start":128,"line_end":128,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bits(l_plus_two_bytes);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21652,"byte_end":21708,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21709,"byte_end":21712,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21713,"byte_end":21765,"line_start":131,"line_end":131,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21766,"byte_end":21769,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert!(a != two);              // the scalar is not reduced (mod l)…","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21770,"byte_end":21845,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ assert!(! a.is_canonical());    // …and therefore is not canonical.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21846,"byte_end":21919,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ assert!(a.reduce() == two);     // if we were to reduce it manually, it would be.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":21920,"byte_end":22005,"line_start":135,"line_end":135,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":22006,"byte_end":22013,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":22014,"byte_end":22017,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The resulting `Scalar` has exactly the specified bit pattern,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":22018,"byte_end":22083,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ **except for the highest bit, which will be set to 0**.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":22084,"byte_end":22143,"line_start":139,"line_end":139,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1512},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":23376,"byte_end":23382,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"Scalar {  }","parent":null,"children":[{"krate":0,"index":1513}],"decl_id":null,"docs":" The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which\n represents an element of \\\\(\\mathbb Z / \\ell\\\\).\n","sig":null,"attributes":[{"value":"/ The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":23216,"byte_end":23282,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ represents an element of \\\\(\\mathbb Z / \\ell\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":23283,"byte_end":23335,"line_start":184,"line_end":184,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24150,"byte_end":24170,"line_start":205,"line_end":205,"column_start":12,"column_end":32},"name":"from_bytes_mod_order","qualname":"<Scalar>::from_bytes_mod_order","value":"pub fn from_bytes_mod_order([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 256-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 256-bit little-endian integer","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24025,"byte_end":24093,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24098,"byte_end":24138,"line_start":204,"line_end":204,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24611,"byte_end":24636,"line_start":218,"line_end":218,"column_start":12,"column_end":37},"name":"from_bytes_mod_order_wide","qualname":"<Scalar>::from_bytes_mod_order_wide","value":"pub fn from_bytes_mod_order_wide(&[u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 512-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 512-bit little-endian integer","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24486,"byte_end":24554,"line_start":216,"line_end":216,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24559,"byte_end":24599,"line_start":217,"line_end":217,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25048,"byte_end":25068,"line_start":229,"line_end":229,"column_start":12,"column_end":32},"name":"from_canonical_bytes","qualname":"<Scalar>::from_canonical_bytes","value":"pub fn from_canonical_bytes([u8; ]) -> Option<Scalar>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to construct a `Scalar` from a canonical byte representation.","sig":null,"attributes":[{"value":"/ Attempt to construct a `Scalar` from a canonical byte representation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24732,"byte_end":24805,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24810,"byte_end":24813,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24818,"byte_end":24830,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24835,"byte_end":24838,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ - `Some(s)`, where `s` is the `Scalar` corresponding to `bytes`,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24843,"byte_end":24911,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/   if `bytes` is a canonical byte representation;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24916,"byte_end":24968,"line_start":227,"line_end":227,"column_start":5,"column_end":57}},{"value":"/ - `None` if `bytes` is not a canonical byte representation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24973,"byte_end":25036,"line_start":228,"line_end":228,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25624,"byte_end":25633,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"name":"from_bits","qualname":"<Scalar>::from_bits","value":"pub const fn from_bits([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` from the low 255 bits of a 256-bit integer.","sig":null,"attributes":[{"value":"/ Construct a `Scalar` from the low 255 bits of a 256-bit integer.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25376,"byte_end":25444,"line_start":241,"line_end":241,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25449,"byte_end":25452,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This function is intended for applications like X25519 which","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25457,"byte_end":25521,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ require specific bit-patterns when performing scalar","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25526,"byte_end":25582,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/ multiplication.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25587,"byte_end":25606,"line_start":245,"line_end":245,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34224,"byte_end":34230,"line_start":558,"line_end":558,"column_start":12,"column_end":18},"name":"random","qualname":"<Scalar>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `Scalar` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `Scalar` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33610,"byte_end":33685,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33690,"byte_end":33693,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33698,"byte_end":33710,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33715,"byte_end":33718,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33723,"byte_end":33797,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33802,"byte_end":33805,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33810,"byte_end":33823,"line_start":540,"line_end":540,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33828,"byte_end":33831,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ A random scalar within ℤ/lℤ.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33836,"byte_end":33872,"line_start":542,"line_end":542,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33877,"byte_end":33880,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33885,"byte_end":33898,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33903,"byte_end":33906,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33911,"byte_end":33918,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/ extern crate rand_core;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33923,"byte_end":33950,"line_start":547,"line_end":547,"column_start":5,"column_end":32}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33955,"byte_end":33991,"line_start":548,"line_end":548,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33996,"byte_end":34001,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34006,"byte_end":34023,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34028,"byte_end":34069,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34074,"byte_end":34077,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34082,"byte_end":34107,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34112,"byte_end":34115,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut csprng = OsRng;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34120,"byte_end":34147,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/ let a: Scalar = Scalar::random(&mut csprng);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34152,"byte_end":34200,"line_start":556,"line_end":556,"column_start":5,"column_end":53}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34205,"byte_end":34212,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35222,"byte_end":35237,"line_start":587,"line_end":587,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<Scalar>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> Scalar where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a scalar.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a scalar.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34431,"byte_end":34471,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34476,"byte_end":34479,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34484,"byte_end":34550,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/ bytes (512 bits) of output.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34555,"byte_end":34586,"line_start":567,"line_end":567,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34591,"byte_end":34594,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34599,"byte_end":34642,"line_start":569,"line_end":569,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34647,"byte_end":34650,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34655,"byte_end":34668,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34673,"byte_end":34676,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34681,"byte_end":34688,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34693,"byte_end":34729,"line_start":574,"line_end":574,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34734,"byte_end":34777,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34782,"byte_end":34804,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34809,"byte_end":34812,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ use sha2::Sha512;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34817,"byte_end":34838,"line_start":578,"line_end":578,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34843,"byte_end":34846,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34851,"byte_end":34914,"line_start":580,"line_end":580,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":34919,"byte_end":35004,"line_start":581,"line_end":581,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35009,"byte_end":35026,"line_start":582,"line_end":582,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35031,"byte_end":35119,"line_start":583,"line_end":583,"column_start":5,"column_end":93}},{"value":"/ let s = Scalar::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35124,"byte_end":35186,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35191,"byte_end":35198,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35203,"byte_end":35210,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36920,"byte_end":36929,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<Scalar>::from_hash","value":"pub fn from_hash<D>(D) -> Scalar where D: Digest<OutputSize = U64>","parent":null,"children":[],"decl_id":null,"docs":" Construct a scalar from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a scalar from an existing `Digest` instance.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35430,"byte_end":35488,"line_start":595,"line_end":595,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35493,"byte_end":35496,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35501,"byte_end":35567,"line_start":597,"line_end":597,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35572,"byte_end":35635,"line_start":598,"line_end":598,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35640,"byte_end":35650,"line_start":599,"line_end":599,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35655,"byte_end":35658,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35663,"byte_end":35676,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35681,"byte_end":35684,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35689,"byte_end":35696,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35701,"byte_end":35737,"line_start":604,"line_end":604,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35742,"byte_end":35785,"line_start":605,"line_end":605,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35790,"byte_end":35812,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35817,"byte_end":35820,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ use sha2::Digest;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35825,"byte_end":35846,"line_start":608,"line_end":608,"column_start":5,"column_end":26}},{"value":"/ use sha2::Sha512;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35851,"byte_end":35872,"line_start":609,"line_end":609,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35877,"byte_end":35880,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35885,"byte_end":35902,"line_start":611,"line_end":611,"column_start":5,"column_end":22}},{"value":"/ let mut h = Sha512::new()","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35907,"byte_end":35936,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/     .chain(\"To really appreciate architecture, you may even need to commit a murder.\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":35941,"byte_end":36031,"line_start":613,"line_end":613,"column_start":5,"column_end":95}},{"value":"/     .chain(\"While the programs used for The Manhattan Transcripts are of the most extreme\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36036,"byte_end":36131,"line_start":614,"line_end":614,"column_start":5,"column_end":100}},{"value":"/     .chain(\"nature, they also parallel the most common formula plot: the archetype of\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36136,"byte_end":36227,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/     .chain(\"murder. Other phantasms were occasionally used to underline the fact that\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36232,"byte_end":36323,"line_start":616,"line_end":616,"column_start":5,"column_end":96}},{"value":"/     .chain(\"perhaps all architecture, rather than being about functional standards, is\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36328,"byte_end":36420,"line_start":617,"line_end":617,"column_start":5,"column_end":97}},{"value":"/     .chain(\"about love and death.\");","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36425,"byte_end":36465,"line_start":618,"line_end":618,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36470,"byte_end":36473,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let s = Scalar::from_hash(h);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36478,"byte_end":36511,"line_start":620,"line_end":620,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36516,"byte_end":36519,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", s.to_bytes());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36524,"byte_end":36559,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/ assert!(s == Scalar::from_bits([ 21,  88, 208, 252,  63, 122, 210, 152,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36564,"byte_end":36639,"line_start":623,"line_end":623,"column_start":5,"column_end":80}},{"value":"/                                 154,  38,  15,  23,  16, 167,  80, 150,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36644,"byte_end":36719,"line_start":624,"line_end":624,"column_start":5,"column_end":80}},{"value":"/                                 192, 221,  77, 226,  62,  25, 224, 148,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36724,"byte_end":36799,"line_start":625,"line_end":625,"column_start":5,"column_end":80}},{"value":"/                                 239,  48, 176,  10, 185,  69, 168,  11, ]));","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36804,"byte_end":36884,"line_start":626,"line_end":626,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36889,"byte_end":36896,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":36901,"byte_end":36908,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37434,"byte_end":37442,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Scalar` to its underlying sequence of bytes.","sig":null,"attributes":[{"value":"/ Convert this `Scalar` to its underlying sequence of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37156,"byte_end":37218,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37223,"byte_end":37226,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37231,"byte_end":37244,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37249,"byte_end":37252,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37257,"byte_end":37264,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37269,"byte_end":37310,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37315,"byte_end":37318,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37323,"byte_end":37358,"line_start":644,"line_end":644,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37363,"byte_end":37366,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ assert!(s.to_bytes() == [0u8; 32]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37371,"byte_end":37410,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37415,"byte_end":37422,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37792,"byte_end":37800,"line_start":663,"line_end":663,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Scalar>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View the little-endian byte encoding of the integer representing this Scalar.","sig":null,"attributes":[{"value":"/ View the little-endian byte encoding of the integer representing this Scalar.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37494,"byte_end":37575,"line_start":652,"line_end":652,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37580,"byte_end":37583,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37588,"byte_end":37601,"line_start":654,"line_end":654,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37606,"byte_end":37609,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37614,"byte_end":37621,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37626,"byte_end":37667,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37672,"byte_end":37675,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37680,"byte_end":37715,"line_start":659,"line_end":659,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37720,"byte_end":37723,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ assert!(s.as_bytes() == &[0u8; 32]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37728,"byte_end":37768,"line_start":661,"line_end":661,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37773,"byte_end":37780,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37901,"byte_end":37905,"line_start":668,"line_end":668,"column_start":12,"column_end":16},"name":"zero","qualname":"<Scalar>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 0 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 0 \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37854,"byte_end":37889,"line_start":667,"line_end":667,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38011,"byte_end":38014,"line_start":673,"line_end":673,"column_start":12,"column_end":15},"name":"one","qualname":"<Scalar>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 1 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 1 \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":37964,"byte_end":37999,"line_start":672,"line_end":672,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39700,"byte_end":39706,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"pub fn invert(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero `Scalar`, compute its multiplicative inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero `Scalar`, compute its multiplicative inverse.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38229,"byte_end":38294,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38299,"byte_end":38302,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38307,"byte_end":38320,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38325,"byte_end":38328,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ `self` **MUST** be nonzero.  If you cannot","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38333,"byte_end":38379,"line_start":686,"line_end":686,"column_start":5,"column_end":51}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38384,"byte_end":38444,"line_start":687,"line_end":687,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38449,"byte_end":38464,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38469,"byte_end":38472,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38477,"byte_end":38490,"line_start":690,"line_end":690,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38495,"byte_end":38498,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The multiplicative inverse of the this `Scalar`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38503,"byte_end":38555,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38560,"byte_end":38563,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38568,"byte_end":38581,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38586,"byte_end":38589,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38594,"byte_end":38601,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38606,"byte_end":38647,"line_start":697,"line_end":697,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38652,"byte_end":38655,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ // x = 2238329342913194256032495932344128051776374960164957527413114840482143558222","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38660,"byte_end":38747,"line_start":699,"line_end":699,"column_start":5,"column_end":92}},{"value":"/ let X: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38752,"byte_end":38802,"line_start":700,"line_end":700,"column_start":5,"column_end":55}},{"value":"/         0x4e, 0x5a, 0xb4, 0x34, 0x5d, 0x47, 0x08, 0x84,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38807,"byte_end":38866,"line_start":701,"line_end":701,"column_start":5,"column_end":64}},{"value":"/         0x59, 0x13, 0xb4, 0x64, 0x1b, 0xc2, 0x7d, 0x52,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38871,"byte_end":38930,"line_start":702,"line_end":702,"column_start":5,"column_end":64}},{"value":"/         0x52, 0xa5, 0x85, 0x10, 0x1b, 0xcc, 0x42, 0x44,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38935,"byte_end":38994,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/         0xd4, 0x49, 0xf4, 0xa8, 0x79, 0xd9, 0xf2, 0x04,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":38999,"byte_end":39058,"line_start":704,"line_end":704,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39063,"byte_end":39074,"line_start":705,"line_end":705,"column_start":5,"column_end":16}},{"value":"/ // 1/x = 6859937278830797291664592131120606308688036382723378951768035303146619657244","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39079,"byte_end":39168,"line_start":706,"line_end":706,"column_start":5,"column_end":94}},{"value":"/ let XINV: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39173,"byte_end":39226,"line_start":707,"line_end":707,"column_start":5,"column_end":58}},{"value":"/         0x1c, 0xdc, 0x17, 0xfc, 0xe0, 0xe9, 0xa5, 0xbb,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39231,"byte_end":39290,"line_start":708,"line_end":708,"column_start":5,"column_end":64}},{"value":"/         0xd9, 0x24, 0x7e, 0x56, 0xbb, 0x01, 0x63, 0x47,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39295,"byte_end":39354,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/         0xbb, 0xba, 0x31, 0xed, 0xd5, 0xa9, 0xbb, 0x96,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39359,"byte_end":39418,"line_start":710,"line_end":710,"column_start":5,"column_end":64}},{"value":"/         0xd5, 0x0b, 0xcd, 0x7a, 0x3f, 0x96, 0x2a, 0x0f,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39423,"byte_end":39482,"line_start":711,"line_end":711,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39487,"byte_end":39498,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39503,"byte_end":39506,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ let inv_X: Scalar = X.invert();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39511,"byte_end":39546,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert!(XINV == inv_X);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39551,"byte_end":39578,"line_start":715,"line_end":715,"column_start":5,"column_end":32}},{"value":"/ let should_be_one: Scalar = &inv_X * &X;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39583,"byte_end":39627,"line_start":716,"line_end":716,"column_start":5,"column_end":49}},{"value":"/ assert!(should_be_one == Scalar::one());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39632,"byte_end":39676,"line_start":717,"line_end":717,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39681,"byte_end":39688,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40982,"byte_end":40994,"line_start":761,"line_end":761,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<Scalar>::batch_invert","value":"pub fn batch_invert(&mut [Scalar]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of nonzero (possibly secret) `Scalar`s,\n compute their inverses in a batch.","sig":null,"attributes":[{"value":"/ Given a slice of nonzero (possibly secret) `Scalar`s,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39775,"byte_end":39832,"line_start":723,"line_end":723,"column_start":5,"column_end":62}},{"value":"/ compute their inverses in a batch.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39837,"byte_end":39875,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39880,"byte_end":39883,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39888,"byte_end":39900,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39905,"byte_end":39908,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ Each element of `inputs` is replaced by its inverse.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39913,"byte_end":39969,"line_start":728,"line_end":728,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39974,"byte_end":39977,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ The product of all inverses is returned.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":39982,"byte_end":40026,"line_start":730,"line_end":730,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40031,"byte_end":40034,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40039,"byte_end":40052,"line_start":732,"line_end":732,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40057,"byte_end":40060,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ All input `Scalars` **MUST** be nonzero.  If you cannot","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40065,"byte_end":40124,"line_start":734,"line_end":734,"column_start":5,"column_end":64}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40129,"byte_end":40189,"line_start":735,"line_end":735,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40194,"byte_end":40209,"line_start":736,"line_end":736,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40214,"byte_end":40217,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40222,"byte_end":40235,"line_start":738,"line_end":738,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40240,"byte_end":40243,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40248,"byte_end":40255,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40260,"byte_end":40296,"line_start":741,"line_end":741,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40301,"byte_end":40344,"line_start":742,"line_end":742,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40349,"byte_end":40366,"line_start":743,"line_end":743,"column_start":5,"column_end":22}},{"value":"/ let mut scalars = [","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40371,"byte_end":40394,"line_start":744,"line_end":744,"column_start":5,"column_end":28}},{"value":"/     Scalar::from(3u64),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40399,"byte_end":40426,"line_start":745,"line_end":745,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(5u64),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40431,"byte_end":40458,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(7u64),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40463,"byte_end":40490,"line_start":747,"line_end":747,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(11u64),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40495,"byte_end":40523,"line_start":748,"line_end":748,"column_start":5,"column_end":33}},{"value":"/ ];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40528,"byte_end":40534,"line_start":749,"line_end":749,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40539,"byte_end":40542,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ let allinv = Scalar::batch_invert(&mut scalars);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40547,"byte_end":40599,"line_start":751,"line_end":751,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40604,"byte_end":40607,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(allinv, Scalar::from(3*5*7*11u64).invert());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40612,"byte_end":40671,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(scalars[0], Scalar::from(3u64).invert());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40676,"byte_end":40732,"line_start":754,"line_end":754,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[1], Scalar::from(5u64).invert());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40737,"byte_end":40793,"line_start":755,"line_end":755,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[2], Scalar::from(7u64).invert());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40798,"byte_end":40854,"line_start":756,"line_end":756,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[3], Scalar::from(11u64).invert());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40859,"byte_end":40916,"line_start":757,"line_end":757,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40921,"byte_end":40928,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40933,"byte_end":40940,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":40945,"byte_end":40970,"line_start":760,"line_end":760,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54017,"byte_end":54023,"line_start":1089,"line_end":1089,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Scalar>::reduce","value":"pub fn reduce(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Reduce this `Scalar` modulo \\\\(\\ell\\\\).\n","sig":null,"attributes":[{"value":"/ Reduce this `Scalar` modulo \\\\(\\ell\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":53933,"byte_end":53976,"line_start":1087,"line_end":1087,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":53981,"byte_end":54005,"line_start":1088,"line_end":1088,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54929,"byte_end":54941,"line_start":1114,"line_end":1114,"column_start":12,"column_end":24},"name":"is_canonical","qualname":"<Scalar>::is_canonical","value":"pub fn is_canonical(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","sig":null,"attributes":[{"value":"/ Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54236,"byte_end":54315,"line_start":1096,"line_end":1096,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54320,"byte_end":54323,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ This is intended for uses like input validation, where variable-time code is acceptable.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54328,"byte_end":54420,"line_start":1098,"line_end":1098,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54425,"byte_end":54428,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54433,"byte_end":54440,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54445,"byte_end":54481,"line_start":1101,"line_end":1101,"column_start":5,"column_end":41}},{"value":"/ # extern crate subtle;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54486,"byte_end":54512,"line_start":1102,"line_end":1102,"column_start":5,"column_end":31}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54517,"byte_end":54560,"line_start":1103,"line_end":1103,"column_start":5,"column_end":48}},{"value":"/ # use subtle::ConditionallySelectable;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54565,"byte_end":54607,"line_start":1104,"line_end":1104,"column_start":5,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54612,"byte_end":54629,"line_start":1105,"line_end":1105,"column_start":5,"column_end":22}},{"value":"/ // 2^255 - 1, since `from_bits` clears the high bit","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54634,"byte_end":54689,"line_start":1106,"line_end":1106,"column_start":5,"column_end":60}},{"value":"/ let _2_255_minus_1 = Scalar::from_bits([0xff;32]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54694,"byte_end":54748,"line_start":1107,"line_end":1107,"column_start":5,"column_end":59}},{"value":"/ assert!(!_2_255_minus_1.is_canonical());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54753,"byte_end":54797,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54802,"byte_end":54805,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let reduced = _2_255_minus_1.reduce();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54810,"byte_end":54852,"line_start":1110,"line_end":1110,"column_start":5,"column_end":47}},{"value":"/ assert!(reduced.is_canonical());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54857,"byte_end":54893,"line_start":1111,"line_end":1111,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54898,"byte_end":54905,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":54910,"byte_end":54917,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"montgomery","qualname":"::montgomery","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":1561},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1588},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1599},{"krate":0,"index":1603},{"krate":0,"index":334},{"krate":0,"index":340},{"krate":0,"index":343}],"decl_id":null,"docs":" Scalar multiplication on the Montgomery form of Curve25519.","sig":null,"attributes":[{"value":"/ Scalar multiplication on the Montgomery form of Curve25519.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77467,"byte_end":77530,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77531,"byte_end":77534,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ To avoid notational confusion with the Edwards code, we use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77535,"byte_end":77598,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ variables \\\\( u, v \\\\) for the Montgomery curve, so that “Montgomery","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77599,"byte_end":77673,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ \\\\(u\\\\)” here corresponds to “Montgomery \\\\(x\\\\)” elsewhere.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77674,"byte_end":77744,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77745,"byte_end":77748,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Montgomery arithmetic works not on the curve itself, but on the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77749,"byte_end":77816,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ \\\\(u\\\\)-line, which discards sign information and unifies the curve","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77817,"byte_end":77888,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ and its quadratic twist.  See [_Montgomery curves and their","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77889,"byte_end":77952,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ arithmetic_][costello-smith] by Costello and Smith for more details.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":77953,"byte_end":78025,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78026,"byte_end":78029,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `MontgomeryPoint` struct contains the affine \\\\(u\\\\)-coordinate","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78030,"byte_end":78101,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\_0(P)\\\\) of a point \\\\(P\\\\) on either the curve or the twist.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78102,"byte_end":78172,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ Here the map \\\\(u\\_0 : \\mathcal M \\rightarrow \\mathbb F\\_p \\\\) is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78173,"byte_end":78242,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ defined by \\\\(u\\_0((u,v)) = u\\\\); \\\\(u\\_0(\\mathcal O) = 0\\\\).  See","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78243,"byte_end":78313,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ section 5.4 of Costello-Smith for more details.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78314,"byte_end":78365,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78366,"byte_end":78369,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Scalar Multiplication","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78370,"byte_end":78397,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78398,"byte_end":78401,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on `MontgomeryPoint`s is provided by the `*`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78402,"byte_end":78472,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ operator, which implements the Montgomery ladder.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78473,"byte_end":78526,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78527,"byte_end":78530,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Edwards Conversion","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78531,"byte_end":78555,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78556,"byte_end":78559,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The \\\\(2\\\\)-to-\\\\(1\\\\) map from the Edwards model to the Montgomery","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78560,"byte_end":78631,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\\\)-line is provided by `EdwardsPoint::to_montgomery()`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78632,"byte_end":78696,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78697,"byte_end":78700,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ To lift a `MontgomeryPoint` to an `EdwardsPoint`, use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78701,"byte_end":78758,"line_start":38,"line_end":38,"column_start":1,"column_end":58}},{"value":"/ `MontgomeryPoint::to_edwards()`, which takes a sign parameter.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78759,"byte_end":78825,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ This function rejects `MontgomeryPoints` which correspond to points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78826,"byte_end":78897,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ on the twist.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78898,"byte_end":78915,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78916,"byte_end":78919,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [costello-smith]: https://eprint.iacr.org/2017/212.pdf","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":78920,"byte_end":78978,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":79260,"byte_end":79285,"line_start":49,"line_end":49,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":79804,"byte_end":79819,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"MontgomeryPoint","qualname":"::montgomery::MontgomeryPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of\n Curve25519 or its twist.\n","sig":null,"attributes":[{"value":"/ Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":79581,"byte_end":79650,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ Curve25519 or its twist.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":79651,"byte_end":79679,"line_start":67,"line_end":67,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":79820,"byte_end":79832,"line_start":70,"line_end":70,"column_start":28,"column_end":40},"name":"0","qualname":"::montgomery::MontgomeryPoint::0","value":"[u8; 32]","parent":{"krate":0,"index":1561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80629,"byte_end":80637,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MontgomeryPoint>::as_bytes","value":"pub fn as_bytes<'a>(&'a Self) -> &'a [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `MontgomeryPoint` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `MontgomeryPoint` as an array of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80564,"byte_end":80617,"line_start":103,"line_end":103,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80765,"byte_end":80773,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MontgomeryPoint>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `MontgomeryPoint` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Convert this `MontgomeryPoint` to an array of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80697,"byte_end":80753,"line_start":108,"line_end":108,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81410,"byte_end":81420,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"to_edwards","qualname":"<MontgomeryPoint>::to_edwards","value":"pub fn to_edwards(&Self, u8) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert to an `EdwardsPoint`, using the supplied\n choice of sign for the `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to convert to an `EdwardsPoint`, using the supplied","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80821,"byte_end":80884,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/ choice of sign for the `EdwardsPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80889,"byte_end":80931,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80936,"byte_end":80939,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80944,"byte_end":80956,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80961,"byte_end":80964,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ * `sign`: a `u8` donating the desired sign of the resulting","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80969,"byte_end":81032,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/   `EdwardsPoint`.  `0` denotes positive and `1` negative.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81037,"byte_end":81098,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81103,"byte_end":81106,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81111,"byte_end":81123,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81128,"byte_end":81131,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ * `Some(EdwardsPoint)` if `self` is the \\\\(u\\\\)-coordinate of a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81136,"byte_end":81203,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ point on (the Montgomery form of) Curve25519;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81208,"byte_end":81257,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81262,"byte_end":81265,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ * `None` if `self` is the \\\\(u\\\\)-coordinate of a point on the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81270,"byte_end":81336,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ twist of (the Montgomery form of) Curve25519;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81341,"byte_end":81390,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":81395,"byte_end":81398,"line_start":128,"line_end":128,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"edwards","qualname":"::edwards","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":1606},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":1625},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1641},{"krate":0,"index":492},{"krate":0,"index":1644},{"krate":0,"index":495},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1654},{"krate":0,"index":500},{"krate":0,"index":1657},{"krate":0,"index":503},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1665},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1676},{"krate":0,"index":1680},{"krate":0,"index":518},{"krate":0,"index":523},{"krate":0,"index":528},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":549},{"krate":0,"index":1683},{"krate":0,"index":1687},{"krate":0,"index":551},{"krate":0,"index":555},{"krate":0,"index":560},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":574},{"krate":0,"index":576}],"decl_id":null,"docs":" Group operations for Curve25519, in Edwards form.","sig":null,"attributes":[{"value":"/ Group operations for Curve25519, in Edwards form.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90362,"byte_end":90415,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90416,"byte_end":90419,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90420,"byte_end":90448,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90449,"byte_end":90452,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedEdwardsY`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90453,"byte_end":90522,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90523,"byte_end":90578,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90579,"byte_end":90582,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90583,"byte_end":90606,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90607,"byte_end":90610,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `EdwardsPoint` struct implements the `subtle::ConstantTimeEq`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90611,"byte_end":90680,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ trait for constant-time equality checking, and the Rust `Eq` trait","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90681,"byte_end":90751,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ for variable-time equality checking.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90752,"byte_end":90792,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90793,"byte_end":90796,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Cofactor-related functions","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90797,"byte_end":90830,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90831,"byte_end":90834,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The order of the group of points on the curve \\\\(\\mathcal E\\\\)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90835,"byte_end":90901,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ is \\\\(|\\mathcal E| = 8\\ell \\\\), so its structure is \\\\( \\mathcal","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90902,"byte_end":90970,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ E = \\mathcal E[8] \\times \\mathcal E[\\ell]\\\\).  The torsion","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":90971,"byte_end":91033,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ subgroup \\\\( \\mathcal E[8] \\\\) consists of eight points of small","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91034,"byte_end":91102,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ order.  Technically, all of \\\\(\\mathcal E\\\\) is torsion, but we","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91103,"byte_end":91170,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ use the word only to refer to the small \\\\(\\mathcal E[8]\\\\) part, not","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91171,"byte_end":91244,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ the large prime-order \\\\(\\mathcal E[\\ell]\\\\) part.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91245,"byte_end":91299,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91300,"byte_end":91303,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[8] \\\\), use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91304,"byte_end":91359,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ `EdwardsPoint::is_small_order()`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91360,"byte_end":91397,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91398,"byte_end":91401,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[\\ell] \\\\), use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91402,"byte_end":91460,"line_start":37,"line_end":37,"column_start":1,"column_end":59}},{"value":"/ `EdwardsPoint::is_torsion_free()`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91461,"byte_end":91499,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91500,"byte_end":91503,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ To multiply by the cofactor, use `EdwardsPoint::mul_by_cofactor()`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91504,"byte_end":91575,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91576,"byte_end":91579,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ To avoid dealing with cofactors entirely, consider using Ristretto.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91580,"byte_end":91651,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91652,"byte_end":91655,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91656,"byte_end":91670,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91671,"byte_end":91674,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  To construct a scalar with a specific bit","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91675,"byte_end":91769,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/ pattern, see `Scalar::from_bits()`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91770,"byte_end":91809,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91810,"byte_end":91813,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91814,"byte_end":91842,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91843,"byte_end":91846,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Edwards points is provided by:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91847,"byte_end":91906,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91907,"byte_end":91910,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `EdwardsPoint`, which","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91911,"byte_end":91980,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":91981,"byte_end":92044,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92045,"byte_end":92048,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92049,"byte_end":92096,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ `EdwardsBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92097,"byte_end":92165,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ scalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92166,"byte_end":92192,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92193,"byte_end":92196,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92197,"byte_end":92227,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92228,"byte_end":92297,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92298,"byte_end":92357,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92358,"byte_end":92361,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92362,"byte_end":92392,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92393,"byte_end":92466,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92467,"byte_end":92536,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92537,"byte_end":92540,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92541,"byte_end":92562,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92563,"byte_end":92566,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The Edwards arithmetic is implemented using the “extended twisted","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92567,"byte_end":92638,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ coordinates” of Hisil, Wong, Carter, and Dawson, and the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92639,"byte_end":92701,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/ corresponding complete formulas.  For more details,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92702,"byte_end":92757,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ see the [`curve_models` submodule][curve_models]","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92758,"byte_end":92810,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ of the internal documentation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92811,"byte_end":92845,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92846,"byte_end":92849,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Validity Checking","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92850,"byte_end":92874,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92875,"byte_end":92878,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ There is no function for checking whether a point is valid.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92879,"byte_end":92942,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/ Instead, the `EdwardsPoint` struct is guaranteed to hold a valid","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":92943,"byte_end":93011,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ point on the curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93012,"byte_end":93035,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93036,"byte_end":93039,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ We use the Rust type system to make invalid points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93040,"byte_end":93094,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/ unrepresentable: `EdwardsPoint` objects can only be created via","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93095,"byte_end":93162,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/ successful decompression of a compressed point, or else by","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93163,"byte_end":93225,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ operations on other (valid) `EdwardsPoint`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93226,"byte_end":93274,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93275,"byte_end":93278,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [curve_models]: https://doc-internal.dalek.rs/curve25519_dalek/backend/serial/curve_models/index.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93279,"byte_end":93384,"line_start":87,"line_end":87,"column_start":1,"column_end":106}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":93666,"byte_end":93691,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95457,"byte_end":95475,"line_start":154,"line_end":154,"column_start":12,"column_end":30},"name":"CompressedEdwardsY","qualname":"::edwards::CompressedEdwardsY","value":"","parent":null,"children":[],"decl_id":null,"docs":" In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is\n determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","sig":null,"attributes":[{"value":"/ In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95117,"byte_end":95186,"line_start":148,"line_end":148,"column_start":1,"column_end":70}},{"value":"/ determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95187,"byte_end":95252,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95253,"byte_end":95256,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The first 255 bits of a `CompressedEdwardsY` represent the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95257,"byte_end":95319,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/ \\\\(y\\\\)-coordinate.  The high bit of the 32nd byte gives the sign of \\\\(x\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95320,"byte_end":95401,"line_start":152,"line_end":152,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95476,"byte_end":95488,"line_start":154,"line_end":154,"column_start":31,"column_end":43},"name":"0","qualname":"::edwards::CompressedEdwardsY::0","value":"[u8; 32]","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95935,"byte_end":95943,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedEdwardsY>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedEdwardsY` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedEdwardsY` as an array of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95867,"byte_end":95923,"line_start":169,"line_end":169,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":96061,"byte_end":96069,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedEdwardsY>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy this `CompressedEdwardsY` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Copy this `CompressedEdwardsY` to an array of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95993,"byte_end":96049,"line_start":174,"line_end":174,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":96276,"byte_end":96286,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedEdwardsY>::decompress","value":"pub fn decompress(&Self) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `EdwardsPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":96117,"byte_end":96164,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":96169,"byte_end":96172,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input is not the \\\\(y\\\\)-coordinate of a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":96177,"byte_end":96243,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/ curve point.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":96248,"byte_end":96264,"line_start":182,"line_end":182,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1625},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":100890,"byte_end":100902,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"name":"EdwardsPoint","qualname":"::edwards::EdwardsPoint","value":"EdwardsPoint {  }","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629}],"decl_id":null,"docs":" An `EdwardsPoint` represents a point on the Edwards form of Curve25519.\n","sig":null,"attributes":[{"value":"/ An `EdwardsPoint` represents a point on the Edwards form of Curve25519.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":100757,"byte_end":100832,"line_start":309,"line_end":309,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":100856,"byte_end":100878,"line_start":311,"line_end":311,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101830,"byte_end":101840,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedEdwardsY>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedEdwardsY` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedEdwardsY` from a slice of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101661,"byte_end":101720,"line_start":339,"line_end":339,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101725,"byte_end":101728,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101733,"byte_end":101745,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101750,"byte_end":101753,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101758,"byte_end":101818,"line_start":343,"line_end":343,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":106059,"byte_end":106072,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"to_montgomery","qualname":"<EdwardsPoint>::to_montgomery","value":"pub fn to_montgomery(&Self) -> MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this `EdwardsPoint` on the Edwards model to the\n corresponding `MontgomeryPoint` on the Montgomery model.","sig":null,"attributes":[{"value":"/ Convert this `EdwardsPoint` on the Edwards model to the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105618,"byte_end":105677,"line_start":464,"line_end":464,"column_start":5,"column_end":64}},{"value":"/ corresponding `MontgomeryPoint` on the Montgomery model.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105682,"byte_end":105742,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105747,"byte_end":105750,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This function has one exceptional case; the identity point of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105755,"byte_end":105820,"line_start":467,"line_end":467,"column_start":5,"column_end":70}},{"value":"/ the Edwards curve is sent to the 2-torsion point \\\\((0,0)\\\\)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105825,"byte_end":105889,"line_start":468,"line_end":468,"column_start":5,"column_end":69}},{"value":"/ on the Montgomery curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105894,"byte_end":105922,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105927,"byte_end":105930,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Note that this is a one-way conversion, since the Montgomery","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":105935,"byte_end":105999,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/ model does not retain sign information.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":106004,"byte_end":106047,"line_start":472,"line_end":472,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":106569,"byte_end":106577,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"compress","qualname":"<EdwardsPoint>::compress","value":"pub fn compress(&Self) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Compress this point to `CompressedEdwardsY` format.\n","sig":null,"attributes":[{"value":"/ Compress this point to `CompressedEdwardsY` format.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":106502,"byte_end":106557,"line_start":485,"line_end":485,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":113233,"byte_end":113261,"line_start":703,"line_end":703,"column_start":12,"column_end":40},"name":"VartimeEdwardsPrecomputation","qualname":"::edwards::VartimeEdwardsPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":112958,"byte_end":113043,"line_start":698,"line_end":698,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":113196,"byte_end":113221,"line_start":702,"line_end":702,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114265,"byte_end":114300,"line_start":737,"line_end":737,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<EdwardsPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &EdwardsPoint, &Scalar)\n-> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114170,"byte_end":114253,"line_start":736,"line_end":736,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1683},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114769,"byte_end":114790,"line_start":753,"line_end":753,"column_start":12,"column_end":33},"name":"EdwardsBasepointTable","qualname":"::edwards::EdwardsBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114455,"byte_end":114524,"line_start":746,"line_end":746,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114525,"byte_end":114590,"line_start":747,"line_end":747,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114591,"byte_end":114644,"line_start":748,"line_end":748,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114645,"byte_end":114648,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large (30KB), so they should","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114649,"byte_end":114717,"line_start":750,"line_end":750,"column_start":1,"column_end":69}},{"value":"/ probably be boxed.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114718,"byte_end":114740,"line_start":751,"line_end":751,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":117501,"byte_end":117507,"line_start":826,"line_end":826,"column_start":12,"column_end":18},"name":"create","qualname":"<EdwardsBasepointTable>::create","value":"pub fn create(&EdwardsPoint) -> EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a table of precomputed multiples of `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a table of precomputed multiples of `basepoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":117430,"byte_end":117489,"line_start":825,"line_end":825,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":117944,"byte_end":117953,"line_start":839,"line_end":839,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<EdwardsBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as an `EdwardsPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as an `EdwardsPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":117874,"byte_end":117932,"line_start":838,"line_end":838,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118272,"byte_end":118287,"line_start":848,"line_end":848,"column_start":12,"column_end":27},"name":"mul_by_cofactor","qualname":"<EdwardsPoint>::mul_by_cofactor","value":"pub fn mul_by_cofactor(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Multiply by the cofactor: return \\\\([8]P\\\\).\n","sig":null,"attributes":[{"value":"/ Multiply by the cofactor: return \\\\([8]P\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118212,"byte_end":118260,"line_start":847,"line_end":847,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119520,"byte_end":119534,"line_start":887,"line_end":887,"column_start":12,"column_end":26},"name":"is_small_order","qualname":"<EdwardsPoint>::is_small_order","value":"pub fn is_small_order(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is of small order.","sig":null,"attributes":[{"value":"/ Determine if this point is of small order.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118805,"byte_end":118851,"line_start":864,"line_end":864,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118856,"byte_end":118859,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118864,"byte_end":118876,"line_start":866,"line_end":866,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118881,"byte_end":118884,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` is in the torsion subgroup \\\\( \\mathcal E[8] \\\\);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118889,"byte_end":118961,"line_start":868,"line_end":868,"column_start":5,"column_end":77}},{"value":"/ * `false` if `self` is not in the torsion subgroup \\\\( \\mathcal E[8] \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118966,"byte_end":119043,"line_start":869,"line_end":869,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119048,"byte_end":119051,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119056,"byte_end":119069,"line_start":871,"line_end":871,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119074,"byte_end":119077,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119082,"byte_end":119089,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119094,"byte_end":119130,"line_start":874,"line_end":874,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119135,"byte_end":119138,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119143,"byte_end":119187,"line_start":876,"line_end":876,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119192,"byte_end":119239,"line_start":877,"line_end":877,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119244,"byte_end":119284,"line_start":878,"line_end":878,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119289,"byte_end":119329,"line_start":879,"line_end":879,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119334,"byte_end":119337,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ // P has large order","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119342,"byte_end":119366,"line_start":881,"line_end":881,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_small_order(), false);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119371,"byte_end":119413,"line_start":882,"line_end":882,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119418,"byte_end":119421,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ // Q has small order","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119426,"byte_end":119450,"line_start":884,"line_end":884,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Q.is_small_order(), true);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119455,"byte_end":119496,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119501,"byte_end":119508,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120444,"byte_end":120459,"line_start":917,"line_end":917,"column_start":12,"column_end":27},"name":"is_torsion_free","qualname":"<EdwardsPoint>::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is “torsion-free”, i.e., is contained in\n the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determine if this point is “torsion-free”, i.e., is contained in","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119608,"byte_end":119680,"line_start":891,"line_end":891,"column_start":5,"column_end":73}},{"value":"/ the prime-order subgroup.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119685,"byte_end":119714,"line_start":892,"line_end":892,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119719,"byte_end":119722,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119727,"byte_end":119739,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119744,"byte_end":119747,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` has zero torsion component and is in the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119752,"byte_end":119815,"line_start":896,"line_end":896,"column_start":5,"column_end":68}},{"value":"/ prime-order subgroup;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119820,"byte_end":119845,"line_start":897,"line_end":897,"column_start":5,"column_end":30}},{"value":"/ * `false` if `self` has a nonzero torsion component and is not","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119850,"byte_end":119916,"line_start":898,"line_end":898,"column_start":5,"column_end":71}},{"value":"/ in the prime-order subgroup.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119921,"byte_end":119953,"line_start":899,"line_end":899,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119958,"byte_end":119961,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119966,"byte_end":119979,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119984,"byte_end":119987,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":119992,"byte_end":119999,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120004,"byte_end":120040,"line_start":904,"line_end":904,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120045,"byte_end":120048,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120053,"byte_end":120097,"line_start":906,"line_end":906,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120102,"byte_end":120149,"line_start":907,"line_end":907,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120154,"byte_end":120194,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120199,"byte_end":120239,"line_start":909,"line_end":909,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120244,"byte_end":120247,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ // P is torsion-free","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120252,"byte_end":120276,"line_start":911,"line_end":911,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_torsion_free(), true);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120281,"byte_end":120323,"line_start":912,"line_end":912,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120328,"byte_end":120331,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ // P + Q is not torsion-free","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120336,"byte_end":120368,"line_start":914,"line_end":914,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((P+Q).is_torsion_free(), false);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120373,"byte_end":120420,"line_start":915,"line_end":915,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120425,"byte_end":120432,"line_start":916,"line_end":916,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ristretto","qualname":"::ristretto","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":1689},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":684},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":1726},{"krate":0,"index":1730},{"krate":0,"index":1734},{"krate":0,"index":728},{"krate":0,"index":1737},{"krate":0,"index":731},{"krate":0,"index":1739},{"krate":0,"index":1743},{"krate":0,"index":1747},{"krate":0,"index":736},{"krate":0,"index":1750},{"krate":0,"index":739},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":759},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1758},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1769},{"krate":0,"index":1773},{"krate":0,"index":764},{"krate":0,"index":770},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":791},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":793},{"krate":0,"index":798},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810}],"decl_id":null,"docs":" An implementation of [Ristretto][ristretto_main], which provides a\n prime-order group.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140289,"byte_end":140314,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/ An implementation of [Ristretto][ristretto_main], which provides a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140316,"byte_end":140386,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ prime-order group.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140387,"byte_end":140409,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140410,"byte_end":140413,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # The Ristretto Group","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140414,"byte_end":140439,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140440,"byte_end":140443,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Ristretto is a modification of Mike Hamburg's Decaf scheme to work","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140444,"byte_end":140514,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ with cofactor-\\\\(8\\\\) curves, such as Curve25519.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140515,"byte_end":140568,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140569,"byte_end":140572,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The introduction of the Decaf paper, [_Decaf:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140573,"byte_end":140622,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/ Eliminating cofactors through point","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140623,"byte_end":140662,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ compression_](https://eprint.iacr.org/2015/673.pdf), notes that while","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140663,"byte_end":140736,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ most cryptographic systems require a group of prime order, most","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140737,"byte_end":140804,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ concrete implementations using elliptic curve groups fall short –","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140805,"byte_end":140876,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ they either provide a group of prime order, but with incomplete or","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140877,"byte_end":140947,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ variable-time addition formulae (for instance, most Weierstrass","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":140948,"byte_end":141015,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ models), or else they provide a fast and safe implementation of a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141016,"byte_end":141085,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ group whose order is not quite a prime \\\\(q\\\\), but \\\\(hq\\\\) for a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141086,"byte_end":141156,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ small cofactor \\\\(h\\\\) (for instance, Edwards curves, which have","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141157,"byte_end":141225,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ cofactor at least \\\\(4\\\\)).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141226,"byte_end":141257,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141258,"byte_end":141261,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This abstraction mismatch is commonly “handled” by pushing the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141262,"byte_end":141332,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ complexity upwards, adding ad-hoc protocol modifications.  But","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141333,"byte_end":141399,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ these modifications require careful analysis and are a recurring","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141400,"byte_end":141468,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/ source of [vulnerabilities][cryptonote] and [design","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141469,"byte_end":141524,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ complications][ed25519_hkd].","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141525,"byte_end":141557,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141558,"byte_end":141561,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Instead, Decaf (and Ristretto) use a quotient group to implement a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141562,"byte_end":141632,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ prime-order group using a non-prime-order curve.  This provides","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141633,"byte_end":141700,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/ the correct abstraction for cryptographic systems, while retaining","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141701,"byte_end":141771,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ the speed and safety benefits of an Edwards curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141772,"byte_end":141826,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141827,"byte_end":141830,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Decaf is named “after the procedure which divides the effect of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141831,"byte_end":141900,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ coffee by \\\\(4\\\\)”.  However, Curve25519 has a cofactor of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141901,"byte_end":141965,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ \\\\(8\\\\).  To eliminate its cofactor, Ristretto restricts further;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":141966,"byte_end":142035,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/ this [additional restriction][ristretto_coffee] gives the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142036,"byte_end":142097,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"/ _Ristretto_ encoding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142098,"byte_end":142123,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142124,"byte_end":142127,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ More details on why Ristretto is necessary can be found in the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142128,"byte_end":142194,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [Why Ristretto?][why_ristretto] section of the Ristretto website.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142195,"byte_end":142264,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142265,"byte_end":142268,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Ristretto","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142269,"byte_end":142282,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ points are provided in `curve25519-dalek` by the `RistrettoPoint`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142283,"byte_end":142352,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ struct.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142353,"byte_end":142364,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142365,"byte_end":142368,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142369,"byte_end":142397,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142398,"byte_end":142401,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedRistretto`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142402,"byte_end":142472,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142473,"byte_end":142528,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142529,"byte_end":142532,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The encoding is not batchable, but it is possible to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142533,"byte_end":142589,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"/ double-and-encode in a batch using","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142590,"byte_end":142628,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ `RistrettoPoint::double_and_compress_batch`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142629,"byte_end":142677,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142678,"byte_end":142681,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142682,"byte_end":142705,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142706,"byte_end":142709,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Testing equality of points on an Edwards curve in projective","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142710,"byte_end":142774,"line_start":72,"line_end":72,"column_start":1,"column_end":65}},{"value":"/ coordinates requires an expensive inversion.  By contrast, equality","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142775,"byte_end":142846,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/ checking in the Ristretto group can be done in projective","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142847,"byte_end":142908,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/ coordinates without requiring an inversion, so it is much faster.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142909,"byte_end":142978,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142979,"byte_end":142982,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The `RistrettoPoint` struct implements the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":142983,"byte_end":143029,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/ `subtle::ConstantTimeEq` trait for constant-time equality","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143030,"byte_end":143091,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ checking, and the Rust `Eq` trait for variable-time equality","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143092,"byte_end":143156,"line_start":79,"line_end":79,"column_start":1,"column_end":65}},{"value":"/ checking.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143157,"byte_end":143170,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143171,"byte_end":143174,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143175,"byte_end":143189,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143190,"byte_end":143193,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  Each scalar has a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143194,"byte_end":143264,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ canonical representative mod the group order.  To attempt to load","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143265,"byte_end":143334,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/ a supposedly-canonical scalar, use","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143335,"byte_end":143373,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/ `Scalar::from_canonical_bytes()`. To check whether a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143374,"byte_end":143430,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/ representative is canonical, use `Scalar::is_canonical()`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143431,"byte_end":143493,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143494,"byte_end":143497,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143498,"byte_end":143526,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143527,"byte_end":143530,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Ristretto points is provided by:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143531,"byte_end":143592,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143593,"byte_end":143596,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `RistrettoPoint`, which","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143597,"byte_end":143668,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143669,"byte_end":143732,"line_start":95,"line_end":95,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143733,"byte_end":143736,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143737,"byte_end":143784,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/ `RistrettoBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143785,"byte_end":143855,"line_start":98,"line_end":98,"column_start":1,"column_end":71}},{"value":"/ scalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143856,"byte_end":143882,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143883,"byte_end":143886,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143887,"byte_end":143917,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143918,"byte_end":143987,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":143988,"byte_end":144047,"line_start":103,"line_end":103,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144048,"byte_end":144051,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144052,"byte_end":144082,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144083,"byte_end":144156,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144157,"byte_end":144226,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144227,"byte_end":144230,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Random Points and Hashing to Ristretto","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144231,"byte_end":144276,"line_start":109,"line_end":109,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144277,"byte_end":144280,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The Ristretto group comes equipped with an Elligator map.  This is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144281,"byte_end":144351,"line_start":111,"line_end":111,"column_start":1,"column_end":71}},{"value":"/ used to implement","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144352,"byte_end":144373,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144374,"byte_end":144377,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::random()`, which generates random points from an","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144378,"byte_end":144449,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ RNG;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144450,"byte_end":144458,"line_start":115,"line_end":115,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144459,"byte_end":144462,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::from_hash()` and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144463,"byte_end":144502,"line_start":117,"line_end":117,"column_start":1,"column_end":40}},{"value":"/ `RistrettoPoint::hash_from_bytes()`, which perform hashing to the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144503,"byte_end":144572,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ group.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144573,"byte_end":144583,"line_start":119,"line_end":119,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144584,"byte_end":144587,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The Elligator map itself is not currently exposed.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144588,"byte_end":144642,"line_start":121,"line_end":121,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144643,"byte_end":144646,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144647,"byte_end":144668,"line_start":123,"line_end":123,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144669,"byte_end":144672,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The Decaf suggestion is to use a quotient group, such as \\\\(\\mathcal","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144673,"byte_end":144745,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ E / \\mathcal E[4]\\\\) or \\\\(2 \\mathcal E / \\mathcal E[2] \\\\), to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144746,"byte_end":144813,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"/ implement a prime-order group using a non-prime-order curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144814,"byte_end":144878,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144879,"byte_end":144882,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This requires only changing","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144883,"byte_end":144914,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144915,"byte_end":144918,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ 1. the function for equality checking (so that two representatives","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144919,"byte_end":144989,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/    of the same coset are considered equal);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":144990,"byte_end":145037,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/ 2. the function for encoding (so that two representatives of the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145038,"byte_end":145106,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/    same coset are encoded as identical bitstrings);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145107,"byte_end":145162,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"/ 3. the function for decoding (so that only the canonical encoding of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145163,"byte_end":145235,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/    a coset is accepted).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145236,"byte_end":145264,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145265,"byte_end":145268,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Internally, each coset is represented by a curve point; two points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145269,"byte_end":145339,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ \\\\( P, Q \\\\) may represent the same coset in the same way that two","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145340,"byte_end":145410,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"/ points with different \\\\(X,Y,Z\\\\) coordinates may represent the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145411,"byte_end":145478,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/ same point.  The group operations are carried out with no overhead","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145479,"byte_end":145549,"line_start":141,"line_end":141,"column_start":1,"column_end":71}},{"value":"/ using Edwards formulas.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145550,"byte_end":145577,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145578,"byte_end":145581,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Notes on the details of the encoding can be found in the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145582,"byte_end":145642,"line_start":144,"line_end":144,"column_start":1,"column_end":61}},{"value":"/ [Details][ristretto_notes] section of the Ristretto website.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145643,"byte_end":145707,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145708,"byte_end":145711,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [cryptonote]:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145712,"byte_end":145729,"line_start":147,"line_end":147,"column_start":1,"column_end":18}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000898.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145730,"byte_end":145795,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/ [ed25519_hkd]:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145796,"byte_end":145814,"line_start":149,"line_end":149,"column_start":1,"column_end":19}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000858.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145815,"byte_end":145880,"line_start":150,"line_end":150,"column_start":1,"column_end":66}},{"value":"/ [ristretto_coffee]:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145881,"byte_end":145904,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ https://en.wikipedia.org/wiki/Ristretto","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145905,"byte_end":145948,"line_start":152,"line_end":152,"column_start":1,"column_end":44}},{"value":"/ [ristretto_notes]:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145949,"byte_end":145971,"line_start":153,"line_end":153,"column_start":1,"column_end":23}},{"value":"/ https://ristretto.group/details/index.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":145972,"byte_end":146018,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/ [why_ristretto]:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":146019,"byte_end":146039,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/ https://ristretto.group/why_ristretto.html","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":146040,"byte_end":146086,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/ [ristretto_main]:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":146087,"byte_end":146108,"line_start":157,"line_end":157,"column_start":1,"column_end":22}},{"value":"/ https://ristretto.group/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":146109,"byte_end":146137,"line_start":158,"line_end":158,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147545,"byte_end":147564,"line_start":212,"line_end":212,"column_start":12,"column_end":31},"name":"CompressedRistretto","qualname":"::ristretto::CompressedRistretto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Ristretto point, in compressed wire format.","sig":null,"attributes":[{"value":"/ A Ristretto point, in compressed wire format.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147325,"byte_end":147374,"line_start":207,"line_end":207,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147375,"byte_end":147378,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ The Ristretto encoding is canonical, so two points are equal if and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147379,"byte_end":147450,"line_start":209,"line_end":209,"column_start":1,"column_end":72}},{"value":"/ only if their encodings are equal.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147451,"byte_end":147489,"line_start":210,"line_end":210,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147565,"byte_end":147577,"line_start":212,"line_end":212,"column_start":32,"column_end":44},"name":"0","qualname":"::ristretto::CompressedRistretto::0","value":"[u8; 32]","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147837,"byte_end":147845,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedRistretto>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy the bytes of this `CompressedRistretto`.\n","sig":null,"attributes":[{"value":"/ Copy the bytes of this `CompressedRistretto`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147776,"byte_end":147825,"line_start":221,"line_end":221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147962,"byte_end":147970,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedRistretto>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedRistretto` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedRistretto` as an array of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147893,"byte_end":147950,"line_start":226,"line_end":226,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148190,"byte_end":148200,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedRistretto>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedRistretto` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedRistretto` from a slice of bytes.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148020,"byte_end":148080,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148085,"byte_end":148088,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148093,"byte_end":148105,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148110,"byte_end":148113,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148118,"byte_end":148178,"line_start":235,"line_end":235,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148609,"byte_end":148619,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedRistretto>::decompress","value":"pub fn decompress(&Self) -> Option<RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `RistrettoPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148355,"byte_end":148404,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148409,"byte_end":148412,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148417,"byte_end":148429,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148434,"byte_end":148437,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ - `Some(RistrettoPoint)` if `self` was the canonical encoding of a point;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148442,"byte_end":148519,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148524,"byte_end":148527,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ - `None` if `self` was not the canonical encoding of a point.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":148532,"byte_end":148597,"line_start":250,"line_end":250,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155249,"byte_end":155263,"line_start":438,"line_end":438,"column_start":12,"column_end":26},"name":"RistrettoPoint","qualname":"::ristretto::RistrettoPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `RistrettoPoint` represents a point in the Ristretto group for\n Curve25519.  Ristretto, a variant of Decaf, constructs a\n prime-order group as a quotient group of a subgroup of (the\n Edwards form of) Curve25519.","sig":null,"attributes":[{"value":"/ A `RistrettoPoint` represents a point in the Ristretto group for","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":154679,"byte_end":154747,"line_start":426,"line_end":426,"column_start":1,"column_end":69}},{"value":"/ Curve25519.  Ristretto, a variant of Decaf, constructs a","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":154748,"byte_end":154808,"line_start":427,"line_end":427,"column_start":1,"column_end":61}},{"value":"/ prime-order group as a quotient group of a subgroup of (the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":154809,"byte_end":154872,"line_start":428,"line_end":428,"column_start":1,"column_end":64}},{"value":"/ Edwards form of) Curve25519.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":154873,"byte_end":154905,"line_start":429,"line_end":429,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":154906,"byte_end":154909,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Internally, a `RistrettoPoint` is implemented as a wrapper type","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":154910,"byte_end":154977,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/ around `EdwardsPoint`, with custom equality, compression, and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":154978,"byte_end":155043,"line_start":432,"line_end":432,"column_start":1,"column_end":66}},{"value":"/ decompression routines to account for the quotient.  This means that","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155044,"byte_end":155116,"line_start":433,"line_end":433,"column_start":1,"column_end":73}},{"value":"/ operations on `RistrettoPoint`s are exactly as fast as operations on","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155117,"byte_end":155189,"line_start":434,"line_end":434,"column_start":1,"column_end":73}},{"value":"/ `EdwardsPoint`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155190,"byte_end":155210,"line_start":435,"line_end":435,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155211,"byte_end":155214,"line_start":436,"line_end":436,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155382,"byte_end":155390,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"compress","qualname":"<RistrettoPoint>::compress","value":"pub fn compress(&Self) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Compress this point using the Ristretto encoding.\n","sig":null,"attributes":[{"value":"/ Compress this point using the Ristretto encoding.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155317,"byte_end":155370,"line_start":441,"line_end":441,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157694,"byte_end":157719,"line_start":506,"line_end":506,"column_start":12,"column_end":37},"name":"double_and_compress_batch","qualname":"<RistrettoPoint>::double_and_compress_batch","value":"pub fn double_and_compress_batch<'a, I>(I) -> Vec<CompressedRistretto> where\nI: IntoIterator<Item = &'a RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Double-and-compress a batch of points.  The Ristretto encoding\n is not batchable, since it requires an inverse square root.","sig":null,"attributes":[{"value":"/ Double-and-compress a batch of points.  The Ristretto encoding","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156515,"byte_end":156581,"line_start":477,"line_end":477,"column_start":5,"column_end":71}},{"value":"/ is not batchable, since it requires an inverse square root.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156586,"byte_end":156649,"line_start":478,"line_end":478,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156654,"byte_end":156657,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ However, given input points \\\\( P\\_1, \\ldots, P\\_n, \\\\)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156662,"byte_end":156721,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ it is possible to compute the encodings of their doubles \\\\(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156726,"byte_end":156790,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/ \\mathrm{enc}( [2]P\\_1), \\ldots, \\mathrm{enc}( [2]P\\_n ) \\\\)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156795,"byte_end":156858,"line_start":482,"line_end":482,"column_start":5,"column_end":68}},{"value":"/ in a batch.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156863,"byte_end":156878,"line_start":483,"line_end":483,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156883,"byte_end":156886,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156891,"byte_end":156898,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156903,"byte_end":156939,"line_start":486,"line_end":486,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":156944,"byte_end":156998,"line_start":487,"line_end":487,"column_start":5,"column_end":59}},{"value":"/ extern crate rand_core;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157003,"byte_end":157030,"line_start":488,"line_end":488,"column_start":5,"column_end":32}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157035,"byte_end":157060,"line_start":489,"line_end":489,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157065,"byte_end":157068,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157073,"byte_end":157136,"line_start":491,"line_end":491,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157141,"byte_end":157226,"line_start":492,"line_end":492,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157231,"byte_end":157248,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/ let mut rng = OsRng;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157253,"byte_end":157277,"line_start":494,"line_end":494,"column_start":5,"column_end":29}},{"value":"/ let points: Vec<RistrettoPoint> =","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157282,"byte_end":157319,"line_start":495,"line_end":495,"column_start":5,"column_end":42}},{"value":"/     (0..32).map(|_| RistrettoPoint::random(&mut rng)).collect();","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157324,"byte_end":157392,"line_start":496,"line_end":496,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157397,"byte_end":157400,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ let compressed = RistrettoPoint::double_and_compress_batch(&points);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157405,"byte_end":157477,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157482,"byte_end":157485,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ for (P, P2_compressed) in points.iter().zip(compressed.iter()) {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157490,"byte_end":157558,"line_start":500,"line_end":500,"column_start":5,"column_end":73}},{"value":"/     assert_eq!(*P2_compressed, (P + P).compress());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157563,"byte_end":157618,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157623,"byte_end":157628,"line_start":502,"line_end":502,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157633,"byte_end":157640,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157645,"byte_end":157652,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":157657,"byte_end":157682,"line_start":505,"line_end":505,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162737,"byte_end":162743,"line_start":651,"line_end":651,"column_start":12,"column_end":18},"name":"random","qualname":"<RistrettoPoint>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162145,"byte_end":162228,"line_start":635,"line_end":635,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162233,"byte_end":162236,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162241,"byte_end":162253,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162258,"byte_end":162261,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162266,"byte_end":162340,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162345,"byte_end":162348,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162353,"byte_end":162366,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162371,"byte_end":162374,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ A random element of the Ristretto group.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162379,"byte_end":162423,"line_start":643,"line_end":643,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162428,"byte_end":162431,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162436,"byte_end":162456,"line_start":645,"line_end":645,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162461,"byte_end":162464,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162469,"byte_end":162530,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162535,"byte_end":162597,"line_start":648,"line_end":648,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162602,"byte_end":162664,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162669,"byte_end":162725,"line_start":650,"line_end":650,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164060,"byte_end":164075,"line_start":688,"line_end":688,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<RistrettoPoint>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> RistrettoPoint where D: Digest<OutputSize\n= U64> + Default","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a `RistrettoPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":162949,"byte_end":162999,"line_start":658,"line_end":658,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163004,"byte_end":163007,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163012,"byte_end":163078,"line_start":660,"line_end":660,"column_start":5,"column_end":71}},{"value":"/ bytes of output.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163083,"byte_end":163103,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163108,"byte_end":163111,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163116,"byte_end":163159,"line_start":663,"line_end":663,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163164,"byte_end":163167,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163172,"byte_end":163192,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163197,"byte_end":163200,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163205,"byte_end":163266,"line_start":667,"line_end":667,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163271,"byte_end":163333,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163338,"byte_end":163400,"line_start":669,"line_end":669,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163405,"byte_end":163461,"line_start":670,"line_end":670,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163466,"byte_end":163469,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163474,"byte_end":163487,"line_start":672,"line_end":672,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163492,"byte_end":163495,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163500,"byte_end":163507,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163512,"byte_end":163548,"line_start":675,"line_end":675,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163553,"byte_end":163607,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/ extern crate sha2;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163612,"byte_end":163634,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/ use sha2::Sha512;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163639,"byte_end":163660,"line_start":678,"line_end":678,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163665,"byte_end":163668,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163673,"byte_end":163736,"line_start":680,"line_end":680,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163741,"byte_end":163826,"line_start":681,"line_end":681,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163831,"byte_end":163848,"line_start":682,"line_end":682,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163853,"byte_end":163941,"line_start":683,"line_end":683,"column_start":5,"column_end":93}},{"value":"/ let P = RistrettoPoint::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":163946,"byte_end":164016,"line_start":684,"line_end":684,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164021,"byte_end":164028,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164033,"byte_end":164040,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164045,"byte_end":164048,"line_start":687,"line_end":687,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164526,"byte_end":164535,"line_start":701,"line_end":701,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RistrettoPoint>::from_hash","value":"pub fn from_hash<D>(D) -> RistrettoPoint where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from an existing `Digest` instance.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164284,"byte_end":164352,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164357,"byte_end":164360,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164365,"byte_end":164431,"line_start":698,"line_end":698,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164436,"byte_end":164499,"line_start":699,"line_end":699,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164504,"byte_end":164514,"line_start":700,"line_end":700,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165432,"byte_end":165450,"line_start":723,"line_end":723,"column_start":12,"column_end":30},"name":"from_uniform_bytes","qualname":"<RistrettoPoint>::from_uniform_bytes","value":"pub fn from_uniform_bytes(&[u8; ]) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from 64 bytes of data.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from 64 bytes of data.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164906,"byte_end":164961,"line_start":712,"line_end":712,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164966,"byte_end":164969,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ If the input bytes are uniformly distributed, the resulting","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":164974,"byte_end":165037,"line_start":714,"line_end":714,"column_start":5,"column_end":68}},{"value":"/ point will be uniformly distributed over the group, and its","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165042,"byte_end":165105,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ discrete log with respect to other points should be unknown.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165110,"byte_end":165174,"line_start":716,"line_end":716,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165179,"byte_end":165182,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165187,"byte_end":165207,"line_start":718,"line_end":718,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165212,"byte_end":165215,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This function splits the input array into two 32-byte halves,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165220,"byte_end":165285,"line_start":720,"line_end":720,"column_start":5,"column_end":70}},{"value":"/ takes the low 255 bits of each half mod p, applies the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165290,"byte_end":165348,"line_start":721,"line_end":721,"column_start":5,"column_end":63}},{"value":"/ Ristretto-flavored Elligator map to each, and adds the results.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":165353,"byte_end":165420,"line_start":722,"line_end":722,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":171456,"byte_end":171486,"line_start":924,"line_end":924,"column_start":12,"column_end":42},"name":"VartimeRistrettoPrecomputation","qualname":"::ristretto::VartimeRistrettoPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":171179,"byte_end":171266,"line_start":919,"line_end":919,"column_start":1,"column_end":88}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":171419,"byte_end":171444,"line_start":923,"line_end":923,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":172734,"byte_end":172769,"line_start":968,"line_end":968,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<RistrettoPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &RistrettoPoint, &Scalar)\n-> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the\n Ristretto basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":172629,"byte_end":172693,"line_start":966,"line_end":966,"column_start":5,"column_end":69}},{"value":"/ Ristretto basepoint.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":172698,"byte_end":172722,"line_start":967,"line_end":967,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173415,"byte_end":173438,"line_start":992,"line_end":992,"column_start":12,"column_end":35},"name":"RistrettoBasepointTable","qualname":"::ristretto::RistrettoBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, used to accelerate\n scalar multiplication.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, used to accelerate","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":172982,"byte_end":173053,"line_start":979,"line_end":979,"column_start":1,"column_end":72}},{"value":"/ scalar multiplication.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173054,"byte_end":173080,"line_start":980,"line_end":980,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173081,"byte_end":173084,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ A precomputed table of multiples of the Ristretto basepoint is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173085,"byte_end":173151,"line_start":982,"line_end":982,"column_start":1,"column_end":67}},{"value":"/ available in the `constants` module:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173152,"byte_end":173192,"line_start":983,"line_end":983,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173193,"byte_end":173200,"line_start":984,"line_end":984,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173201,"byte_end":173237,"line_start":985,"line_end":985,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173238,"byte_end":173279,"line_start":986,"line_end":986,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173280,"byte_end":173283,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173284,"byte_end":173322,"line_start":988,"line_end":988,"column_start":1,"column_end":39}},{"value":"/ let P = &a * &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173323,"byte_end":173378,"line_start":989,"line_end":989,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173379,"byte_end":173386,"line_start":990,"line_end":990,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":174036,"byte_end":174042,"line_start":1012,"line_end":1012,"column_start":12,"column_end":18},"name":"create","qualname":"<RistrettoBasepointTable>::create","value":"pub fn create(&RistrettoPoint) -> RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a precomputed table of multiples of the given `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a precomputed table of multiples of the given `basepoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173955,"byte_end":174024,"line_start":1011,"line_end":1011,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":174259,"byte_end":174268,"line_start":1017,"line_end":1017,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<RistrettoBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as a `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as a `RistrettoPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":174188,"byte_end":174247,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837}],"decl_id":null,"docs":" Various constants, such as the Ristretto and Ed25519 basepoints.","sig":null,"attributes":[{"value":"/ Various constants, such as the Ristretto and Ed25519 basepoints.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192603,"byte_end":192671,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192672,"byte_end":192675,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Most of the constants are given with","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192676,"byte_end":192716,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ `LONG_DESCRIPTIVE_UPPER_CASE_NAMES`, but they can be brought into","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192717,"byte_end":192786,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ scope using a `let` binding:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192787,"byte_end":192819,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192820,"byte_end":192823,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192824,"byte_end":192831,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192832,"byte_end":192868,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::traits::IsIdentity;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192869,"byte_end":192914,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192915,"byte_end":192918,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let B = &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192919,"byte_end":192969,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ let l = &constants::BASEPOINT_ORDER;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":192970,"byte_end":193010,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193011,"byte_end":193014,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let A = l * B;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193015,"byte_end":193033,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ assert!(A.is_identity());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193034,"byte_end":193063,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193064,"byte_end":193071,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193073,"byte_end":193098,"line_start":28,"line_end":28,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193691,"byte_end":193719,"line_start":47,"line_end":47,"column_start":11,"column_end":39},"name":"ED25519_BASEPOINT_COMPRESSED","qualname":"::constants::ED25519_BASEPOINT_COMPRESSED","value":"CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, in `CompressedEdwardsY` format.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, in `CompressedEdwardsY` format.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193407,"byte_end":193465,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193466,"byte_end":193469,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This is the little-endian byte encoding of \\\\( 4/5 \\pmod p \\\\),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193470,"byte_end":193537,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/ which is the \\\\(y\\\\)-coordinate of the Ed25519 basepoint.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193538,"byte_end":193599,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193600,"byte_end":193603,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The sign bit is 0 since the basepoint has \\\\(x\\\\) chosen to be positive.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":193604,"byte_end":193680,"line_start":46,"line_end":46,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194098,"byte_end":194114,"line_start":54,"line_end":54,"column_start":11,"column_end":27},"name":"X25519_BASEPOINT","qualname":"::constants::X25519_BASEPOINT","value":"MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" The X25519 basepoint, in `MontgomeryPoint` format.\n","sig":null,"attributes":[{"value":"/ The X25519 basepoint, in `MontgomeryPoint` format.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194033,"byte_end":194087,"line_start":53,"line_end":53,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194473,"byte_end":194503,"line_start":61,"line_end":61,"column_start":11,"column_end":41},"name":"RISTRETTO_BASEPOINT_COMPRESSED","qualname":"::constants::RISTRETTO_BASEPOINT_COMPRESSED","value":"CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, in `CompressedRistretto` format.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, in `CompressedRistretto` format.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194401,"byte_end":194462,"line_start":60,"line_end":60,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194996,"byte_end":195021,"line_start":71,"line_end":71,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_POINT","qualname":"::constants::RISTRETTO_BASEPOINT_POINT","value":"RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194822,"byte_end":194873,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194874,"byte_end":194877,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from `_TABLE`, which","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194878,"byte_end":194944,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"/ provides fast scalar multiplication.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":194945,"byte_end":194985,"line_start":70,"line_end":70,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":195263,"byte_end":195278,"line_start":77,"line_end":77,"column_start":11,"column_end":26},"name":"BASEPOINT_ORDER","qualname":"::constants::BASEPOINT_ORDER","value":"Scalar","parent":null,"children":[],"decl_id":null,"docs":" `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,\n $$\n \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.\n $$\n","sig":null,"attributes":[{"value":"/ `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":195082,"byte_end":195175,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":195176,"byte_end":195182,"line_start":74,"line_end":74,"column_start":1,"column_end":7}},{"value":"/ \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":195183,"byte_end":195245,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":195246,"byte_end":195252,"line_start":76,"line_end":76,"column_start":1,"column_end":7}}]},{"kind":"Const","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":195682,"byte_end":195707,"line_start":88,"line_end":88,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_TABLE","qualname":"::constants::RISTRETTO_BASEPOINT_TABLE","value":"RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\constants.rs","byte_start":195585,"byte_end":195671,"line_start":87,"line_end":87,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":860},{"krate":0,"index":869},{"krate":0,"index":887}],"decl_id":null,"docs":" Module for common traits.\n","sig":null,"attributes":[{"value":"/ Module for common traits.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":198779,"byte_end":198808,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":198810,"byte_end":198835,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199138,"byte_end":199146,"line_start":26,"line_end":26,"column_start":11,"column_end":19},"name":"Identity","qualname":"::traits::Identity","value":"Identity","parent":null,"children":[{"krate":0,"index":849}],"decl_id":null,"docs":" Trait for getting the identity element of a point type.\n","sig":null,"attributes":[{"value":"/ Trait for getting the identity element of a point type.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199068,"byte_end":199127,"line_start":25,"line_end":25,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199245,"byte_end":199253,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"identity","qualname":"::traits::Identity::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Returns the identity element of the curve.\n Can be used as a constructor.\n","sig":null,"attributes":[{"value":"/ Returns the identity element of the curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199153,"byte_end":199199,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/ Can be used as a constructor.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199204,"byte_end":199237,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199354,"byte_end":199364,"line_start":33,"line_end":33,"column_start":11,"column_end":21},"name":"IsIdentity","qualname":"::traits::IsIdentity","value":"IsIdentity","parent":null,"children":[{"krate":0,"index":851}],"decl_id":null,"docs":" Trait for testing if a curve point is equivalent to the identity point.\n","sig":null,"attributes":[{"value":"/ Trait for testing if a curve point is equivalent to the identity point.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199268,"byte_end":199343,"line_start":32,"line_end":32,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199448,"byte_end":199459,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::traits::IsIdentity::is_identity","value":"pub fn is_identity(&Self) -> bool","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":" Return true if this element is the identity element of the curve.\n","sig":null,"attributes":[{"value":"/ Return true if this element is the identity element of the curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199371,"byte_end":199440,"line_start":34,"line_end":34,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199906,"byte_end":199920,"line_start":51,"line_end":51,"column_start":11,"column_end":25},"name":"MultiscalarMul","qualname":"::traits::MultiscalarMul","value":"MultiscalarMul","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"decl_id":null,"docs":" A trait for constant-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for constant-time multiscalar multiplication without precomputation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199815,"byte_end":199895,"line_start":50,"line_end":50,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200000,"byte_end":200005,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::MultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199927,"byte_end":199990,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201593,"byte_end":201608,"line_start":98,"line_end":98,"column_start":8,"column_end":23},"name":"multiscalar_mul","qualname":"::traits::MultiscalarMul::multiscalar_mul","value":"pub fn multiscalar_mul<I, J>(I, J) -> Self::Point where I: IntoIterator,\nI::Item: Borrow<Scalar>, J: IntoIterator, J::Item: Borrow<Self::Point>","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Given an iterator of (possibly secret) scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.\n $$","sig":null,"attributes":[{"value":"/ Given an iterator of (possibly secret) scalars and an iterator of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200012,"byte_end":200081,"line_start":55,"line_end":55,"column_start":5,"column_end":74}},{"value":"/ public points, compute","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200086,"byte_end":200112,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200117,"byte_end":200123,"line_start":57,"line_end":57,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200128,"byte_end":200167,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200172,"byte_end":200178,"line_start":59,"line_end":59,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200183,"byte_end":200186,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200191,"byte_end":200272,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200277,"byte_end":200280,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200285,"byte_end":200299,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200304,"byte_end":200307,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200312,"byte_end":200380,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200385,"byte_end":200455,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200460,"byte_end":200519,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200524,"byte_end":200579,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200584,"byte_end":200587,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200592,"byte_end":200599,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200604,"byte_end":200640,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::MultiscalarMul;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200645,"byte_end":200694,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200699,"byte_end":200751,"line_start":73,"line_end":73,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200756,"byte_end":200797,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200802,"byte_end":200805,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200810,"byte_end":200829,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200834,"byte_end":200872,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200877,"byte_end":200915,"line_start":78,"line_end":78,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200920,"byte_end":200958,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200963,"byte_end":200966,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200971,"byte_end":200989,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":200994,"byte_end":201043,"line_start":82,"line_end":82,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201048,"byte_end":201066,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201071,"byte_end":201089,"line_start":84,"line_end":84,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201094,"byte_end":201097,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201102,"byte_end":201129,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201134,"byte_end":201156,"line_start":87,"line_end":87,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201161,"byte_end":201222,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201227,"byte_end":201282,"line_start":89,"line_end":89,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201287,"byte_end":201290,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201295,"byte_end":201331,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201336,"byte_end":201379,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201384,"byte_end":201450,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201455,"byte_end":201512,"line_start":94,"line_end":94,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201517,"byte_end":201520,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201525,"byte_end":201573,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201578,"byte_end":201585,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201878,"byte_end":201899,"line_start":107,"line_end":107,"column_start":11,"column_end":32},"name":"VartimeMultiscalarMul","qualname":"::traits::VartimeMultiscalarMul","value":"VartimeMultiscalarMul","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":865}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication without precomputation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201787,"byte_end":201867,"line_start":106,"line_end":106,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201979,"byte_end":201984,"line_start":109,"line_end":109,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimeMultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201906,"byte_end":201969,"line_start":108,"line_end":108,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203913,"byte_end":203937,"line_start":163,"line_end":163,"column_start":8,"column_end":32},"name":"optional_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::optional_multiscalar_mul","value":"pub fn optional_multiscalar_mul<I, J>(I, J) -> Option<Self::Point> where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n `Option`s of points, compute either `Some(Q)`, where\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n if all points were `Some(P_i)`, or else return `None`.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":201991,"byte_end":202049,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/ `Option`s of points, compute either `Some(Q)`, where","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202054,"byte_end":202110,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202115,"byte_end":202121,"line_start":113,"line_end":113,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202126,"byte_end":202165,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202170,"byte_end":202176,"line_start":115,"line_end":115,"column_start":5,"column_end":11}},{"value":"/ if all points were `Some(P_i)`, or else return `None`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202181,"byte_end":202239,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202244,"byte_end":202247,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202252,"byte_end":202318,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202323,"byte_end":202389,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202394,"byte_end":202453,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202458,"byte_end":202502,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202507,"byte_end":202514,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202519,"byte_end":202555,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202560,"byte_end":202616,"line_start":124,"line_end":124,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202621,"byte_end":202673,"line_start":125,"line_end":125,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202678,"byte_end":202719,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202724,"byte_end":202727,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202732,"byte_end":202751,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202756,"byte_end":202794,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202799,"byte_end":202837,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202842,"byte_end":202880,"line_start":131,"line_end":131,"column_start":5,"column_end":43}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202885,"byte_end":202907,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202912,"byte_end":202915,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202920,"byte_end":202938,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202943,"byte_end":202992,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":202997,"byte_end":203015,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203020,"byte_end":203038,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ let PQR = [P, Q, R];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203043,"byte_end":203067,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203072,"byte_end":203075,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let compressed = [P.compress(), Q.compress(), R.compress()];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203080,"byte_end":203144,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203149,"byte_end":203152,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ // Now we can compute A1 = a*P + b*Q + c*R using P, Q, R:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203157,"byte_end":203218,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &PQR);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203223,"byte_end":203288,"line_start":143,"line_end":143,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203293,"byte_end":203296,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ // Or using the compressed points:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203301,"byte_end":203339,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/ let A2 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203344,"byte_end":203398,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/     &abc,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203403,"byte_end":203416,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/     compressed.iter().map(|pt| pt.decompress()),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203421,"byte_end":203473,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203478,"byte_end":203484,"line_start":149,"line_end":149,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203489,"byte_end":203492,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A2, Some(A1));","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203497,"byte_end":203526,"line_start":151,"line_end":151,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203531,"byte_end":203534,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ // It's also possible to mix compressed and uncompressed points:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203539,"byte_end":203607,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/ let A3 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203612,"byte_end":203666,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/     abc.iter()","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203671,"byte_end":203689,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/         .chain(abc.iter()),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203694,"byte_end":203725,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/     compressed.iter().map(|pt| pt.decompress())","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203730,"byte_end":203781,"line_start":157,"line_end":157,"column_start":5,"column_end":56}},{"value":"/         .chain(PQR.iter().map(|&pt| Some(pt))),","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203786,"byte_end":203837,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/ );","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203842,"byte_end":203848,"line_start":159,"line_end":159,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203853,"byte_end":203856,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A3, Some(A1+A1));","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203861,"byte_end":203893,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":203898,"byte_end":203905,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205749,"byte_end":205772,"line_start":213,"line_end":213,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I, J>(I, J) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Self::Point>, Self::Point: Clone","parent":{"krate":0,"index":860},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n using variable-time operations.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204116,"byte_end":204174,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"/ public points, compute","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204179,"byte_end":204205,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204210,"byte_end":204216,"line_start":171,"line_end":171,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204221,"byte_end":204260,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204265,"byte_end":204271,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ using variable-time operations.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204276,"byte_end":204311,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204316,"byte_end":204319,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204324,"byte_end":204405,"line_start":176,"line_end":176,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204410,"byte_end":204413,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204418,"byte_end":204432,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204437,"byte_end":204440,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204445,"byte_end":204513,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204518,"byte_end":204588,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204593,"byte_end":204652,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204657,"byte_end":204712,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204717,"byte_end":204720,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204725,"byte_end":204732,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204737,"byte_end":204773,"line_start":186,"line_end":186,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204778,"byte_end":204834,"line_start":187,"line_end":187,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204839,"byte_end":204891,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204896,"byte_end":204937,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204942,"byte_end":204945,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204950,"byte_end":204969,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":204974,"byte_end":205012,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205017,"byte_end":205055,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205060,"byte_end":205098,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205103,"byte_end":205106,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205111,"byte_end":205129,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205134,"byte_end":205183,"line_start":197,"line_end":197,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205188,"byte_end":205206,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205211,"byte_end":205229,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205234,"byte_end":205237,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205242,"byte_end":205269,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205274,"byte_end":205296,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205301,"byte_end":205370,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205375,"byte_end":205430,"line_start":204,"line_end":204,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205435,"byte_end":205438,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205443,"byte_end":205479,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205484,"byte_end":205527,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::vartime_multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205532,"byte_end":205606,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205611,"byte_end":205668,"line_start":209,"line_end":209,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205673,"byte_end":205676,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205681,"byte_end":205729,"line_start":211,"line_end":211,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":205734,"byte_end":205741,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207313,"byte_end":207345,"line_start":255,"line_end":255,"column_start":11,"column_end":43},"name":"VartimePrecomputedMultiscalarMul","qualname":"::traits::VartimePrecomputedMultiscalarMul","value":"VartimePrecomputedMultiscalarMul: Sized","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":878},{"krate":0,"index":883}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication with precomputation.","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication with precomputation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206146,"byte_end":206223,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206224,"byte_end":206227,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ A general multiscalar multiplication with precomputation can be written as","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206228,"byte_end":206306,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206307,"byte_end":206313,"line_start":232,"line_end":232,"column_start":1,"column_end":7}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206314,"byte_end":206378,"line_start":233,"line_end":233,"column_start":1,"column_end":65}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206379,"byte_end":206385,"line_start":234,"line_end":234,"column_start":1,"column_end":7}},{"value":"/ where the \\\\(B_i\\\\) are *static* points, for which precomputation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206386,"byte_end":206455,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ is possible, and the \\\\(A_j\\\\) are *dynamic* points, for which","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206456,"byte_end":206522,"line_start":236,"line_end":236,"column_start":1,"column_end":67}},{"value":"/ precomputation is not possible.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206523,"byte_end":206558,"line_start":237,"line_end":237,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206559,"byte_end":206562,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This trait has three methods for performing this computation:","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206563,"byte_end":206628,"line_start":239,"line_end":239,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206629,"byte_end":206632,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_multiscalar_mul`], which handles the special case","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206633,"byte_end":206698,"line_start":241,"line_end":241,"column_start":1,"column_end":66}},{"value":"/ where \\\\(n = 0\\\\) and there are no dynamic points;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206699,"byte_end":206753,"line_start":242,"line_end":242,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206754,"byte_end":206757,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206758,"byte_end":206822,"line_start":244,"line_end":244,"column_start":1,"column_end":65}},{"value":"/ points as already-validated `Point`s and is infallible;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206823,"byte_end":206882,"line_start":245,"line_end":245,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206883,"byte_end":206886,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ * [`optional_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206887,"byte_end":206952,"line_start":247,"line_end":247,"column_start":1,"column_end":66}},{"value":"/ points as `Option<Point>`s and returns an `Option<Point>`,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":206953,"byte_end":207015,"line_start":248,"line_end":248,"column_start":1,"column_end":63}},{"value":"/ allowing decompression to be composed into the input iterators.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207016,"byte_end":207083,"line_start":249,"line_end":249,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207084,"byte_end":207087,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ All methods require that the lengths of the input iterators be","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207088,"byte_end":207154,"line_start":251,"line_end":251,"column_start":1,"column_end":67}},{"value":"/ known and matching, as if they were `ExactSizeIterator`s.  (It","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207155,"byte_end":207221,"line_start":252,"line_end":252,"column_start":1,"column_end":67}},{"value":"/ does not require `ExactSizeIterator` only because that trait is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207222,"byte_end":207289,"line_start":253,"line_end":253,"column_start":1,"column_end":68}},{"value":"/ broken).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207290,"byte_end":207302,"line_start":254,"line_end":254,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207432,"byte_end":207437,"line_start":257,"line_end":257,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimePrecomputedMultiscalarMul::Point","value":"type Point: Clone;","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" The type of point to be multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point to be multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207359,"byte_end":207422,"line_start":256,"line_end":256,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207566,"byte_end":207569,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"new","qualname":"::traits::VartimePrecomputedMultiscalarMul::new","value":"pub fn new<I>(I) -> Self where I: IntoIterator, I::Item: Borrow<Self::Point>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given the static points \\\\( B_i \\\\), perform precomputation\n and return the precomputation data.\n","sig":null,"attributes":[{"value":"/ Given the static points \\\\( B_i \\\\), perform precomputation","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207451,"byte_end":207514,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ and return the precomputation data.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207519,"byte_end":207558,"line_start":260,"line_end":260,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208262,"byte_end":208285,"line_start":280,"line_end":280,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I>(&Self, I) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), compute\n $$\n Q = b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207677,"byte_end":207734,"line_start":266,"line_end":266,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), compute","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207739,"byte_end":207761,"line_start":267,"line_end":267,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207766,"byte_end":207772,"line_start":268,"line_end":268,"column_start":5,"column_end":11}},{"value":"/ Q = b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207777,"byte_end":207812,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207817,"byte_end":207823,"line_start":270,"line_end":270,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207828,"byte_end":207895,"line_start":271,"line_end":271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207900,"byte_end":207903,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207908,"byte_end":207966,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207971,"byte_end":207996,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208001,"byte_end":208004,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the input must","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208009,"byte_end":208073,"line_start":276,"line_end":276,"column_start":5,"column_end":69}},{"value":"/ be convertable to iterators (`I: IntoIter`), and the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208078,"byte_end":208134,"line_start":277,"line_end":277,"column_start":5,"column_end":61}},{"value":"/ iterator's items must be `Borrow<Scalar>`, to allow iterators","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208139,"byte_end":208204,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/ returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208209,"byte_end":208254,"line_start":279,"line_end":279,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209387,"byte_end":209416,"line_start":311,"line_end":311,"column_start":8,"column_end":37},"name":"vartime_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_mixed_multiscalar_mul","value":"pub fn vartime_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K) -> Self::Point\nwhere I: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Scalar>, K: IntoIterator, K::Item: Borrow<Self::Point>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208620,"byte_end":208677,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208682,"byte_end":208745,"line_start":296,"line_end":296,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208750,"byte_end":208808,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208813,"byte_end":208835,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208840,"byte_end":208846,"line_start":299,"line_end":299,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208851,"byte_end":208915,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208920,"byte_end":208926,"line_start":301,"line_end":301,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":208931,"byte_end":208998,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209003,"byte_end":209006,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209011,"byte_end":209069,"line_start":304,"line_end":304,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209074,"byte_end":209099,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209104,"byte_end":209107,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209112,"byte_end":209180,"line_start":307,"line_end":307,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209185,"byte_end":209255,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209260,"byte_end":209319,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209324,"byte_end":209379,"line_start":310,"line_end":310,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210797,"byte_end":210827,"line_start":352,"line_end":352,"column_start":8,"column_end":38},"name":"optional_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::optional_mixed_multiscalar_mul","value":"pub fn optional_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K)\n-> Option<Self::Point> where I: IntoIterator, I::Item: Borrow<Scalar>,\nJ: IntoIterator, J::Item: Borrow<Scalar>, K: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":209974,"byte_end":210031,"line_start":334,"line_end":334,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210036,"byte_end":210099,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210104,"byte_end":210162,"line_start":336,"line_end":336,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210167,"byte_end":210189,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210194,"byte_end":210200,"line_start":338,"line_end":338,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210205,"byte_end":210269,"line_start":339,"line_end":339,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210274,"byte_end":210280,"line_start":340,"line_end":340,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210285,"byte_end":210352,"line_start":341,"line_end":341,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210357,"byte_end":210360,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If any of the dynamic points were `None`, return `None`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210365,"byte_end":210425,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210430,"byte_end":210433,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210438,"byte_end":210496,"line_start":345,"line_end":345,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210501,"byte_end":210526,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210531,"byte_end":210534,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210539,"byte_end":210605,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210610,"byte_end":210676,"line_start":349,"line_end":349,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210681,"byte_end":210740,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":210745,"byte_end":210789,"line_start":351,"line_end":351,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214218,"byte_end":214229,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<FieldElement>::is_negative","value":"pub fn is_negative(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is negative, in the sense\n used in the ed25519 paper: `x` is negative if the low bit is\n set.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is negative, in the sense","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213956,"byte_end":214018,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ used in the ed25519 paper: `x` is negative if the low bit is","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214023,"byte_end":214087,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/ set.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214092,"byte_end":214100,"line_start":75,"line_end":75,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214105,"byte_end":214108,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214113,"byte_end":214125,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214130,"byte_end":214133,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If negative, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214138,"byte_end":214206,"line_start":79,"line_end":79,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214486,"byte_end":214493,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is zero.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214327,"byte_end":214372,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214377,"byte_end":214380,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214385,"byte_end":214397,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214402,"byte_end":214405,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":214410,"byte_end":214474,"line_start":89,"line_end":89,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":216638,"byte_end":216650,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<FieldElement>::batch_invert","value":"pub fn batch_invert(&mut [FieldElement])","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of public `FieldElements`, replace each with its inverse.","sig":null,"attributes":[{"value":"/ Given a slice of public `FieldElements`, replace each with its inverse.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":216458,"byte_end":216533,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":216538,"byte_end":216541,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ All input `FieldElements` **MUST** be nonzero.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":216546,"byte_end":216596,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":216601,"byte_end":216626,"line_start":138,"line_end":138,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":217956,"byte_end":217962,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"pub fn invert(&Self) -> FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero field element, compute its inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero field element, compute its inverse.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":217730,"byte_end":217785,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":217790,"byte_end":217793,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The inverse is computed as self^(p-2), since","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":217798,"byte_end":217846,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/ x^(p-2)x = x^(p-1) = 1 (mod p).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":217851,"byte_end":217886,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":217891,"byte_end":217894,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This function returns zero on input zero.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":217899,"byte_end":217944,"line_start":177,"line_end":177,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":219276,"byte_end":219288,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"sqrt_ratio_i","qualname":"<FieldElement>::sqrt_ratio_i","value":"pub fn sqrt_ratio_i(&FieldElement, &FieldElement) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`\n or `sqrt(i*u/v)` in constant time.","sig":null,"attributes":[{"value":"/ Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218753,"byte_end":218818,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ or `sqrt(i*u/v)` in constant time.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218823,"byte_end":218861,"line_start":202,"line_end":202,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218866,"byte_end":218869,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218874,"byte_end":218935,"line_start":204,"line_end":204,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218940,"byte_end":218943,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218948,"byte_end":218960,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218965,"byte_end":218968,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(u/v))  ` if `v` is nonzero and `u/v` is square;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":218973,"byte_end":219045,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ - `(Choice(1), zero)        ` if `u` is zero;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":219050,"byte_end":219099,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/ - `(Choice(0), zero)        ` if `v` is zero and `u` is nonzero;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":219104,"byte_end":219172,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ - `(Choice(0), +sqrt(i*u/v))` if `u/v` is nonsquare (so `i*u/v` is square).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":219177,"byte_end":219256,"line_start":211,"line_end":211,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":219261,"byte_end":219264,"line_start":212,"line_end":212,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221597,"byte_end":221604,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"invsqrt","qualname":"<FieldElement>::invsqrt","value":"pub fn invsqrt(&Self) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Attempt to compute `sqrt(1/self)` in constant time.","sig":null,"attributes":[{"value":"/ Attempt to compute `sqrt(1/self)` in constant time.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221149,"byte_end":221204,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221209,"byte_end":221212,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `sqrt_ratio_i`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221217,"byte_end":221263,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221268,"byte_end":221271,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221276,"byte_end":221337,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221342,"byte_end":221345,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221350,"byte_end":221362,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221367,"byte_end":221370,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(1/self))  ` if `self` is a nonzero square;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221375,"byte_end":221442,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ - `(Choice(0), zero)           ` if `self` is zero;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221447,"byte_end":221502,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/ - `(Choice(0), +sqrt(i/self))  ` if `self` is a nonzero nonsquare;","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221507,"byte_end":221577,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":221582,"byte_end":221585,"line_start":272,"line_end":272,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1781},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234034,"byte_end":234048,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"FieldElement51","qualname":"::backend::serial::u64::field::FieldElement51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `FieldElement51` represents an element of the field\n \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","sig":null,"attributes":[{"value":"/ A `FieldElement51` represents an element of the field","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233390,"byte_end":233447,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/ \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233448,"byte_end":233487,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233488,"byte_end":233491,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the 64-bit implementation, a `FieldElement` is represented in","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233492,"byte_end":233560,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ radix \\\\(2\\^{51}\\\\) as five `u64`s; the coefficients are allowed to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233561,"byte_end":233632,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ grow up to \\\\(2\\^{54}\\\\) between reductions modulo \\\\(p\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233633,"byte_end":233696,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233697,"byte_end":233700,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233701,"byte_end":233711,"line_start":32,"line_end":32,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233712,"byte_end":233715,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The `curve25519_dalek::field` module provides a type alias","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233716,"byte_end":233778,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/ `curve25519_dalek::field::FieldElement` to either `FieldElement51`","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233779,"byte_end":233849,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ or `FieldElement2625`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233850,"byte_end":233876,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233877,"byte_end":233880,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The backend-specific type `FieldElement51` should not be used","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233881,"byte_end":233946,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/ outside of the `curve25519_dalek::field` module.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":233947,"byte_end":233999,"line_start":39,"line_end":39,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":241773,"byte_end":241779,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement51>::negate","value":"pub fn negate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the sign of this field element\n","sig":null,"attributes":[{"value":"/ Invert the sign of this field element","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":241720,"byte_end":241761,"line_start":253,"line_end":253,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":242186,"byte_end":242190,"line_start":267,"line_end":267,"column_start":12,"column_end":16},"name":"zero","qualname":"<FieldElement51>::zero","value":"pub fn zero() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct zero.\n","sig":null,"attributes":[{"value":"/ Construct zero.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":242155,"byte_end":242174,"line_start":266,"line_end":266,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":242296,"byte_end":242299,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"one","qualname":"<FieldElement51>::one","value":"pub fn one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct one.\n","sig":null,"attributes":[{"value":"/ Construct one.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":242266,"byte_end":242284,"line_start":271,"line_end":271,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":242404,"byte_end":242413,"line_start":277,"line_end":277,"column_start":12,"column_end":21},"name":"minus_one","qualname":"<FieldElement51>::minus_one","value":"pub fn minus_one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct -1.\n","sig":null,"attributes":[{"value":"/ Construct -1.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":242375,"byte_end":242392,"line_start":276,"line_end":276,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":244203,"byte_end":244213,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement51>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Load a `FieldElement51` from the low 255 bits of a 256-bit\n input.","sig":null,"attributes":[{"value":"/ Load a `FieldElement51` from the low 255 bits of a 256-bit","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243714,"byte_end":243776,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/ input.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243781,"byte_end":243791,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243796,"byte_end":243799,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243804,"byte_end":243817,"line_start":321,"line_end":321,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243822,"byte_end":243825,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This function does not check that the input used the canonical","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243830,"byte_end":243896,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/ representative.  It masks the high bit, but it will happily","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243901,"byte_end":243964,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/ decode 2^255 - 18 to 1.  Applications that require a canonical","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":243969,"byte_end":244035,"line_start":325,"line_end":325,"column_start":5,"column_end":71}},{"value":"/ encoding of every field element should decode, re-encode to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":244040,"byte_end":244103,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/ the canonical encoding, and check that the input was","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":244108,"byte_end":244164,"line_start":327,"line_end":327,"column_start":5,"column_end":61}},{"value":"/ canonical.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":244169,"byte_end":244183,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":244188,"byte_end":244191,"line_start":329,"line_end":329,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":245342,"byte_end":245350,"line_start":359,"line_end":359,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement51>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize this `FieldElement51` to a 32-byte array.  The\n encoding is canonical.\n","sig":null,"attributes":[{"value":"/ Serialize this `FieldElement51` to a 32-byte array.  The","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":245239,"byte_end":245299,"line_start":357,"line_end":357,"column_start":5,"column_end":65}},{"value":"/ encoding is canonical.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":245304,"byte_end":245330,"line_start":358,"line_end":358,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":248506,"byte_end":248511,"line_start":444,"line_end":444,"column_start":12,"column_end":17},"name":"pow2k","qualname":"<FieldElement51>::pow2k","value":"pub fn pow2k(&Self, u32) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Given `k > 0`, return `self^(2^k)`.\n","sig":null,"attributes":[{"value":"/ Given `k > 0`, return `self^(2^k)`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":248455,"byte_end":248494,"line_start":443,"line_end":443,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":252432,"byte_end":252438,"line_start":550,"line_end":550,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement51>::square","value":"pub fn square(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns the square of this field element.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":252375,"byte_end":252420,"line_start":549,"line_end":549,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":252564,"byte_end":252571,"line_start":555,"line_end":555,"column_start":12,"column_end":19},"name":"square2","qualname":"<FieldElement51>::square2","value":"pub fn square2(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns 2 times the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns 2 times the square of this field element.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":252499,"byte_end":252552,"line_start":554,"line_end":554,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273058,"byte_end":273081,"line_start":129,"line_end":129,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_POINT","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_POINT","value":"EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, as an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, as an `EdwardsPoint`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":272842,"byte_end":272890,"line_start":124,"line_end":124,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":272891,"byte_end":272894,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":272895,"byte_end":272945,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/ `ED25519_BASEPOINT_TABLE`, which should be used for scalar","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":272946,"byte_end":273008,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/ multiplication (it's much faster).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273009,"byte_end":273047,"line_start":128,"line_end":128,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":274005,"byte_end":274018,"line_start":162,"line_end":162,"column_start":11,"column_end":24},"name":"EIGHT_TORSION","qualname":"::backend::serial::u64::constants::EIGHT_TORSION","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","sig":null,"attributes":[{"value":"/ The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273635,"byte_end":273683,"line_start":154,"line_end":154,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273684,"byte_end":273687,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ In the case of Curve25519, it is cyclic; the \\\\(i\\\\)-th element of","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273688,"byte_end":273758,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/ the array is \\\\([i]P\\\\), where \\\\(P\\\\) is a point of order \\\\(8\\\\)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273759,"byte_end":273829,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/ generating \\\\(\\mathcal E[8]\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273830,"byte_end":273865,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273866,"byte_end":273869,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Thus \\\\(\\mathcal E[4]\\\\) is the points indexed by `0,2,4,6`, and","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273870,"byte_end":273938,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/ \\\\(\\mathcal E[2]\\\\) is the points indexed by `0,4`.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":273939,"byte_end":273994,"line_start":161,"line_end":161,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":274164,"byte_end":274194,"line_start":166,"line_end":166,"column_start":11,"column_end":41},"name":"EIGHT_TORSION_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::EIGHT_TORSION_INNER_DOC_HIDDEN","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" Inner item used to hide limb constants from cargo doc output.\n","sig":null,"attributes":[{"value":"/ Inner item used to hide limb constants from cargo doc output.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":274073,"byte_end":274138,"line_start":164,"line_end":164,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1131},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":278092,"byte_end":278115,"line_start":308,"line_end":308,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_TABLE","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).\n","sig":null,"attributes":[{"value":"/ Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":277994,"byte_end":278081,"line_start":307,"line_end":307,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":278285,"byte_end":278325,"line_start":312,"line_end":312,"column_start":11,"column_end":51},"name":"ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Inner constant, used to avoid filling the docs with precomputed points.\n","sig":null,"attributes":[{"value":"/ Inner constant, used to avoid filling the docs with precomputed points.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\constants.rs","byte_start":278184,"byte_end":278259,"line_start":310,"line_end":310,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535057,"byte_end":535072,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::backend::serial::curve_models::ProjectivePoint","value":"ProjectivePoint { X, Y, Z }","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800}],"decl_id":null,"docs":" A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb\n P\\^2\\\\) model of the curve.\n A point \\\\((x,y)\\\\) in the affine model corresponds to\n \\\\((x:y:1)\\\\).","sig":null,"attributes":[{"value":"/ A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":534717,"byte_end":534783,"line_start":143,"line_end":143,"column_start":1,"column_end":67}},{"value":"/ P\\^2\\\\) model of the curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":534784,"byte_end":534815,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/ A point \\\\((x,y)\\\\) in the affine model corresponds to","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":534816,"byte_end":534874,"line_start":145,"line_end":145,"column_start":1,"column_end":59}},{"value":"/ \\\\((x:y:1)\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":534875,"byte_end":534893,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":534894,"byte_end":534897,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":534898,"byte_end":534970,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":534971,"byte_end":535022,"line_start":149,"line_end":149,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535083,"byte_end":535084,"line_start":152,"line_end":152,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::ProjectivePoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535108,"byte_end":535109,"line_start":153,"line_end":153,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::ProjectivePoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535133,"byte_end":535134,"line_start":154,"line_end":154,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectivePoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535545,"byte_end":535559,"line_start":166,"line_end":166,"column_start":12,"column_end":26},"name":"CompletedPoint","qualname":"::backend::serial::curve_models::CompletedPoint","value":"CompletedPoint { X, Y, Z, T }","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808}],"decl_id":null,"docs":" A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb\n P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.\n A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))\n \\\\).","sig":null,"attributes":[{"value":"/ A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535153,"byte_end":535225,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/ P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535226,"byte_end":535278,"line_start":158,"line_end":158,"column_start":1,"column_end":53}},{"value":"/ A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535279,"byte_end":535349,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/ \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535350,"byte_end":535358,"line_start":160,"line_end":160,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535359,"byte_end":535362,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535363,"byte_end":535435,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535436,"byte_end":535487,"line_start":163,"line_end":163,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535511,"byte_end":535533,"line_start":165,"line_end":165,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535570,"byte_end":535571,"line_start":167,"line_end":167,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::CompletedPoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1806},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535595,"byte_end":535596,"line_start":168,"line_end":168,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::CompletedPoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535620,"byte_end":535621,"line_start":169,"line_end":169,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::CompletedPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1808},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535645,"byte_end":535646,"line_start":170,"line_end":170,"column_start":9,"column_end":10},"name":"T","qualname":"::backend::serial::curve_models::CompletedPoint::T","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536041,"byte_end":536057,"line_start":181,"line_end":181,"column_start":12,"column_end":28},"name":"AffineNielsPoint","qualname":"::backend::serial::curve_models::AffineNielsPoint","value":"AffineNielsPoint { y_plus_x, y_minus_x, xy2d }","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815}],"decl_id":null,"docs":" A pre-computed point in the affine model for the curve, represented as\n \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point in the affine model for the curve, represented as","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535665,"byte_end":535739,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535740,"byte_end":535790,"line_start":174,"line_end":174,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535791,"byte_end":535794,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535795,"byte_end":535867,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":535868,"byte_end":535919,"line_start":177,"line_end":177,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536007,"byte_end":536029,"line_start":180,"line_end":180,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536068,"byte_end":536076,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"name":"y_plus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_plus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536101,"byte_end":536110,"line_start":183,"line_end":183,"column_start":9,"column_end":18},"name":"y_minus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_minus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536134,"byte_end":536138,"line_start":184,"line_end":184,"column_start":9,"column_end":13},"name":"xy2d","qualname":"::backend::serial::curve_models::AffineNielsPoint::xy2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1826},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536637,"byte_end":536657,"line_start":201,"line_end":201,"column_start":12,"column_end":32},"name":"ProjectiveNielsPoint","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint","value":"ProjectiveNielsPoint { Y_plus_X, Y_minus_X, Z, T2d }","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830}],"decl_id":null,"docs":" A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the\n curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536331,"byte_end":536397,"line_start":195,"line_end":195,"column_start":1,"column_end":67}},{"value":"/ curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536398,"byte_end":536473,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536474,"byte_end":536477,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536478,"byte_end":536550,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536551,"byte_end":536602,"line_start":199,"line_end":199,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536668,"byte_end":536676,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"name":"Y_plus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_plus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536701,"byte_end":536710,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"name":"Y_minus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_minus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536734,"byte_end":536735,"line_start":204,"line_end":204,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536767,"byte_end":536770,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"T2d","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::T2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":1826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":540977,"byte_end":540988,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<ProjectivePoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the\n \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":540804,"byte_end":540869,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":540874,"byte_end":540905,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":540910,"byte_end":540913,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M + 1 \\mathrm S\\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":540918,"byte_end":540965,"line_start":331,"line_end":331,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541396,"byte_end":541409,"line_start":347,"line_end":347,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<CompletedPoint>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541216,"byte_end":541284,"line_start":343,"line_end":343,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541289,"byte_end":541337,"line_start":344,"line_end":344,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541342,"byte_end":541345,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541350,"byte_end":541384,"line_start":346,"line_end":346,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541767,"byte_end":541778,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<CompletedPoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541587,"byte_end":541655,"line_start":355,"line_end":355,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541660,"byte_end":541708,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541713,"byte_end":541716,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(4 \\mathrm M \\\\).","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541721,"byte_end":541755,"line_start":358,"line_end":358,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":542227,"byte_end":542233,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"pub fn double(&Self) -> CompletedPoint","parent":null,"children":[],"decl_id":null,"docs":" Double this point: return self + self\n","sig":null,"attributes":[{"value":"/ Double this point: return self + self","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":542174,"byte_end":542215,"line_start":374,"line_end":374,"column_start":5,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24012,"byte_end":24018,"line_start":202,"line_end":202,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25826,"byte_end":25832,"line_start":255,"line_end":255,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25994,"byte_end":26000,"line_start":261,"line_end":261,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26023,"byte_end":26029,"line_start":262,"line_end":262,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26151,"byte_end":26157,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26276,"byte_end":26282,"line_start":274,"line_end":274,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26519,"byte_end":26525,"line_start":283,"line_end":283,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":27018,"byte_end":27024,"line_start":300,"line_end":300,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":27969,"byte_end":27975,"line_start":326,"line_end":326,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":29322,"byte_end":29328,"line_start":363,"line_end":363,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":29443,"byte_end":29449,"line_start":370,"line_end":370,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31392,"byte_end":31398,"line_start":432,"line_end":432,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31604,"byte_end":31610,"line_start":444,"line_end":444,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31811,"byte_end":31817,"line_start":456,"line_end":456,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31899,"byte_end":31905,"line_start":462,"line_end":462,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":32061,"byte_end":32067,"line_start":470,"line_end":470,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":32300,"byte_end":32306,"line_start":479,"line_end":479,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":32539,"byte_end":32545,"line_start":488,"line_end":488,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33277,"byte_end":33283,"line_start":518,"line_end":518,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33516,"byte_end":33522,"line_start":527,"line_end":527,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33597,"byte_end":33603,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":55004,"byte_end":55018,"line_start":1119,"line_end":1119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":79913,"byte_end":79928,"line_start":73,"line_end":73,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80164,"byte_end":80179,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80283,"byte_end":80298,"line_start":88,"line_end":88,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80419,"byte_end":80434,"line_start":94,"line_end":94,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80456,"byte_end":80471,"line_start":96,"line_end":96,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80542,"byte_end":80557,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":82678,"byte_end":82693,"line_start":168,"line_end":168,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":82870,"byte_end":82885,"line_start":177,"line_end":177,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":83004,"byte_end":83019,"line_start":183,"line_end":183,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":83346,"byte_end":83361,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":86828,"byte_end":86843,"line_start":298,"line_end":298,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95516,"byte_end":95534,"line_start":156,"line_end":156,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95669,"byte_end":95687,"line_start":162,"line_end":162,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95842,"byte_end":95860,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101223,"byte_end":101241,"line_start":323,"line_end":323,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101521,"byte_end":101539,"line_start":332,"line_end":332,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101636,"byte_end":101654,"line_start":338,"line_end":338,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":102009,"byte_end":102021,"line_start":353,"line_end":353,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":102265,"byte_end":102277,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":102576,"byte_end":102588,"line_start":374,"line_end":374,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":103024,"byte_end":103036,"line_start":387,"line_end":387,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":103642,"byte_end":103654,"line_start":402,"line_end":402,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":104217,"byte_end":104229,"line_start":415,"line_end":415,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":104347,"byte_end":104359,"line_start":421,"line_end":421,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":104543,"byte_end":104555,"line_start":427,"line_end":427,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":107030,"byte_end":107042,"line_start":502,"line_end":502,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":107717,"byte_end":107729,"line_start":522,"line_end":522,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":108260,"byte_end":108272,"line_start":539,"line_end":539,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":108476,"byte_end":108488,"line_start":547,"line_end":547,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":109114,"byte_end":109126,"line_start":577,"line_end":577,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":109434,"byte_end":109446,"line_start":589,"line_end":589,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":110889,"byte_end":110901,"line_start":632,"line_end":632,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":111880,"byte_end":111892,"line_start":664,"line_end":664,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":113390,"byte_end":113418,"line_start":706,"line_end":706,"column_start":43,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114151,"byte_end":114163,"line_start":735,"line_end":735,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114846,"byte_end":114867,"line_start":755,"line_end":755,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":117402,"byte_end":117423,"line_start":824,"line_end":824,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118193,"byte_end":118205,"line_start":846,"line_end":846,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120728,"byte_end":120740,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120980,"byte_end":121001,"line_start":933,"line_end":933,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147605,"byte_end":147624,"line_start":214,"line_end":214,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147750,"byte_end":147769,"line_start":220,"line_end":220,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":150709,"byte_end":150728,"line_start":307,"line_end":307,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":150839,"byte_end":150858,"line_start":313,"line_end":313,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155296,"byte_end":155310,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":158103,"byte_end":158121,"line_start":519,"line_end":519,"column_start":14,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":158276,"byte_end":158294,"line_start":525,"line_end":525,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166067,"byte_end":166081,"line_start":740,"line_end":740,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166197,"byte_end":166211,"line_start":746,"line_end":746,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166479,"byte_end":166493,"line_start":756,"line_end":756,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166625,"byte_end":166639,"line_start":762,"line_end":762,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":167120,"byte_end":167134,"line_start":779,"line_end":779,"column_start":13,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":167654,"byte_end":167668,"line_start":795,"line_end":795,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168206,"byte_end":168220,"line_start":813,"line_end":813,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168429,"byte_end":168443,"line_start":821,"line_end":821,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168812,"byte_end":168826,"line_start":841,"line_end":841,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168960,"byte_end":168974,"line_start":849,"line_end":849,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":170216,"byte_end":170230,"line_start":886,"line_end":886,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":170717,"byte_end":170731,"line_start":904,"line_end":904,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":171615,"byte_end":171645,"line_start":927,"line_end":927,"column_start":43,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":172608,"byte_end":172622,"line_start":965,"line_end":965,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173925,"byte_end":173948,"line_start":1010,"line_end":1010,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":174573,"byte_end":174587,"line_start":1026,"line_end":1026,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":175802,"byte_end":175821,"line_start":1067,"line_end":1067,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":175987,"byte_end":176001,"line_start":1073,"line_end":1073,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199664,"byte_end":199665,"line_start":41,"line_end":41,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213439,"byte_end":213451,"line_start":55,"line_end":55,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213475,"byte_end":213487,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213617,"byte_end":213629,"line_start":63,"line_end":63,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213937,"byte_end":213949,"line_start":72,"line_end":72,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234088,"byte_end":234102,"line_start":43,"line_end":43,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234261,"byte_end":234275,"line_start":49,"line_end":49,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234384,"byte_end":234398,"line_start":55,"line_end":55,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234819,"byte_end":234833,"line_start":72,"line_end":72,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":236013,"byte_end":236027,"line_start":101,"line_end":101,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":240381,"byte_end":240395,"line_start":220,"line_end":220,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":241699,"byte_end":241713,"line_start":252,"line_end":252,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253580,"byte_end":253588,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253741,"byte_end":253749,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253837,"byte_end":253845,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253976,"byte_end":253984,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":254207,"byte_end":254215,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536179,"byte_end":536195,"line_start":187,"line_end":187,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536812,"byte_end":536832,"line_start":208,"line_end":208,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537203,"byte_end":537218,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537432,"byte_end":537452,"line_start":233,"line_end":233,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537742,"byte_end":537762,"line_start":244,"line_end":244,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537876,"byte_end":537892,"line_start":250,"line_end":250,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":538130,"byte_end":538146,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":538453,"byte_end":538468,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":539107,"byte_end":539127,"line_start":289,"line_end":289,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":539934,"byte_end":539950,"line_start":307,"line_end":307,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":540782,"byte_end":540797,"line_start":327,"line_end":327,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541195,"byte_end":541209,"line_start":342,"line_end":342,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":542152,"byte_end":542167,"line_start":373,"line_end":373,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":546680,"byte_end":546695,"line_start":522,"line_end":522,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":546917,"byte_end":546931,"line_start":529,"line_end":529,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":547173,"byte_end":547189,"line_start":536,"line_end":536,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":547448,"byte_end":547468,"line_start":543,"line_end":543,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\straus.rs","byte_start":553834,"byte_end":553840,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\straus.rs","byte_start":557837,"byte_end":557843,"line_start":145,"line_end":145,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\precomputed_straus.rs","byte_start":560406,"byte_end":560430,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\pippenger.rs","byte_start":565616,"byte_end":565625,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":572297,"byte_end":572308,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573163,"byte_end":573174,"line_start":75,"line_end":75,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573290,"byte_end":573301,"line_start":81,"line_end":81,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573474,"byte_end":573485,"line_start":87,"line_end":87,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573797,"byte_end":573808,"line_start":97,"line_end":97,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574158,"byte_end":574169,"line_start":108,"line_end":108,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574426,"byte_end":574441,"line_start":121,"line_end":121,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574692,"byte_end":574707,"line_start":131,"line_end":131,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574884,"byte_end":574899,"line_start":137,"line_end":137,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":575285,"byte_end":575300,"line_start":149,"line_end":149,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":575759,"byte_end":575774,"line_start":165,"line_end":165,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":575947,"byte_end":575962,"line_start":174,"line_end":174,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":576239,"byte_end":576254,"line_start":184,"line_end":184,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":576653,"byte_end":576668,"line_start":196,"line_end":196,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":13069,"byte_end":13075,"line_start":285,"line_end":285,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":13143,"byte_end":13153,"line_start":288,"line_end":288,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":269}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":13218,"byte_end":13225,"line_start":291,"line_end":291,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":348}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":13279,"byte_end":13288,"line_start":294,"line_end":294,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":578}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":13347,"byte_end":13356,"line_start":297,"line_end":297,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":812}},{"kind":"Mod","span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\lib.rs","byte_start":13402,"byte_end":13408,"line_start":300,"line_end":300,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":838}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":24012,"byte_end":24018,"line_start":202,"line_end":202,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25826,"byte_end":25832,"line_start":255,"line_end":255,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":25994,"byte_end":26000,"line_start":261,"line_end":261,"column_start":13,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2509}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26023,"byte_end":26029,"line_start":262,"line_end":262,"column_start":20,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2504}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26151,"byte_end":26157,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1512},"to":{"krate":22,"index":58}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26276,"byte_end":26282,"line_start":274,"line_end":274,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":3149}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":26519,"byte_end":26525,"line_start":283,"line_end":283,"column_start":36,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2959}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":27018,"byte_end":27024,"line_start":300,"line_end":300,"column_start":36,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2951}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":27969,"byte_end":27975,"line_start":326,"line_end":326,"column_start":36,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2955}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":29322,"byte_end":29328,"line_start":363,"line_end":363,"column_start":18,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2947}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":29443,"byte_end":29449,"line_start":370,"line_end":370,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1512},"to":{"krate":22,"index":66}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31392,"byte_end":31398,"line_start":432,"line_end":432,"column_start":24,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":7117}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31604,"byte_end":31610,"line_start":444,"line_end":444,"column_start":20,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":7113}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31811,"byte_end":31817,"line_start":456,"line_end":456,"column_start":18,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":31899,"byte_end":31905,"line_start":462,"line_end":462,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":32061,"byte_end":32067,"line_start":470,"line_end":470,"column_start":20,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":32300,"byte_end":32306,"line_start":479,"line_end":479,"column_start":20,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":32539,"byte_end":32545,"line_start":488,"line_end":488,"column_start":20,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33277,"byte_end":33283,"line_start":518,"line_end":518,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1512},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33516,"byte_end":33522,"line_start":527,"line_end":527,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1512},"to":{"krate":21,"index":48}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":33597,"byte_end":33603,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\scalar.rs","byte_start":55004,"byte_end":55018,"line_start":1119,"line_end":1119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":79913,"byte_end":79928,"line_start":73,"line_end":73,"column_start":25,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1561},"to":{"krate":22,"index":58}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80164,"byte_end":80179,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80283,"byte_end":80298,"line_start":88,"line_end":88,"column_start":20,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2504}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80419,"byte_end":80434,"line_start":94,"line_end":94,"column_start":13,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2509}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80456,"byte_end":80471,"line_start":96,"line_end":96,"column_start":18,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1561},"to":{"krate":21,"index":48}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":80542,"byte_end":80557,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":82678,"byte_end":82693,"line_start":168,"line_end":168,"column_start":19,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1574},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":82870,"byte_end":82885,"line_start":177,"line_end":177,"column_start":18,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1574},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":83004,"byte_end":83019,"line_start":183,"line_end":183,"column_start":34,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1574},"to":{"krate":22,"index":66}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":83346,"byte_end":83361,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\montgomery.rs","byte_start":86828,"byte_end":86843,"line_start":298,"line_end":298,"column_start":36,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":2959}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95516,"byte_end":95534,"line_start":156,"line_end":156,"column_start":25,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1606},"to":{"krate":22,"index":58}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95669,"byte_end":95687,"line_start":162,"line_end":162,"column_start":16,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1606},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":95842,"byte_end":95860,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101223,"byte_end":101241,"line_start":323,"line_end":323,"column_start":19,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1606},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101521,"byte_end":101539,"line_start":332,"line_end":332,"column_start":18,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1606},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":101636,"byte_end":101654,"line_start":338,"line_end":338,"column_start":6,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":102009,"byte_end":102021,"line_start":353,"line_end":353,"column_start":19,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":102265,"byte_end":102277,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":102576,"byte_end":102588,"line_start":374,"line_end":374,"column_start":24,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":887}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":103024,"byte_end":103036,"line_start":387,"line_end":387,"column_start":34,"column_end":46},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1625},"to":{"krate":22,"index":66}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":103642,"byte_end":103654,"line_start":402,"line_end":402,"column_start":25,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1625},"to":{"krate":22,"index":58}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":104217,"byte_end":104229,"line_start":415,"line_end":415,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2504}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":104347,"byte_end":104359,"line_start":421,"line_end":421,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2509}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":104543,"byte_end":104555,"line_start":427,"line_end":427,"column_start":6,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":107030,"byte_end":107042,"line_start":502,"line_end":502,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":107717,"byte_end":107729,"line_start":522,"line_end":522,"column_start":42,"column_end":54},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2951}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":108260,"byte_end":108272,"line_start":539,"line_end":539,"column_start":42,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2955}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":108476,"byte_end":108488,"line_start":547,"line_end":547,"column_start":20,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":7113}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":109114,"byte_end":109126,"line_start":577,"line_end":577,"column_start":14,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2947}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":109434,"byte_end":109446,"line_start":589,"line_end":589,"column_start":36,"column_end":48},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":2959}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":110889,"byte_end":110901,"line_start":632,"line_end":632,"column_start":25,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":855}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":111880,"byte_end":111892,"line_start":664,"line_end":664,"column_start":32,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1625},"to":{"krate":0,"index":860}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":113390,"byte_end":113418,"line_start":706,"line_end":706,"column_start":43,"column_end":71},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":869}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114151,"byte_end":114163,"line_start":735,"line_end":735,"column_start":6,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":114846,"byte_end":114867,"line_start":755,"line_end":755,"column_start":6,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":117402,"byte_end":117423,"line_start":824,"line_end":824,"column_start":6,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":118193,"byte_end":118205,"line_start":846,"line_end":846,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120728,"byte_end":120740,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1625},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\edwards.rs","byte_start":120980,"byte_end":121001,"line_start":933,"line_end":933,"column_start":16,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1683},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147605,"byte_end":147624,"line_start":214,"line_end":214,"column_start":25,"column_end":44},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1689},"to":{"krate":22,"index":58}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":147750,"byte_end":147769,"line_start":220,"line_end":220,"column_start":6,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":150709,"byte_end":150728,"line_start":307,"line_end":307,"column_start":19,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1689},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":150839,"byte_end":150858,"line_start":313,"line_end":313,"column_start":18,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1689},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":155296,"byte_end":155310,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":158103,"byte_end":158121,"line_start":519,"line_end":519,"column_start":14,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":158276,"byte_end":158294,"line_start":525,"line_end":525,"column_start":47,"column_end":65},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1714},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166067,"byte_end":166081,"line_start":740,"line_end":740,"column_start":19,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1708},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166197,"byte_end":166211,"line_start":746,"line_end":746,"column_start":18,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166479,"byte_end":166493,"line_start":756,"line_end":756,"column_start":20,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2504}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":166625,"byte_end":166639,"line_start":762,"line_end":762,"column_start":25,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1708},"to":{"krate":22,"index":58}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":167120,"byte_end":167134,"line_start":779,"line_end":779,"column_start":13,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2509}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":167654,"byte_end":167668,"line_start":795,"line_end":795,"column_start":44,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2951}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168206,"byte_end":168220,"line_start":813,"line_end":813,"column_start":44,"column_end":58},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2955}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168429,"byte_end":168443,"line_start":821,"line_end":821,"column_start":20,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":7113}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168812,"byte_end":168826,"line_start":841,"line_end":841,"column_start":14,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2947}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":168960,"byte_end":168974,"line_start":849,"line_end":849,"column_start":36,"column_end":50},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":2959}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":170216,"byte_end":170230,"line_start":886,"line_end":886,"column_start":25,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1708},"to":{"krate":0,"index":855}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":170717,"byte_end":170731,"line_start":904,"line_end":904,"column_start":32,"column_end":46},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1708},"to":{"krate":0,"index":860}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":171615,"byte_end":171645,"line_start":927,"line_end":927,"column_start":43,"column_end":73},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":777},"to":{"krate":0,"index":869}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":172608,"byte_end":172622,"line_start":965,"line_end":965,"column_start":6,"column_end":20},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":173925,"byte_end":173948,"line_start":1010,"line_end":1010,"column_start":6,"column_end":29},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":174573,"byte_end":174587,"line_start":1026,"line_end":1026,"column_start":34,"column_end":48},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1708},"to":{"krate":22,"index":66}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":175802,"byte_end":175821,"line_start":1067,"line_end":1067,"column_start":16,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1689},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\ristretto.rs","byte_start":175987,"byte_end":176001,"line_start":1073,"line_end":1073,"column_start":16,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":199664,"byte_end":199665,"line_start":41,"line_end":41,"column_start":24,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":850}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\traits.rs","byte_start":207347,"byte_end":207352,"line_start":255,"line_end":255,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":2858},"to":{"krate":0,"index":869}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213439,"byte_end":213451,"line_start":55,"line_end":55,"column_start":13,"column_end":25},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":2509}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213475,"byte_end":213487,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":2504}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213617,"byte_end":213629,"line_start":63,"line_end":63,"column_start":25,"column_end":37},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":916},"to":{"krate":22,"index":58}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\field.rs","byte_start":213937,"byte_end":213949,"line_start":72,"line_end":72,"column_start":6,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234088,"byte_end":234102,"line_start":43,"line_end":43,"column_start":16,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234261,"byte_end":234275,"line_start":49,"line_end":49,"column_start":18,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1781},"to":{"krate":21,"index":48}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234384,"byte_end":234398,"line_start":55,"line_end":55,"column_start":44,"column_end":58},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":2951}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":234819,"byte_end":234833,"line_start":72,"line_end":72,"column_start":44,"column_end":58},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":2955}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":236013,"byte_end":236027,"line_start":101,"line_end":101,"column_start":44,"column_end":58},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1781},"to":{"krate":1,"index":2959}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":240381,"byte_end":240395,"line_start":220,"line_end":220,"column_start":34,"column_end":48},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1781},"to":{"krate":22,"index":66}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\field.rs","byte_start":241699,"byte_end":241713,"line_start":252,"line_end":252,"column_start":6,"column_end":20},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253580,"byte_end":253588,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253741,"byte_end":253749,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1789},"to":{"krate":21,"index":48}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253837,"byte_end":253845,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":3149}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":253976,"byte_end":253984,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1789},"to":{"krate":1,"index":3153}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\u64\\scalar.rs","byte_start":254207,"byte_end":254215,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536179,"byte_end":536195,"line_start":187,"line_end":187,"column_start":18,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1812},"to":{"krate":21,"index":48}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":536812,"byte_end":536832,"line_start":208,"line_end":208,"column_start":18,"column_end":38},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1826},"to":{"krate":21,"index":48}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537203,"byte_end":537218,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537432,"byte_end":537452,"line_start":233,"line_end":233,"column_start":19,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1826},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537742,"byte_end":537762,"line_start":244,"line_end":244,"column_start":18,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1826},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":537876,"byte_end":537892,"line_start":250,"line_end":250,"column_start":19,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1812},"to":{"krate":0,"index":848}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":538130,"byte_end":538146,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1812},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":538453,"byte_end":538468,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":887}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":539107,"byte_end":539127,"line_start":289,"line_end":289,"column_start":34,"column_end":54},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1826},"to":{"krate":22,"index":66}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":539934,"byte_end":539950,"line_start":307,"line_end":307,"column_start":34,"column_end":50},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1812},"to":{"krate":22,"index":66}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":540782,"byte_end":540797,"line_start":327,"line_end":327,"column_start":6,"column_end":21},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":541195,"byte_end":541209,"line_start":342,"line_end":342,"column_start":6,"column_end":20},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":542152,"byte_end":542167,"line_start":373,"line_end":373,"column_start":6,"column_end":21},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":546680,"byte_end":546695,"line_start":522,"line_end":522,"column_start":16,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1797},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":546917,"byte_end":546931,"line_start":529,"line_end":529,"column_start":16,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1804},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":547173,"byte_end":547189,"line_start":536,"line_end":536,"column_start":16,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1812},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\curve_models\\mod.rs","byte_start":547448,"byte_end":547468,"line_start":543,"line_end":543,"column_start":16,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1826},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\straus.rs","byte_start":553834,"byte_end":553840,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":855}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\straus.rs","byte_start":557837,"byte_end":557843,"line_start":145,"line_end":145,"column_start":32,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1300},"to":{"krate":0,"index":860}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\precomputed_straus.rs","byte_start":560406,"byte_end":560430,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1381},"to":{"krate":0,"index":869}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\backend\\serial\\scalar_mul\\pippenger.rs","byte_start":565616,"byte_end":565625,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1410},"to":{"krate":0,"index":860}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":572297,"byte_end":572308,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573163,"byte_end":573174,"line_start":75,"line_end":75,"column_start":37,"column_end":48},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":2831}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573290,"byte_end":573301,"line_start":81,"line_end":81,"column_start":26,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573474,"byte_end":573485,"line_start":87,"line_end":87,"column_start":37,"column_end":48},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":573797,"byte_end":573808,"line_start":97,"line_end":97,"column_start":37,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1834},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574158,"byte_end":574169,"line_start":108,"line_end":108,"column_start":21,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1834},"to":{"krate":21,"index":48}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574426,"byte_end":574441,"line_start":121,"line_end":121,"column_start":15,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574692,"byte_end":574707,"line_start":131,"line_end":131,"column_start":26,"column_end":41},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1844},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":574884,"byte_end":574899,"line_start":137,"line_end":137,"column_start":37,"column_end":52},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1844},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":575285,"byte_end":575300,"line_start":149,"line_end":149,"column_start":37,"column_end":52},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1844},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":575759,"byte_end":575774,"line_start":165,"line_end":165,"column_start":15,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":575947,"byte_end":575962,"line_start":174,"line_end":174,"column_start":26,"column_end":41},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1854},"to":{"krate":1,"index":8894}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":576239,"byte_end":576254,"line_start":184,"line_end":184,"column_start":37,"column_end":52},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1854},"to":{"krate":1,"index":2759}},{"span":{"file_name":"C:\\Users\\sagar\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\curve25519-dalek-2.1.3\\src\\window.rs","byte_start":576653,"byte_end":576668,"line_start":196,"line_end":196,"column_start":37,"column_end":52},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1854},"to":{"krate":1,"index":2759}}]}